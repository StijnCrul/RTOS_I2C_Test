ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"cy_scb_uart.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.Cy_SCB_ReadRxFifo,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	Cy_SCB_ReadRxFifo, %function
  25              	Cy_SCB_ReadRxFifo:
  26              	.LFB166:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\scb\\cy_scb_common.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \file cy_scb_common.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \version 2.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Provides common API declarations of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The Serial Communications Block (SCB) supports three serial communication 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * protocols: Serial Peripheral Interface (SPI), Universal Asynchronous Receiver 
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Transmitter (UART), and Inter Integrated Circuit (I2C or IIC). Only one of 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * the protocols is supported by an SCB at any given time.
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The functions and other declarations used in this driver are in cy_scb_spi.h, 
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_uart.h, cy_scb_ezi2c.h, cy_scb_i2c.h respectively. Include cy_pdl.h 
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * (ModusToolbox only) to get access to all functions and declarations in the PDL.
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common Common
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_ezi2c  EZI2C (SCB)
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_i2c    I2C (SCB)
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_spi    SPI (SCB)
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 2


  31:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_uart   UART (SCB)
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \} */
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Common API for the Serial Communication Block.
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This is the common API that provides an interface to the SCB hardware.
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The I2C, SPI, and UART drivers use this common API.
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Most users will use individual drivers and do not need to use the common
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * API for the SCB. However, you can use the common SCB API to implement
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a custom driver based on the SCB hardware.
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The functions and other declarations used in this part of the driver are in 
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_common.h. You can include either of cy_scb_spi.h, cy_scb_uart.h, 
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * cy_scb_ezi2c.h, cy_scb_i2c.h depending on the desired functionality. 
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * You can also include cy_pdl.h to get access to all functions and declarations 
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * in the PDL.
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_configuration Configuration Considerations
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ********************************************************************************
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This is not a driver and it does not require configuration.
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Refer to the SCB chapter of the technical reference manual (TRM).
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_MISRA MISRA-C Compliance
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * <table class="doxtable">
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>MISRA rule</th>
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Rule Class (Required/Advisory)</th>
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Rule Description</th>
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <th>Description of Deviation(s)</th>
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>11.4</td>
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>A</td>
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>A cast should not be performed between a pointer to object type and
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         a different pointer to object type.</td>
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>The pointer to the buffer memory is void to allow handling of
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         different data types: uint8_t (4-8 bits) or uint16_t (9-16 bits).
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         The cast operation is safe because the configuration is verified
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         before operation is performed.
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         </td>
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * </table>
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \section group_scb_common_changelog Changelog
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 3


  88:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * <table class="doxtable">
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td rowspan="2">2.20</td>
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Flattened the organization of the driver source code into the single 
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         source directory and the single include directory.
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     </td>
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Driver library directory-structure simplification.</td>
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Added register access layer. Use register access macros instead
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         of direct register access using dereferenced pointers.</td>
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Makes register access device-independent, so that the PDL does 
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         not need to be recompiled for each supported part number.</td>
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>2.10</td>
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>None.</td>
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>SCB I2C driver updated.</td>
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td rowspan="2"> 2.0</td>
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Added parameters validation for public API.
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Fixed functions which return interrupt status to return only defined
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *         set of interrupt statuses.</td>
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   <tr>
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>1.0</td>
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td>Initial version.</td>
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *     <td></td>
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *   </tr>
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * </table>
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros Macros
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_functions Functions
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_data_structures Data Structures
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #if !defined(CY_SCB_COMMON_H)
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_COMMON_H
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stdint.h>
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stddef.h>
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include <stdbool.h>
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_device.h"
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_device_headers.h"
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_syslib.h"
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #include "cy_syspm.h"
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #ifdef CY_IP_MXSCB
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #if defined(__cplusplus)
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 4


 145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** extern "C" {
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #endif
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                            Function Prototypes
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_functions
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_ReadRxFifo    (CySCB_Type const *base);
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxFifoLevel(CySCB_Type *base, uint32_t level);
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInRxFifo(CySCB_Type const *base);
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxSrValid  (CySCB_Type const *base);
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearRxFifo   (CySCB_Type *base);
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_WriteTxFifo   (CySCB_Type *base, uint32_t data);
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxFifoLevel(CySCB_Type *base, uint32_t level);
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInTxFifo(CySCB_Type const *base);
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxSrValid  (CySCB_Type const *base);
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsTxComplete  (CySCB_Type const *base);
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearTxFifo   (CySCB_Type *base);
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetByteMode(CySCB_Type *base, bool byteMode);
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetInterruptCause(CySCB_Type const *base);
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatus(CySCB_Type const *base);
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptMask  (CySCB_Type const *base);
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatusMasked(CySCB_Type const *base);
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearRxInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetRxInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatus(CySCB_Type const *base);
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptMask  (CySCB_Type const *base);
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatusMasked(CySCB_Type const *base);
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearTxInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetTxInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatus(CySCB_Type const *base);
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetMasterInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptMask  (CySCB_Type const *base);
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatusMasked(CySCB_Type const *base);
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearMasterInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetMasterInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatus(CySCB_Type const *base);
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSlaveInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptMask  (CySCB_Type const *base);
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatusMasked(CySCB_Type const *base);
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearSlaveInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSlaveInterrupt      (CySCB_Type *base, uint32_t interruptMask);
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 5


 202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatus(CySCB_Type const *base);
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetI2CInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptMask  (CySCB_Type const *base);
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatusMasked(CySCB_Type const *base);
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearI2CInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatus(CySCB_Type const *base);
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_SetSpiInterruptMask  (CySCB_Type *base, uint32_t interruptMask);
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptMask  (CySCB_Type const *base);
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatusMasked(CySCB_Type const *base);
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_ClearSpiInterrupt    (CySCB_Type *base, uint32_t interruptMask);
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                         Internal Function Prototypes
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_ReadArrayNoCheck  (CySCB_Type const *base, void *buffer, uint32_t size);
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_ReadArray         (CySCB_Type const *base, void *buffer, uint32_t size);
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_ReadArrayBlocking (CySCB_Type const *base, void *buffer, uint32_t size);
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_Write             (CySCB_Type *base, uint32_t data);
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteArrayNoCheck (CySCB_Type *base, void *buffer, uint32_t size);
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_WriteArray        (CySCB_Type *base, void *buffer, uint32_t size);
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size);
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteString       (CySCB_Type *base, char_t const string[]);
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** void     Cy_SCB_WriteDefaultArrayNoCheck(CySCB_Type *base, uint32_t txData, uint32_t size);
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** uint32_t Cy_SCB_WriteDefaultArray (CySCB_Type *base, uint32_t txData, uint32_t size);
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetFifoSize (CySCB_Type const *base);
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void     Cy_SCB_FwBlockReset(CySCB_Type *base);
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsRxDataWidthByte(CySCB_Type const *base);
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool     Cy_SCB_IsTxDataWidthByte(CySCB_Type const *base);
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxFifoLevel   (CySCB_Type const *base);
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \endcond */
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_functions */
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                        API Constants
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_macros
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Driver major version */
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_DRV_VERSION_MAJOR    (2)
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Driver minor version */
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_DRV_VERSION_MINOR    (20)
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** SCB driver identifier */
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_ID           CY_PDL_DRV_ID(0x2AU)
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 6


 259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Position for SCB driver sub mode */
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SUB_MODE_Pos (13UL)
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_EZI2C_ID     (0x0UL << CY_SCB_SUB_MODE_Pos)
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ID       (0x1UL << CY_SCB_SUB_MODE_Pos)
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_ID       (0x2UL << CY_SCB_SUB_MODE_Pos)
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** EZI2C mode identifier */
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_ID      (0x3UL << CY_SCB_SUB_MODE_Pos)
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_intr_cause SCB Interrupt Causes
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from Master interrupt sources */
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR SCB_INTR_CAUSE_M_Msk
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from Slave interrupt sources  */
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR  SCB_INTR_CAUSE_S_Msk
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from TX interrupt sources */
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR     SCB_INTR_CAUSE_TX_Msk
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from RX interrupt sources */
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR     SCB_INTR_CAUSE_RX_Msk
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from I2C externally clocked interrupt sources */
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR    SCB_INTR_CAUSE_I2C_EC_Msk
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** Interrupt from SPI externally clocked interrupt sources */
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR    SCB_INTR_CAUSE_SPI_EC_Msk
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_intr_cause */
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_tx_intr TX Interrupt Statuses
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number of data elements in the TX FIFO is less than the value
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * of the TX FIFO level
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_LEVEL           SCB_INTR_TX_TRIGGER_Msk
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The TX FIFO is not full */
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_NOT_FULL        SCB_INTR_TX_NOT_FULL_Msk
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The TX FIFO is empty */
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_EMPTY           SCB_INTR_TX_EMPTY_Msk
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to write to a full TX FIFO */
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_OVERFLOW        SCB_INTR_TX_OVERFLOW_Msk
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 7


 316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to read from an empty TX FIFO */
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UNDERFLOW       SCB_INTR_TX_UNDERFLOW_Msk
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The UART transfer is complete: all data elements from the TX FIFO are sent
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_DONE       SCB_INTR_TX_UART_DONE_Msk
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** SmartCard only: UART received a NACK */
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_NACK       SCB_INTR_TX_UART_NACK_Msk
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SmartCard only: the value on the TX line of the UART does not match the
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * value on the RX line
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_UART_ARB_LOST   SCB_INTR_TX_UART_ARB_LOST_Msk
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_tx_intr */
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_rx_intr RX Interrupt Statuses
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number of data elements in the RX FIFO is greater than the value of the
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * RX FIFO level
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_LEVEL             SCB_INTR_RX_TRIGGER_Msk
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The RX FIFO is not empty */
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_NOT_EMPTY         SCB_INTR_RX_NOT_EMPTY_Msk
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The RX FIFO is full */
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_FULL              SCB_INTR_RX_FULL_Msk
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to write to a full RX FIFO */
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_OVERFLOW          SCB_INTR_RX_OVERFLOW_Msk
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** An attempt to read from an empty RX FIFO */
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UNDERFLOW         SCB_INTR_RX_UNDERFLOW_Msk
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART framing error detected */
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_FRAME_ERROR  SCB_INTR_RX_FRAME_ERROR_Msk
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART parity error detected  */
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_PARITY_ERROR SCB_INTR_RX_PARITY_ERROR_Msk
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A UART break detected */
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_UART_BREAK_DETECT SCB_INTR_RX_BREAK_DETECT_Msk
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_rx_intr */
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_slave_intr Slave Interrupt Statuses
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * I2C slave lost arbitration: the value driven on the SDA line is not the same
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * as the value observed on the SDA line
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 8


 373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ARB_LOST      SCB_INTR_S_I2C_ARB_LOST_Msk
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received a NAK */
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_NACK          SCB_INTR_S_I2C_NACK_Msk
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received  an ACK */
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ACK           SCB_INTR_S_I2C_ACK_Msk
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * A Stop or Repeated Start event for a write transfer intended for this slave
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * was detected.
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_WRITE_STOP    SCB_INTR_S_I2C_WRITE_STOP_Msk
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** A Stop or Repeated Start event intended for this slave was detected */
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_STOP          SCB_INTR_S_I2C_STOP_Msk
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received a Start condition */
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_START         SCB_INTR_S_I2C_START_Msk
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave received the matching address */
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_ADDR_MATCH    SCB_INTR_S_I2C_ADDR_MATCH_Msk
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C Slave received the general call address */
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_GENERAL_ADDR  SCB_INTR_S_I2C_GENERAL_Msk
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C slave bus error (detection of unexpected Start or Stop condition) */
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_I2C_BUS_ERROR     SCB_INTR_S_I2C_BUS_ERROR_Msk
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI slave select line is deselected at an expected time during an
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SPI transfer.
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_SPI_BUS_ERROR     SCB_INTR_S_SPI_BUS_ERROR_Msk
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_slave_intr */
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_master_intr Master Interrupt Statuses
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master lost arbitration */
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_ARB_LOST    SCB_INTR_M_I2C_ARB_LOST_Msk
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master received a NACK */
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_NACK        SCB_INTR_M_I2C_NACK_Msk
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master received an ACK */
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_ACK         SCB_INTR_M_I2C_ACK_Msk
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master generated a Stop */
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_STOP        SCB_INTR_M_I2C_STOP_Msk
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** The I2C master bus error (detection of unexpected START or STOP condition)
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_I2C_BUS_ERROR   SCB_INTR_M_I2C_BUS_ERROR_Msk
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 9


 430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI master transfer is complete: all data elements transferred from the
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * TX FIFO and TX shift register.
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_SPI_DONE        SCB_INTR_M_SPI_DONE_Msk
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_master_intr */
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_i2c_intr I2C Interrupt Statuses
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Wake up request: the I2C slave received the matching address.
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Note that this interrupt source triggers in active mode.
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR_WAKEUP     SCB_INTR_I2C_EC_WAKE_UP_Msk
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_i2c_intr */
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \defgroup group_scb_common_macros_SpiIntrStatuses SPI Interrupt Statuses
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Wake up request: the SPI slave detects an active edge of the slave select
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * signal. Note that this interrupt source triggers in active mode.
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR_WAKEUP     SCB_INTR_SPI_EC_WAKE_UP_Msk
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros_SpiIntrStatuses */
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                           Internal Constants
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Default registers values */
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_DEF_VAL         (_VAL2FLD(SCB_CTRL_OVS, 15UL) | \
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_CTRL_MODE, 3UL))
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_DEF_VAL     (_VAL2FLD(SCB_I2C_CTRL_HIGH_PHASE_OVS, 8UL)        | \
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_HIGH_PHASE_OVS, 8UL)        | \
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_M_READY_DATA_ACK, 1UL)      | \
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_M_NOT_READY_DATA_NACK, 1UL) | \
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_GENERAL_IGNORE, 1UL)      | \
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_READY_ADDR_ACK, 1UL)      | \
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_READY_DATA_ACK, 1UL)      | \
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_NOT_READY_ADDR_NACK, 1UL) | \
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CTRL_S_NOT_READY_DATA_NACK, 1UL))
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CFG_DEF_VAL      (_VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_TRIM, 3UL)   | \
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_SEL, 1UL)    | \
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SCL_IN_FILT_SEL, 1UL)    | \
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT0_TRIM, 2UL) | \
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT1_TRIM, 2UL) | \
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_I2C_CFG_SDA_OUT_FILT2_TRIM, 2UL))
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_DEF_VAL     _VAL2FLD(SCB_SPI_CTRL_MODE, 3UL)
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 10


 487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_CTRL_DEF_VAL    _VAL2FLD(SCB_UART_CTRL_MODE, 3UL)
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_DEF_VAL (_VAL2FLD(SCB_UART_RX_CTRL_STOP_BITS, 2UL) | \
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_UART_RX_CTRL_BREAK_WIDTH, 10UL))
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_DEF_VAL _VAL2FLD(SCB_UART_TX_CTRL_STOP_BITS, 2UL)
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_CTRL_DEF_VAL      (_VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, 7UL) | \
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_RX_CTRL_MSB_FIRST,  1UL))
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_CTRL_DEF_VAL      (_VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, 7UL) | \
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      _VAL2FLD(SCB_TX_CTRL_MSB_FIRST,  1UL))
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SCB CTRL modes */
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_I2C   (0UL)
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_SPI   (1UL)
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CTRL_MODE_UART  (2UL)
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* The position and mask to set the I2C mode */
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_MODE_Pos    SCB_I2C_CTRL_SLAVE_MODE_Pos
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CTRL_MODE_Msk    (SCB_I2C_CTRL_SLAVE_MODE_Msk | \
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                      SCB_I2C_CTRL_MASTER_MODE_Msk)
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Cypress ID #282226:
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * SCB_I2C_CFG_SDA_IN_FILT_TRIM[1]: SCB clock enable (1), clock disable (0).
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_CFG_CLK_ENABLE_Msk  (_VAL2FLD(SCB_I2C_CFG_SDA_IN_FILT_TRIM, 2UL))
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* I2C has fixed data width */
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_DATA_WIDTH   (7UL)
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* RX and TX control register values */
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_RX_CTRL      (_VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, CY_SCB_I2C_DATA_WIDTH) | \
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  SCB_RX_CTRL_MSB_FIRST_Msk)
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_TX_CTRL      (_VAL2FLD(SCB_TX_CTRL_DATA_WIDTH, CY_SCB_I2C_DATA_WIDTH) | \
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  SCB_TX_CTRL_MSB_FIRST_Msk | SCB_TX_CTRL_OPEN_DRAIN_Msk)
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* The position and mask to make an address byte */
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ADDRESS_Pos  (1UL)
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_ADDRESS_Msk  (0xFEUL)
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SPI slave select polarity */
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_SSEL_POLARITY_Pos   SCB_SPI_CTRL_SSEL_POLARITY0_Pos
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_SSEL_POLARITY_Msk   (SCB_SPI_CTRL_SSEL_POLARITY0_Msk | \
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY1_Msk | \
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY2_Msk | \
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                              SCB_SPI_CTRL_SSEL_POLARITY3_Msk)
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* SPI clock modes: CPHA and CPOL */
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_CLK_MODE_Pos    SCB_SPI_CTRL_CPHA_Pos
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_CTRL_CLK_MODE_Msk    (SCB_SPI_CTRL_CPHA_Msk | SCB_SPI_CTRL_CPOL_Msk)
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* UART parity and parity enable combination */
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_SET_PARITY_Msk      (SCB_UART_RX_CTRL_PARITY_ENABLED_Msk | \
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                                  SCB_UART_RX_CTRL_PARITY_Msk)
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_RX_CTRL_SET_PARITY_Pos      SCB_UART_RX_CTRL_PARITY_Pos
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 11


 544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_SET_PARITY_Msk      (SCB_UART_TX_CTRL_PARITY_ENABLED_Msk | \
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                                  SCB_UART_TX_CTRL_PARITY_Msk)
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_UART_TX_CTRL_SET_PARITY_Pos      SCB_UART_TX_CTRL_PARITY_Pos
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Max number of bits for byte mode */
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_BYTE_WIDTH   (8UL)
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Single unit to wait */
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_WAIT_1_UNIT  (1U)
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Clear interrupt sources */
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_CLEAR_ALL_INTR_SRC   (0UL)
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Hardware FIFO size: EZ_DATA_NR / 4 = (512 / 4) = 128 */
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_FIFO_SIZE            (128UL)
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /* Provides a list of allowed sources */
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_TX_INTR_MASK     (CY_SCB_TX_INTR_LEVEL     | CY_SCB_TX_INTR_NOT_FULL  | CY_SCB_TX_IN
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_TX_INTR_OVERFLOW  | CY_SCB_TX_INTR_UNDERFLOW | CY_SCB_TX_IN
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_TX_INTR_UART_NACK | CY_SCB_TX_INTR_UART_ARB_LOST)
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_RX_INTR_MASK     (CY_SCB_RX_INTR_LEVEL             | CY_SCB_RX_INTR_NOT_EMPTY | CY_S
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_OVERFLOW          | CY_SCB_RX_INTR_UNDERFLOW       
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_UART_FRAME_ERROR  | CY_SCB_RX_INTR_UART_PARITY_ERRO
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_RX_INTR_UART_BREAK_DETECT)
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SLAVE_INTR_MASK  (CY_SCB_SLAVE_INTR_I2C_ARB_LOST   | CY_SCB_SLAVE_INTR_I2C_NACK | CY
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_WRITE_STOP | CY_SCB_SLAVE_INTR_I2C_STOP | CY
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_ADDR_MATCH | CY_SCB_SLAVE_INTR_I2C_GENERAL_A
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_SLAVE_INTR_I2C_BUS_ERROR  | CY_SCB_SLAVE_INTR_SPI_BUS_ERROR
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_MASTER_INTR_MASK (CY_SCB_MASTER_INTR_I2C_ARB_LOST  | CY_SCB_MASTER_INTR_I2C_NACK | \
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_MASTER_INTR_I2C_ACK       | CY_SCB_MASTER_INTR_I2C_STOP | \
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                                  CY_SCB_MASTER_INTR_I2C_BUS_ERROR | CY_SCB_MASTER_INTR_SPI_DONE)
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_I2C_INTR_MASK    CY_SCB_I2C_INTR_WAKEUP
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_SPI_INTR_MASK    CY_SCB_SPI_INTR_WAKEUP
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_INTR_VALID(intr, mask)            ( 0UL == ((intr) & ((uint32_t) ~(mask))) )
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level)  ((level) < Cy_SCB_GetFifoSize(base))
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_I2C_ADDR_VALID(addr)              ( (0U == ((addr) & 0x80U)) )
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_BUFFER_VALID(buffer, size)        ( (NULL != (buffer)) && ((size) > 0UL) )
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** #define CY_SCB_IS_I2C_BUFFER_VALID(buffer, size)    ( (0UL == (size)) ? true : (NULL != (buffer)) )
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \endcond */
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \} group_scb_common_macros */
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *                       In-line Function Implementation
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /**
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \addtogroup group_scb_common_functions
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 12


 601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \{
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** */
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ReadRxFifo
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Reads a data element directly out of the RX FIFO.
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function does not check whether the RX FIFO has data before reading it.
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Data from RX FIFO.
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_ReadRxFifo(CySCB_Type const *base)
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
  28              		.loc 1 619 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_RX_FIFO_RD(base));
  41              		.loc 1 620 0
  42 0008 7B68     		ldr	r3, [r7, #4]
  43 000a D3F84033 		ldr	r3, [r3, #832]
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
  44              		.loc 1 621 0
  45 000e 1846     		mov	r0, r3
  46 0010 0C37     		adds	r7, r7, #12
  47              		.cfi_def_cfa_offset 4
  48 0012 BD46     		mov	sp, r7
  49              		.cfi_def_cfa_register 13
  50              		@ sp needed
  51 0014 5DF8047B 		ldr	r7, [sp], #4
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0018 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE166:
  57              		.size	Cy_SCB_ReadRxFifo, .-Cy_SCB_ReadRxFifo
  58 001a 00BF     		.section	.rodata
  59              		.align	2
  60              	.LC0:
  61 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
  61      72617465 
  61      645F536F 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 13


  61      75726365 
  61      5C50536F 
  62 002e 7363625C 		.ascii	"scb\\cy_scb_common.h\000"
  62      63795F73 
  62      63625F63 
  62      6F6D6D6F 
  62      6E2E6800 
  63              		.section	.text.Cy_SCB_SetRxFifoLevel,"ax",%progbits
  64              		.align	2
  65              		.thumb
  66              		.thumb_func
  67              		.type	Cy_SCB_SetRxFifoLevel, %function
  68              	Cy_SCB_SetRxFifoLevel:
  69              	.LFB167:
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxFifoLevel
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the RX FIFO level. When there are more data elements in the RX FIFO than
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * this level, the RX FIFO level interrupt is triggered.
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param level
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When there are more data elements in the FIFO than this level, the RX level
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt is triggered.
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxFifoLevel(CySCB_Type *base, uint32_t level)
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
  70              		.loc 1 639 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 82B0     		sub	sp, sp, #8
  79              		.cfi_def_cfa_offset 16
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
  84              		.loc 1 640 0
  85 000a 7868     		ldr	r0, [r7, #4]
  86 000c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
  87 0010 0246     		mov	r2, r0
  88 0012 3B68     		ldr	r3, [r7]
  89 0014 9A42     		cmp	r2, r3
  90 0016 04D8     		bhi	.L4
  91              		.loc 1 640 0 is_stmt 0 discriminator 1
  92 0018 4FF42071 		mov	r1, #640
  93 001c 0848     		ldr	r0, .L5
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 14


  94 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  95              	.L4:
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_REG32_CLR_SET(SCB_RX_FIFO_CTRL(base), SCB_RX_FIFO_CTRL_TRIGGER_LEVEL, level);
  96              		.loc 1 642 0 is_stmt 1
  97 0022 7B68     		ldr	r3, [r7, #4]
  98 0024 D3F80433 		ldr	r3, [r3, #772]
  99 0028 23F0FF02 		bic	r2, r3, #255
 100 002c 3B68     		ldr	r3, [r7]
 101 002e DBB2     		uxtb	r3, r3
 102 0030 1A43     		orrs	r2, r2, r3
 103 0032 7B68     		ldr	r3, [r7, #4]
 104 0034 C3F80423 		str	r2, [r3, #772]
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 105              		.loc 1 643 0
 106 0038 00BF     		nop
 107 003a 0837     		adds	r7, r7, #8
 108              		.cfi_def_cfa_offset 8
 109 003c BD46     		mov	sp, r7
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 003e 80BD     		pop	{r7, pc}
 113              	.L6:
 114              		.align	2
 115              	.L5:
 116 0040 00000000 		.word	.LC0
 117              		.cfi_endproc
 118              	.LFE167:
 119              		.size	Cy_SCB_SetRxFifoLevel, .-Cy_SCB_SetRxFifoLevel
 120              		.section	.text.Cy_SCB_GetNumInRxFifo,"ax",%progbits
 121              		.align	2
 122              		.thumb
 123              		.thumb_func
 124              		.type	Cy_SCB_GetNumInRxFifo, %function
 125              	Cy_SCB_GetNumInRxFifo:
 126              	.LFB168:
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetNumInRxFifo
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the number of data elements currently in the RX FIFO.
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number or data elements in RX FIFO.
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInRxFifo(CySCB_Type const *base)
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 127              		.loc 1 660 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 8
 130              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 15


 131              		@ link register save eliminated.
 132 0000 80B4     		push	{r7}
 133              		.cfi_def_cfa_offset 4
 134              		.cfi_offset 7, -4
 135 0002 83B0     		sub	sp, sp, #12
 136              		.cfi_def_cfa_offset 16
 137 0004 00AF     		add	r7, sp, #0
 138              		.cfi_def_cfa_register 7
 139 0006 7860     		str	r0, [r7, #4]
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_RX_FIFO_STATUS_USED, SCB_RX_FIFO_STATUS(base));
 140              		.loc 1 661 0
 141 0008 7B68     		ldr	r3, [r7, #4]
 142 000a D3F80833 		ldr	r3, [r3, #776]
 143 000e C3F30803 		ubfx	r3, r3, #0, #9
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 144              		.loc 1 662 0
 145 0012 1846     		mov	r0, r3
 146 0014 0C37     		adds	r7, r7, #12
 147              		.cfi_def_cfa_offset 4
 148 0016 BD46     		mov	sp, r7
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 0018 5DF8047B 		ldr	r7, [sp], #4
 152              		.cfi_restore 7
 153              		.cfi_def_cfa_offset 0
 154 001c 7047     		bx	lr
 155              		.cfi_endproc
 156              	.LFE168:
 157              		.size	Cy_SCB_GetNumInRxFifo, .-Cy_SCB_GetNumInRxFifo
 158 001e 00BF     		.section	.text.Cy_SCB_WriteTxFifo,"ax",%progbits
 159              		.align	2
 160              		.thumb
 161              		.thumb_func
 162              		.type	Cy_SCB_WriteTxFifo, %function
 163              	Cy_SCB_WriteTxFifo:
 164              	.LFB171:
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxSrValid
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the status of the RX FIFO Shift Register valid bit.
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * 1 - RX shift register valid; 0 - RX shift register not valid.
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxSrValid(CySCB_Type const *base)
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_RX_FIFO_STATUS_SR_VALID, SCB_RX_FIFO_STATUS(base));
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 16


 684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearRxFifo
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the RX FIFO and shifter.
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If there is partial data in the shifter, it is cleared and lost.
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearRxFifo(CySCB_Type* base)
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_RX_FIFO_CTRL(base) |= (uint32_t)  SCB_RX_FIFO_CTRL_CLEAR_Msk;
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_RX_FIFO_CTRL(base) &= (uint32_t) ~SCB_RX_FIFO_CTRL_CLEAR_Msk;
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_RX_FIFO_CTRL(base);
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_WriteTxFifo
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes data directly into the TX FIFO.
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function does not check whether the TX FIFO is not full before writing
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * into it.
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param data
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Data to write to the TX FIFO.
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_WriteTxFifo(CySCB_Type* base, uint32_t data)
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 165              		.loc 1 722 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 8
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170 0000 80B4     		push	{r7}
 171              		.cfi_def_cfa_offset 4
 172              		.cfi_offset 7, -4
 173 0002 83B0     		sub	sp, sp, #12
 174              		.cfi_def_cfa_offset 16
 175 0004 00AF     		add	r7, sp, #0
 176              		.cfi_def_cfa_register 7
 177 0006 7860     		str	r0, [r7, #4]
 178 0008 3960     		str	r1, [r7]
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_WR(base) = data;
 179              		.loc 1 723 0
 180 000a 7B68     		ldr	r3, [r7, #4]
 181 000c 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 17


 182 000e C3F84022 		str	r2, [r3, #576]
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 183              		.loc 1 724 0
 184 0012 00BF     		nop
 185 0014 0C37     		adds	r7, r7, #12
 186              		.cfi_def_cfa_offset 4
 187 0016 BD46     		mov	sp, r7
 188              		.cfi_def_cfa_register 13
 189              		@ sp needed
 190 0018 5DF8047B 		ldr	r7, [sp], #4
 191              		.cfi_restore 7
 192              		.cfi_def_cfa_offset 0
 193 001c 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE171:
 196              		.size	Cy_SCB_WriteTxFifo, .-Cy_SCB_WriteTxFifo
 197 001e 00BF     		.section	.text.Cy_SCB_SetTxFifoLevel,"ax",%progbits
 198              		.align	2
 199              		.thumb
 200              		.thumb_func
 201              		.type	Cy_SCB_SetTxFifoLevel, %function
 202              	Cy_SCB_SetTxFifoLevel:
 203              	.LFB172:
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxFifoLevel
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the TX FIFO level. When there are fewer data elements in the TX FIFO than
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * this level, the TX FIFO level interrupt is triggered.
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param level
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When there are fewer data elements in the FIFO than this level, the TX level
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt is triggered.
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxFifoLevel(CySCB_Type *base, uint32_t level)
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 204              		.loc 1 743 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 8
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              		.cfi_def_cfa_offset 8
 210              		.cfi_offset 7, -8
 211              		.cfi_offset 14, -4
 212 0002 82B0     		sub	sp, sp, #8
 213              		.cfi_def_cfa_offset 16
 214 0004 00AF     		add	r7, sp, #0
 215              		.cfi_def_cfa_register 7
 216 0006 7860     		str	r0, [r7, #4]
 217 0008 3960     		str	r1, [r7]
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 18


 218              		.loc 1 744 0
 219 000a 7868     		ldr	r0, [r7, #4]
 220 000c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 221 0010 0246     		mov	r2, r0
 222 0012 3B68     		ldr	r3, [r7]
 223 0014 9A42     		cmp	r2, r3
 224 0016 04D8     		bhi	.L11
 225              		.loc 1 744 0 is_stmt 0 discriminator 1
 226 0018 4FF43A71 		mov	r1, #744
 227 001c 0848     		ldr	r0, .L12
 228 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 229              	.L11:
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_REG32_CLR_SET(SCB_TX_FIFO_CTRL(base), SCB_TX_FIFO_CTRL_TRIGGER_LEVEL, level);
 230              		.loc 1 746 0 is_stmt 1
 231 0022 7B68     		ldr	r3, [r7, #4]
 232 0024 D3F80432 		ldr	r3, [r3, #516]
 233 0028 23F0FF02 		bic	r2, r3, #255
 234 002c 3B68     		ldr	r3, [r7]
 235 002e DBB2     		uxtb	r3, r3
 236 0030 1A43     		orrs	r2, r2, r3
 237 0032 7B68     		ldr	r3, [r7, #4]
 238 0034 C3F80422 		str	r2, [r3, #516]
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 239              		.loc 1 747 0
 240 0038 00BF     		nop
 241 003a 0837     		adds	r7, r7, #8
 242              		.cfi_def_cfa_offset 8
 243 003c BD46     		mov	sp, r7
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 003e 80BD     		pop	{r7, pc}
 247              	.L13:
 248              		.align	2
 249              	.L12:
 250 0040 00000000 		.word	.LC0
 251              		.cfi_endproc
 252              	.LFE172:
 253              		.size	Cy_SCB_SetTxFifoLevel, .-Cy_SCB_SetTxFifoLevel
 254              		.section	.text.Cy_SCB_GetNumInTxFifo,"ax",%progbits
 255              		.align	2
 256              		.thumb
 257              		.thumb_func
 258              		.type	Cy_SCB_GetNumInTxFifo, %function
 259              	Cy_SCB_GetNumInTxFifo:
 260              	.LFB173:
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetNumInTxFifo
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the number of data elements currently in the TX FIFO.
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 19


 759:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The number or data elements in the TX FIFO.
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetNumInTxFifo(CySCB_Type const *base)
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 261              		.loc 1 764 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 8
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0000 80B4     		push	{r7}
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 7, -4
 269 0002 83B0     		sub	sp, sp, #12
 270              		.cfi_def_cfa_offset 16
 271 0004 00AF     		add	r7, sp, #0
 272              		.cfi_def_cfa_register 7
 273 0006 7860     		str	r0, [r7, #4]
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_TX_FIFO_STATUS_USED, SCB_TX_FIFO_STATUS(base));
 274              		.loc 1 765 0
 275 0008 7B68     		ldr	r3, [r7, #4]
 276 000a D3F80832 		ldr	r3, [r3, #520]
 277 000e C3F30803 		ubfx	r3, r3, #0, #9
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 278              		.loc 1 766 0
 279 0012 1846     		mov	r0, r3
 280 0014 0C37     		adds	r7, r7, #12
 281              		.cfi_def_cfa_offset 4
 282 0016 BD46     		mov	sp, r7
 283              		.cfi_def_cfa_register 13
 284              		@ sp needed
 285 0018 5DF8047B 		ldr	r7, [sp], #4
 286              		.cfi_restore 7
 287              		.cfi_def_cfa_offset 0
 288 001c 7047     		bx	lr
 289              		.cfi_endproc
 290              	.LFE173:
 291              		.size	Cy_SCB_GetNumInTxFifo, .-Cy_SCB_GetNumInTxFifo
 292 001e 00BF     		.section	.text.Cy_SCB_GetTxSrValid,"ax",%progbits
 293              		.align	2
 294              		.thumb
 295              		.thumb_func
 296              		.type	Cy_SCB_GetTxSrValid, %function
 297              	Cy_SCB_GetTxSrValid:
 298              	.LFB174:
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxSrValid
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the status of the TX FIFO Shift Register valid bit.
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 20


 778:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * 1 - TX shift register valid; 0 - TX shift register not valid.
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxSrValid(CySCB_Type const *base)
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 299              		.loc 1 783 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 8
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 83B0     		sub	sp, sp, #12
 308              		.cfi_def_cfa_offset 16
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 311 0006 7860     		str	r0, [r7, #4]
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return _FLD2VAL(SCB_TX_FIFO_STATUS_SR_VALID, SCB_TX_FIFO_STATUS(base));
 312              		.loc 1 784 0
 313 0008 7B68     		ldr	r3, [r7, #4]
 314 000a D3F80832 		ldr	r3, [r3, #520]
 315 000e 03F40043 		and	r3, r3, #32768
 316 0012 DB0B     		lsrs	r3, r3, #15
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 317              		.loc 1 785 0
 318 0014 1846     		mov	r0, r3
 319 0016 0C37     		adds	r7, r7, #12
 320              		.cfi_def_cfa_offset 4
 321 0018 BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 001a 5DF8047B 		ldr	r7, [sp], #4
 325              		.cfi_restore 7
 326              		.cfi_def_cfa_offset 0
 327 001e 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE174:
 330              		.size	Cy_SCB_GetTxSrValid, .-Cy_SCB_GetTxSrValid
 331              		.section	.text.Cy_SCB_IsTxComplete,"ax",%progbits
 332              		.align	2
 333              		.thumb
 334              		.thumb_func
 335              		.type	Cy_SCB_IsTxComplete, %function
 336              	Cy_SCB_IsTxComplete:
 337              	.LFB175:
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsTxComplete
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Checks whether the TX FIFO and Shifter are empty and there is no more data to send.
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Pointer to SPI the SCB instance.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 21


 796:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, transmission complete. If false, transmission is not complete.
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsTxComplete(CySCB_Type const *base)
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 338              		.loc 1 802 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 8
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342 0000 90B5     		push	{r4, r7, lr}
 343              		.cfi_def_cfa_offset 12
 344              		.cfi_offset 4, -12
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 83B0     		sub	sp, sp, #12
 348              		.cfi_def_cfa_offset 24
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 351 0006 7860     		str	r0, [r7, #4]
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****      return (0UL == (Cy_SCB_GetNumInTxFifo(base) + Cy_SCB_GetTxSrValid(base)));
 352              		.loc 1 803 0
 353 0008 7868     		ldr	r0, [r7, #4]
 354 000a FFF7FEFF 		bl	Cy_SCB_GetNumInTxFifo
 355 000e 0446     		mov	r4, r0
 356 0010 7868     		ldr	r0, [r7, #4]
 357 0012 FFF7FEFF 		bl	Cy_SCB_GetTxSrValid
 358 0016 0346     		mov	r3, r0
 359 0018 2344     		add	r3, r3, r4
 360 001a 002B     		cmp	r3, #0
 361 001c 0CBF     		ite	eq
 362 001e 0123     		moveq	r3, #1
 363 0020 0023     		movne	r3, #0
 364 0022 DBB2     		uxtb	r3, r3
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 365              		.loc 1 804 0
 366 0024 1846     		mov	r0, r3
 367 0026 0C37     		adds	r7, r7, #12
 368              		.cfi_def_cfa_offset 12
 369 0028 BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 002a 90BD     		pop	{r4, r7, pc}
 373              		.cfi_endproc
 374              	.LFE175:
 375              		.size	Cy_SCB_IsTxComplete, .-Cy_SCB_IsTxComplete
 376              		.section	.text.Cy_SCB_ClearTxFifo,"ax",%progbits
 377              		.align	2
 378              		.thumb
 379              		.thumb_func
 380              		.type	Cy_SCB_ClearTxFifo, %function
 381              	Cy_SCB_ClearTxFifo:
 382              	.LFB176:
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 22


 808:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearTxFifo
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the TX FIFO.
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX FIFO clear operation also clears the shift register. Thus the shifter
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * could be cleared in the middle of a data element transfer. Thia results in
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * "ones" being sent on the bus for the remainder of the transfer.
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearTxFifo(CySCB_Type *base)
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 383              		.loc 1 823 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0000 80B4     		push	{r7}
 389              		.cfi_def_cfa_offset 4
 390              		.cfi_offset 7, -4
 391 0002 83B0     		sub	sp, sp, #12
 392              		.cfi_def_cfa_offset 16
 393 0004 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
 395 0006 7860     		str	r0, [r7, #4]
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_CTRL(base) |= (uint32_t)  SCB_TX_FIFO_CTRL_CLEAR_Msk;
 396              		.loc 1 824 0
 397 0008 7B68     		ldr	r3, [r7, #4]
 398 000a D3F80432 		ldr	r3, [r3, #516]
 399 000e 43F48032 		orr	r2, r3, #65536
 400 0012 7B68     		ldr	r3, [r7, #4]
 401 0014 C3F80422 		str	r2, [r3, #516]
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_TX_FIFO_CTRL(base) &= (uint32_t) ~SCB_TX_FIFO_CTRL_CLEAR_Msk;
 402              		.loc 1 825 0
 403 0018 7B68     		ldr	r3, [r7, #4]
 404 001a D3F80432 		ldr	r3, [r3, #516]
 405 001e 23F48032 		bic	r2, r3, #65536
 406 0022 7B68     		ldr	r3, [r7, #4]
 407 0024 C3F80422 		str	r2, [r3, #516]
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_TX_FIFO_CTRL(base);
 408              		.loc 1 827 0
 409 0028 7B68     		ldr	r3, [r7, #4]
 410 002a D3F80432 		ldr	r3, [r3, #516]
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 411              		.loc 1 828 0
 412 002e 00BF     		nop
 413 0030 0C37     		adds	r7, r7, #12
 414              		.cfi_def_cfa_offset 4
 415 0032 BD46     		mov	sp, r7
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 0034 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 23


 419              		.cfi_restore 7
 420              		.cfi_def_cfa_offset 0
 421 0038 7047     		bx	lr
 422              		.cfi_endproc
 423              	.LFE176:
 424              		.size	Cy_SCB_ClearTxFifo, .-Cy_SCB_ClearTxFifo
 425 003a 00BF     		.section	.text.Cy_SCB_GetInterruptCause,"ax",%progbits
 426              		.align	2
 427              		.thumb
 428              		.thumb_func
 429              		.type	Cy_SCB_GetInterruptCause, %function
 430              	Cy_SCB_GetInterruptCause:
 431              	.LFB178:
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetByteMode
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets whether the RX and TX FIFOs are in byte mode.
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The FIFOs are either 16-bit wide or 8-bit wide (byte mode).
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * When the FIFO is in byte mode it is twice as deep. See the device datasheet
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * for FIFO depths.
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param byteMode
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, TX and RX FIFOs are 8-bit wide. If false, the FIFOs are 16-bit wide.
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetByteMode(CySCB_Type *base, bool byteMode)
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     if (byteMode)
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     {
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****         SCB_CTRL(base) |=  SCB_CTRL_BYTE_MODE_Msk;
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     }
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     else
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     {
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****         SCB_CTRL(base) &= ~SCB_CTRL_BYTE_MODE_Msk;
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     }
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetInterruptCause
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the mask of bits showing the source of the current triggered
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * interrupt. This is useful for modes of operation where an interrupt can
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * be generated by conditions in multiple interrupt source registers.
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The mask with the OR of the following conditions that have been triggered.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 24


 873:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_intr_cause for the set of constants.
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetInterruptCause(CySCB_Type const *base)
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 432              		.loc 1 877 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 8
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 80B4     		push	{r7}
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              		.cfi_def_cfa_offset 16
 442 0004 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 444 0006 7860     		str	r0, [r7, #4]
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_CAUSE(base));
 445              		.loc 1 878 0
 446 0008 7B68     		ldr	r3, [r7, #4]
 447 000a D3F8003E 		ldr	r3, [r3, #3584]
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 448              		.loc 1 879 0
 449 000e 1846     		mov	r0, r3
 450 0010 0C37     		adds	r7, r7, #12
 451              		.cfi_def_cfa_offset 4
 452 0012 BD46     		mov	sp, r7
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 0014 5DF8047B 		ldr	r7, [sp], #4
 456              		.cfi_restore 7
 457              		.cfi_def_cfa_offset 0
 458 0018 7047     		bx	lr
 459              		.cfi_endproc
 460              	.LFE178:
 461              		.size	Cy_SCB_GetInterruptCause, .-Cy_SCB_GetInterruptCause
 462 001a 00BF     		.section	.text.Cy_SCB_SetRxInterruptMask,"ax",%progbits
 463              		.align	2
 464              		.thumb
 465              		.thumb_func
 466              		.type	Cy_SCB_SetRxInterruptMask, %function
 467              	Cy_SCB_SetRxInterruptMask:
 468              	.LFB180:
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptStatus
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt request register. This register contains the current
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the RX interrupt sources.
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 25


 893:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the RX interrupt sources. Each constant is a bit field
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * value. The value returned may have multiple bits set to indicate the
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * current status.
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatus(CySCB_Type const *base)
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX(base) & CY_SCB_RX_INTR_MASK);
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxInterruptMask
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the RX interrupt mask register. This register configures which bits
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the RX interrupt request register can trigger an interrupt event.
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled RX interrupt sources.
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr.
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxInterruptMask(CySCB_Type *base, uint32_t interruptMask)
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 469              		.loc 1 921 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 8
 472              		@ frame_needed = 1, uses_anonymous_args = 0
 473 0000 80B5     		push	{r7, lr}
 474              		.cfi_def_cfa_offset 8
 475              		.cfi_offset 7, -8
 476              		.cfi_offset 14, -4
 477 0002 82B0     		sub	sp, sp, #8
 478              		.cfi_def_cfa_offset 16
 479 0004 00AF     		add	r7, sp, #0
 480              		.cfi_def_cfa_register 7
 481 0006 7860     		str	r0, [r7, #4]
 482 0008 3960     		str	r1, [r7]
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
 483              		.loc 1 922 0
 484 000a 3B68     		ldr	r3, [r7]
 485 000c 23F43663 		bic	r3, r3, #2912
 486 0010 23F00D03 		bic	r3, r3, #13
 487 0014 002B     		cmp	r3, #0
 488 0016 04D0     		beq	.L24
 489              		.loc 1 922 0 is_stmt 0 discriminator 1
 490 0018 40F29A31 		movw	r1, #922
 491 001c 0548     		ldr	r0, .L25
 492 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 493              	.L24:
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX_MASK(base) = interruptMask;
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 26


 494              		.loc 1 924 0 is_stmt 1
 495 0022 7B68     		ldr	r3, [r7, #4]
 496 0024 3A68     		ldr	r2, [r7]
 497 0026 C3F8C82F 		str	r2, [r3, #4040]
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 498              		.loc 1 925 0
 499 002a 00BF     		nop
 500 002c 0837     		adds	r7, r7, #8
 501              		.cfi_def_cfa_offset 8
 502 002e BD46     		mov	sp, r7
 503              		.cfi_def_cfa_register 13
 504              		@ sp needed
 505 0030 80BD     		pop	{r7, pc}
 506              	.L26:
 507 0032 00BF     		.align	2
 508              	.L25:
 509 0034 00000000 		.word	.LC0
 510              		.cfi_endproc
 511              	.LFE180:
 512              		.size	Cy_SCB_SetRxInterruptMask, .-Cy_SCB_SetRxInterruptMask
 513              		.section	.text.Cy_SCB_GetRxInterruptStatusMasked,"ax",%progbits
 514              		.align	2
 515              		.thumb
 516              		.thumb_func
 517              		.type	Cy_SCB_GetRxInterruptStatusMasked, %function
 518              	Cy_SCB_GetRxInterruptStatusMasked:
 519              	.LFB182:
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptMask
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt mask register. This register specifies which bits
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the RX interrupt request register trigger can an interrupt event.
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled RX interrupt sources.
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptMask(CySCB_Type const *base)
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX_MASK(base));
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetRxInterruptStatusMasked
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX interrupt masked request register. This register contains
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the RX interrupt request and
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 27


 956:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of the enabled RX interrupt sources caused the interrupt event.
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled RX interrupt sources.
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetRxInterruptStatusMasked(CySCB_Type const *base)
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 520              		.loc 1 968 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 8
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 0000 80B4     		push	{r7}
 526              		.cfi_def_cfa_offset 4
 527              		.cfi_offset 7, -4
 528 0002 83B0     		sub	sp, sp, #12
 529              		.cfi_def_cfa_offset 16
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_RX_MASKED(base));
 533              		.loc 1 969 0
 534 0008 7B68     		ldr	r3, [r7, #4]
 535 000a D3F8CC3F 		ldr	r3, [r3, #4044]
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 536              		.loc 1 970 0
 537 000e 1846     		mov	r0, r3
 538 0010 0C37     		adds	r7, r7, #12
 539              		.cfi_def_cfa_offset 4
 540 0012 BD46     		mov	sp, r7
 541              		.cfi_def_cfa_register 13
 542              		@ sp needed
 543 0014 5DF8047B 		ldr	r7, [sp], #4
 544              		.cfi_restore 7
 545              		.cfi_def_cfa_offset 0
 546 0018 7047     		bx	lr
 547              		.cfi_endproc
 548              	.LFE182:
 549              		.size	Cy_SCB_GetRxInterruptStatusMasked, .-Cy_SCB_GetRxInterruptStatusMasked
 550 001a 00BF     		.section	.text.Cy_SCB_ClearRxInterrupt,"ax",%progbits
 551              		.align	2
 552              		.thumb
 553              		.thumb_func
 554              		.type	Cy_SCB_ClearRxInterrupt, %function
 555              	Cy_SCB_ClearRxInterrupt:
 556              	.LFB183:
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearRxInterrupt
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 28


 976:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the RX interrupt sources in the interrupt request register.
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The RX interrupt sources to be cleared.
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_FIFO_LEVEL interrupt source is not cleared when
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    the RX FIFO has more entries than the level.
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_NOT_EMPTY interrupt source is not cleared when the
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    RX FIFO is not empty.
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_RX_FULL interrupt source is not cleared when the
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    RX FIFO is full.
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearRxInterrupt(CySCB_Type *base, uint32_t interruptMask)
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 557              		.loc 1 996 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 82B0     		sub	sp, sp, #8
 566              		.cfi_def_cfa_offset 16
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 569 0006 7860     		str	r0, [r7, #4]
 570 0008 3960     		str	r1, [r7]
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
 571              		.loc 1 997 0
 572 000a 3B68     		ldr	r3, [r7]
 573 000c 23F43663 		bic	r3, r3, #2912
 574 0010 23F00D03 		bic	r3, r3, #13
 575 0014 002B     		cmp	r3, #0
 576 0016 04D0     		beq	.L30
 577              		.loc 1 997 0 is_stmt 0 discriminator 1
 578 0018 40F2E531 		movw	r1, #997
 579 001c 0648     		ldr	r0, .L31
 580 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 581              	.L30:
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX(base) = interruptMask;
 582              		.loc 1 999 0 is_stmt 1
 583 0022 7B68     		ldr	r3, [r7, #4]
 584 0024 3A68     		ldr	r2, [r7]
 585 0026 C3F8C02F 		str	r2, [r3, #4032]
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_RX(base);
 586              		.loc 1 1000 0
 587 002a 7B68     		ldr	r3, [r7, #4]
 588 002c D3F8C03F 		ldr	r3, [r3, #4032]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 29


1001:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 589              		.loc 1 1001 0
 590 0030 00BF     		nop
 591 0032 0837     		adds	r7, r7, #8
 592              		.cfi_def_cfa_offset 8
 593 0034 BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 0036 80BD     		pop	{r7, pc}
 597              	.L32:
 598              		.align	2
 599              	.L31:
 600 0038 00000000 		.word	.LC0
 601              		.cfi_endproc
 602              	.LFE183:
 603              		.size	Cy_SCB_ClearRxInterrupt, .-Cy_SCB_ClearRxInterrupt
 604              		.section	.text.Cy_SCB_GetTxInterruptStatus,"ax",%progbits
 605              		.align	2
 606              		.thumb
 607              		.thumb_func
 608              		.type	Cy_SCB_GetTxInterruptStatus, %function
 609              	Cy_SCB_GetTxInterruptStatus:
 610              	.LFB185:
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetRxInterrupt
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets the RX interrupt sources in the interrupt request register.
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The RX interrupt sources to set in the RX interrupt request register.
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_rx_intr for the set of constants.
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetRxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_RX_INTR_MASK));
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_RX_SET(base) = interruptMask;
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptStatus
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt request register. This register contains the current
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the TX interrupt sources.
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 30


1036:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of TX interrupt sources.
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatus(CySCB_Type const *base)
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 611              		.loc 1 1044 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 8
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616 0000 80B4     		push	{r7}
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 7, -4
 619 0002 83B0     		sub	sp, sp, #12
 620              		.cfi_def_cfa_offset 16
 621 0004 00AF     		add	r7, sp, #0
 622              		.cfi_def_cfa_register 7
 623 0006 7860     		str	r0, [r7, #4]
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX(base) & CY_SCB_TX_INTR_MASK);
 624              		.loc 1 1045 0
 625 0008 7B68     		ldr	r3, [r7, #4]
 626 000a D3F8802F 		ldr	r2, [r3, #3968]
 627 000e 40F27373 		movw	r3, #1907
 628 0012 1340     		ands	r3, r3, r2
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 629              		.loc 1 1046 0
 630 0014 1846     		mov	r0, r3
 631 0016 0C37     		adds	r7, r7, #12
 632              		.cfi_def_cfa_offset 4
 633 0018 BD46     		mov	sp, r7
 634              		.cfi_def_cfa_register 13
 635              		@ sp needed
 636 001a 5DF8047B 		ldr	r7, [sp], #4
 637              		.cfi_restore 7
 638              		.cfi_def_cfa_offset 0
 639 001e 7047     		bx	lr
 640              		.cfi_endproc
 641              	.LFE185:
 642              		.size	Cy_SCB_GetTxInterruptStatus, .-Cy_SCB_GetTxInterruptStatus
 643              		.section	.text.Cy_SCB_SetTxInterruptMask,"ax",%progbits
 644              		.align	2
 645              		.thumb
 646              		.thumb_func
 647              		.type	Cy_SCB_SetTxInterruptMask, %function
 648              	Cy_SCB_SetTxInterruptMask:
 649              	.LFB186:
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxInterruptMask
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the TX interrupt mask register. This register configures which bits
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 31


1054:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the TX interrupt request register can trigger an interrupt event.
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled TX interrupt sources.
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 650              		.loc 1 1065 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 8
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654 0000 80B5     		push	{r7, lr}
 655              		.cfi_def_cfa_offset 8
 656              		.cfi_offset 7, -8
 657              		.cfi_offset 14, -4
 658 0002 82B0     		sub	sp, sp, #8
 659              		.cfi_def_cfa_offset 16
 660 0004 00AF     		add	r7, sp, #0
 661              		.cfi_def_cfa_register 7
 662 0006 7860     		str	r0, [r7, #4]
 663 0008 3960     		str	r1, [r7]
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
 664              		.loc 1 1066 0
 665 000a 3B68     		ldr	r3, [r7]
 666 000c 23F4EE63 		bic	r3, r3, #1904
 667 0010 23F00303 		bic	r3, r3, #3
 668 0014 002B     		cmp	r3, #0
 669 0016 04D0     		beq	.L36
 670              		.loc 1 1066 0 is_stmt 0 discriminator 1
 671 0018 40F22A41 		movw	r1, #1066
 672 001c 0548     		ldr	r0, .L37
 673 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 674              	.L36:
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX_MASK(base) = interruptMask;
 675              		.loc 1 1068 0 is_stmt 1
 676 0022 7B68     		ldr	r3, [r7, #4]
 677 0024 3A68     		ldr	r2, [r7]
 678 0026 C3F8882F 		str	r2, [r3, #3976]
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 679              		.loc 1 1069 0
 680 002a 00BF     		nop
 681 002c 0837     		adds	r7, r7, #8
 682              		.cfi_def_cfa_offset 8
 683 002e BD46     		mov	sp, r7
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 0030 80BD     		pop	{r7, pc}
 687              	.L38:
 688 0032 00BF     		.align	2
 689              	.L37:
 690 0034 00000000 		.word	.LC0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 32


 691              		.cfi_endproc
 692              	.LFE186:
 693              		.size	Cy_SCB_SetTxInterruptMask, .-Cy_SCB_SetTxInterruptMask
 694              		.section	.text.Cy_SCB_GetTxInterruptMask,"ax",%progbits
 695              		.align	2
 696              		.thumb
 697              		.thumb_func
 698              		.type	Cy_SCB_GetTxInterruptMask, %function
 699              	Cy_SCB_GetTxInterruptMask:
 700              	.LFB187:
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptMask
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt mask register. This register specifies which
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits from the TX interrupt request register can trigger an interrupt event.
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled TX interrupt sources.
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptMask(CySCB_Type const *base)
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 701              		.loc 1 1088 0
 702              		.cfi_startproc
 703              		@ args = 0, pretend = 0, frame = 8
 704              		@ frame_needed = 1, uses_anonymous_args = 0
 705              		@ link register save eliminated.
 706 0000 80B4     		push	{r7}
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 7, -4
 709 0002 83B0     		sub	sp, sp, #12
 710              		.cfi_def_cfa_offset 16
 711 0004 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 0006 7860     		str	r0, [r7, #4]
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX_MASK(base));
 714              		.loc 1 1089 0
 715 0008 7B68     		ldr	r3, [r7, #4]
 716 000a D3F8883F 		ldr	r3, [r3, #3976]
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 717              		.loc 1 1090 0
 718 000e 1846     		mov	r0, r3
 719 0010 0C37     		adds	r7, r7, #12
 720              		.cfi_def_cfa_offset 4
 721 0012 BD46     		mov	sp, r7
 722              		.cfi_def_cfa_register 13
 723              		@ sp needed
 724 0014 5DF8047B 		ldr	r7, [sp], #4
 725              		.cfi_restore 7
 726              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 33


 727 0018 7047     		bx	lr
 728              		.cfi_endproc
 729              	.LFE187:
 730              		.size	Cy_SCB_GetTxInterruptMask, .-Cy_SCB_GetTxInterruptMask
 731 001a 00BF     		.section	.text.Cy_SCB_GetTxInterruptStatusMasked,"ax",%progbits
 732              		.align	2
 733              		.thumb
 734              		.thumb_func
 735              		.type	Cy_SCB_GetTxInterruptStatusMasked, %function
 736              	Cy_SCB_GetTxInterruptStatusMasked:
 737              	.LFB188:
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetTxInterruptStatusMasked
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the TX interrupt masked request register. This register contains
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the TX interrupt request and
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled TX interrupt sources caused the interrupt event.
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled TX interrupt sources.
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetTxInterruptStatusMasked(CySCB_Type const *base)
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 738              		.loc 1 1112 0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 8
 741              		@ frame_needed = 1, uses_anonymous_args = 0
 742              		@ link register save eliminated.
 743 0000 80B4     		push	{r7}
 744              		.cfi_def_cfa_offset 4
 745              		.cfi_offset 7, -4
 746 0002 83B0     		sub	sp, sp, #12
 747              		.cfi_def_cfa_offset 16
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 750 0006 7860     		str	r0, [r7, #4]
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_TX_MASKED(base));
 751              		.loc 1 1113 0
 752 0008 7B68     		ldr	r3, [r7, #4]
 753 000a D3F88C3F 		ldr	r3, [r3, #3980]
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 754              		.loc 1 1114 0
 755 000e 1846     		mov	r0, r3
 756 0010 0C37     		adds	r7, r7, #12
 757              		.cfi_def_cfa_offset 4
 758 0012 BD46     		mov	sp, r7
 759              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 34


 760              		@ sp needed
 761 0014 5DF8047B 		ldr	r7, [sp], #4
 762              		.cfi_restore 7
 763              		.cfi_def_cfa_offset 0
 764 0018 7047     		bx	lr
 765              		.cfi_endproc
 766              	.LFE188:
 767              		.size	Cy_SCB_GetTxInterruptStatusMasked, .-Cy_SCB_GetTxInterruptStatusMasked
 768 001a 00BF     		.section	.text.Cy_SCB_ClearTxInterrupt,"ax",%progbits
 769              		.align	2
 770              		.thumb
 771              		.thumb_func
 772              		.type	Cy_SCB_ClearTxInterrupt, %function
 773              	Cy_SCB_ClearTxInterrupt:
 774              	.LFB189:
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearTxInterrupt
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the TX interrupt sources in the interrupt request register.
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX interrupt sources to be cleared.
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \note
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_FIFO_LEVEL interrupt source is not cleared when the
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO has fewer entries than the TX level.
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_NOT_FULL interrupt source is not cleared when the
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO has empty entries in the TX FIFO.
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_EMPTY interrupt source is not cleared when the
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO is empty.
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *  - CY_SCB_INTR_TX_UNDERFLOW interrupt source is not cleared when the
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *    TX FIFO is empty. Put data into the TX FIFO before clearing it.
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearTxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 775              		.loc 1 1142 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 8
 778              		@ frame_needed = 1, uses_anonymous_args = 0
 779 0000 80B5     		push	{r7, lr}
 780              		.cfi_def_cfa_offset 8
 781              		.cfi_offset 7, -8
 782              		.cfi_offset 14, -4
 783 0002 82B0     		sub	sp, sp, #8
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
 786              		.cfi_def_cfa_register 7
 787 0006 7860     		str	r0, [r7, #4]
 788 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 35


1143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
 789              		.loc 1 1143 0
 790 000a 3B68     		ldr	r3, [r7]
 791 000c 23F4EE63 		bic	r3, r3, #1904
 792 0010 23F00303 		bic	r3, r3, #3
 793 0014 002B     		cmp	r3, #0
 794 0016 04D0     		beq	.L44
 795              		.loc 1 1143 0 is_stmt 0 discriminator 1
 796 0018 40F27741 		movw	r1, #1143
 797 001c 0648     		ldr	r0, .L45
 798 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 799              	.L44:
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX(base) = interruptMask;
 800              		.loc 1 1145 0 is_stmt 1
 801 0022 7B68     		ldr	r3, [r7, #4]
 802 0024 3A68     		ldr	r2, [r7]
 803 0026 C3F8802F 		str	r2, [r3, #3968]
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_TX(base);
 804              		.loc 1 1146 0
 805 002a 7B68     		ldr	r3, [r7, #4]
 806 002c D3F8803F 		ldr	r3, [r3, #3968]
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 807              		.loc 1 1147 0
 808 0030 00BF     		nop
 809 0032 0837     		adds	r7, r7, #8
 810              		.cfi_def_cfa_offset 8
 811 0034 BD46     		mov	sp, r7
 812              		.cfi_def_cfa_register 13
 813              		@ sp needed
 814 0036 80BD     		pop	{r7, pc}
 815              	.L46:
 816              		.align	2
 817              	.L45:
 818 0038 00000000 		.word	.LC0
 819              		.cfi_endproc
 820              	.LFE189:
 821              		.size	Cy_SCB_ClearTxInterrupt, .-Cy_SCB_ClearTxInterrupt
 822              		.section	.text.Cy_SCB_GetFifoSize,"ax",%progbits
 823              		.align	2
 824              		.thumb
 825              		.thumb_func
 826              		.type	Cy_SCB_GetFifoSize, %function
 827              	Cy_SCB_GetFifoSize:
 828              	.LFB213:
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetTxInterrupt
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets TX interrupt sources in the interrupt request register.
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 36


1160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The TX interrupt sources to set in the TX interrupt request register.
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_tx_intr for the set of constants.
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetTxInterrupt(CySCB_Type *base, uint32_t interruptMask)
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_TX_INTR_MASK));
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_TX_SET(base) = interruptMask;
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptStatus
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt request register. This register contains the current
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the master interrupt sources.
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the master interrupt sources.
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatus(CySCB_Type const *base)
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M(base) & CY_SCB_MASTER_INTR_MASK);
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetMasterInterruptMask
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the master interrupt mask register. This register specifies which bits
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the master interrupt request register can trigger an interrupt event.
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to be enable.
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetMasterInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M_MASK(base) = interruptMask;
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 37


1217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptMask
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt mask register. This register specifies which bits
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the master interrupt request register can trigger an interrupt event.
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled master interrupt sources.
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptMask(CySCB_Type const *base)
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M_MASK(base));
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetMasterInterruptStatusMasked
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the master interrupt masked request register. This register contains a
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * logical AND of corresponding bits from the master interrupt request and mask
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of the enabled master interrupt sources caused the interrupt
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * event.
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled master interrupt sources.
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetMasterInterruptStatusMasked(CySCB_Type const *base)
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_M_MASKED(base));
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearMasterInterrupt
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears master interrupt sources in the interrupt request register.
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 38


1274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to be cleared.
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearMasterInterrupt(CySCB_Type *base, uint32_t interruptMask)
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M(base) = interruptMask;
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_M(base);
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetMasterInterrupt
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets master interrupt sources in the interrupt request register.
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The master interrupt sources to set in the master interrupt request register.
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_master_intr for the set of constants.
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetMasterInterrupt(CySCB_Type *base, uint32_t interruptMask)
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_MASTER_INTR_MASK));
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_M_SET(base) = interruptMask;
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptStatus
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt request register. This register contains the current
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the slave interrupt sources.
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the slave interrupt sources.
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Each constant is a bit field value. The value returned may have multiple
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits set to indicate the current status.
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatus(CySCB_Type const *base)
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S(base) & CY_SCB_SLAVE_INTR_MASK);
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 39


1331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSlaveInterruptMask
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes slave interrupt mask register.
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This register specifies which bits from the slave interrupt request register
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * can trigger an interrupt event.
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled slave interrupt sources.
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSlaveInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S_MASK(base) = interruptMask;
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptMask
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt mask register.
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This register specifies which bits from the slave interrupt request register
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * can trigger an interrupt event.
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled slave interrupt sources.
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptMask(CySCB_Type const *base)
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S_MASK(base));
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSlaveInterruptStatusMasked
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the slave interrupt masked request register. This register contains a
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * logical AND of corresponding bits from the slave interrupt request and mask
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled slave interrupt sources caused the interrupt
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * event.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 40


1388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled slave interrupt sources.
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSlaveInterruptStatusMasked(CySCB_Type const *base)
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_S_MASKED(base));
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearSlaveInterrupt
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears the slave interrupt sources in the interrupt request register.
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Slave interrupt sources to be cleared.
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearSlaveInterrupt(CySCB_Type *base, uint32_t interruptMask)
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S(base) = interruptMask;
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_S(base);
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSlaveInterrupt
1428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Sets slave interrupt sources in the interrupt request register.
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The slave interrupt sources to set in the slave interrupt request register
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSlaveInterrupt(CySCB_Type *base, uint32_t interruptMask)
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SLAVE_INTR_MASK));
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_S_SET(base) = interruptMask;
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 41


1445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptStatus
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt request register. This register contains the
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * current status of the I2C interrupt sources.
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of the I2C interrupt sources. Each constant is a bit
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * field value.
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The value returned may have multiple bits set to indicate the current status.
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_slave_intr for the set of constants.
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatus(CySCB_Type const *base)
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC(base) & CY_SCB_I2C_INTR_MASK);
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetI2CInterruptMask
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the I2C interrupt mask register. This register specifies which bits
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the I2C interrupt request register can trigger an interrupt event.
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled I2C interrupt sources.
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetI2CInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_I2C_INTR_MASK));
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_I2C_EC_MASK(base) = interruptMask;
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptMask
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt mask register. This register specifies which bits
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the I2C interrupt request register can trigger an interrupt event.
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 42


1502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled I2C interrupt sources.
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr.
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptMask(CySCB_Type const *base)
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC_MASK(base));
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetI2CInterruptStatusMasked
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the I2C interrupt masked request register. This register contains
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from I2C interrupt request and mask
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * registers.
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled I2C interrupt sources caused the interrupt event.
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled I2C interrupt sources.
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetI2CInterruptStatusMasked(CySCB_Type const *base)
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_I2C_EC_MASKED(base));
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearI2CInterrupt
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears I2C interrupt sources in the interrupt request register.
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The I2C interrupt sources to be cleared.
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_i2c_intr for the set of constants.
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearI2CInterrupt(CySCB_Type *base, uint32_t interruptMask)
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_I2C_INTR_MASK));
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_I2C_EC(base) = interruptMask;
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_I2C_EC(base);
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 43


1559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptStatus
1564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt request register. This register contains the current
1567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * status of the SPI interrupt sources.
1568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of SPI interrupt sources. Each constant is a bit field value.
1574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The value returned may have multiple bits set to indicate the current status
1575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatus(CySCB_Type const *base)
1579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC(base) & CY_SCB_SPI_INTR_MASK);
1581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_SetSpiInterruptMask
1586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Writes the SPI interrupt mask register. This register specifies which
1589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * bits from the SPI interrupt request register can trigger an interrupt event.
1590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled SPI interrupt sources.
1596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_SetSpiInterruptMask(CySCB_Type *base, uint32_t interruptMask)
1600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SPI_INTR_MASK));
1602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_SPI_EC_MASK(base) = interruptMask;
1604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptMask
1609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt mask register. This register specifies which bits
1612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * from the SPI interrupt request register can trigger an interrupt event.
1613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 44


1616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Enabled SPI interrupt sources.
1619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptMask(CySCB_Type const *base)
1623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC_MASK(base));
1625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetSpiInterruptStatusMasked
1630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the SPI interrupt masked request register. This register contains
1633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * a logical AND of corresponding bits from the SPI interrupt request and
1634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * mask registers.
1635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * This function is intended to be used in the interrupt service routine to
1636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * identify which of enabled SPI interrupt sources caused the interrupt event.
1637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The current status of enabled SPI interrupt sources.
1643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetSpiInterruptStatusMasked(CySCB_Type const *base)
1647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (SCB_INTR_SPI_EC_MASKED(base));
1649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
1650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_ClearSpiInterrupt
1654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Clears SPI interrupt sources in the interrupt request register.
1657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param interruptMask
1662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The SPI interrupt sources to be cleared.
1663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * See \ref group_scb_common_macros_SpiIntrStatuses for the set of constants.
1664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE void Cy_SCB_ClearSpiInterrupt(CySCB_Type *base, uint32_t interruptMask)
1667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
1668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(interruptMask, CY_SCB_SPI_INTR_MASK));
1669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     SCB_INTR_SPI_EC(base) = interruptMask;
1671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     (void) SCB_INTR_SPI_EC(base);
1672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 45


1673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /** \cond INTERNAL */
1675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_GetFifoSize
1677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns the RX and TX FIFO depth.
1680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * FIFO depth.
1686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE uint32_t Cy_SCB_GetFifoSize(CySCB_Type const *base)
1689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 829              		.loc 1 1689 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 8
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834 0000 80B4     		push	{r7}
 835              		.cfi_def_cfa_offset 4
 836              		.cfi_offset 7, -4
 837 0002 83B0     		sub	sp, sp, #12
 838              		.cfi_def_cfa_offset 16
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 841 0006 7860     		str	r0, [r7, #4]
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2BOOL(SCB_CTRL_BYTE_MODE, SCB_CTRL(base)) ?
 842              		.loc 1 1690 0
 843 0008 7B68     		ldr	r3, [r7, #4]
 844 000a 1B68     		ldr	r3, [r3]
 845 000c 03F40063 		and	r3, r3, #2048
1691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****                 (CY_SCB_FIFO_SIZE) : (CY_SCB_FIFO_SIZE / 2UL));
 846              		.loc 1 1691 0
 847 0010 002B     		cmp	r3, #0
 848 0012 01D0     		beq	.L48
 849              		.loc 1 1691 0 is_stmt 0 discriminator 1
 850 0014 8023     		movs	r3, #128
1690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2BOOL(SCB_CTRL_BYTE_MODE, SCB_CTRL(base)) ?
 851              		.loc 1 1690 0 is_stmt 1 discriminator 1
 852 0016 00E0     		b	.L50
 853              	.L48:
 854              		.loc 1 1691 0 discriminator 2
 855 0018 4023     		movs	r3, #64
 856              	.L50:
1692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 857              		.loc 1 1692 0 discriminator 1
 858 001a 1846     		mov	r0, r3
 859 001c 0C37     		adds	r7, r7, #12
 860              		.cfi_def_cfa_offset 4
 861 001e BD46     		mov	sp, r7
 862              		.cfi_def_cfa_register 13
 863              		@ sp needed
 864 0020 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 46


 865              		.cfi_restore 7
 866              		.cfi_def_cfa_offset 0
 867 0024 7047     		bx	lr
 868              		.cfi_endproc
 869              	.LFE213:
 870              		.size	Cy_SCB_GetFifoSize, .-Cy_SCB_GetFifoSize
 871 0026 00BF     		.section	.text.Cy_SCB_IsRxDataWidthByte,"ax",%progbits
 872              		.align	2
 873              		.thumb
 874              		.thumb_func
 875              		.type	Cy_SCB_IsRxDataWidthByte, %function
 876              	Cy_SCB_IsRxDataWidthByte:
 877              	.LFB214:
1693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsRxDataWidthByte
1697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns true if the RX data width is a byte (8 bits).
1700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * True if the RX data width is a byte (8 bits).
1706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsRxDataWidthByte(CySCB_Type const *base)
1709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 878              		.loc 1 1709 0
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 8
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882              		@ link register save eliminated.
 883 0000 80B4     		push	{r7}
 884              		.cfi_def_cfa_offset 4
 885              		.cfi_offset 7, -4
 886 0002 83B0     		sub	sp, sp, #12
 887              		.cfi_def_cfa_offset 16
 888 0004 00AF     		add	r7, sp, #0
 889              		.cfi_def_cfa_register 7
 890 0006 7860     		str	r0, [r7, #4]
1710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2VAL(SCB_RX_CTRL_DATA_WIDTH, SCB_RX_CTRL(base)) < CY_SCB_BYTE_WIDTH);
 891              		.loc 1 1710 0
 892 0008 7B68     		ldr	r3, [r7, #4]
 893 000a D3F80033 		ldr	r3, [r3, #768]
 894 000e 03F00F03 		and	r3, r3, #15
 895 0012 072B     		cmp	r3, #7
 896 0014 94BF     		ite	ls
 897 0016 0123     		movls	r3, #1
 898 0018 0023     		movhi	r3, #0
 899 001a DBB2     		uxtb	r3, r3
1711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 900              		.loc 1 1711 0
 901 001c 1846     		mov	r0, r3
 902 001e 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 47


 903              		.cfi_def_cfa_offset 4
 904 0020 BD46     		mov	sp, r7
 905              		.cfi_def_cfa_register 13
 906              		@ sp needed
 907 0022 5DF8047B 		ldr	r7, [sp], #4
 908              		.cfi_restore 7
 909              		.cfi_def_cfa_offset 0
 910 0026 7047     		bx	lr
 911              		.cfi_endproc
 912              	.LFE214:
 913              		.size	Cy_SCB_IsRxDataWidthByte, .-Cy_SCB_IsRxDataWidthByte
 914              		.section	.text.Cy_SCB_IsTxDataWidthByte,"ax",%progbits
 915              		.align	2
 916              		.thumb
 917              		.thumb_func
 918              		.type	Cy_SCB_IsTxDataWidthByte, %function
 919              	Cy_SCB_IsTxDataWidthByte:
 920              	.LFB215:
1712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** 
1714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** /*******************************************************************************
1715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Function Name: Cy_SCB_IsTxDataWidthByte
1716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** ****************************************************************************//**
1717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * Returns true if the TX data width is a byte (8 bits).
1719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \param base
1721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * The pointer to the SCB instance.
1722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * \return
1724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** * If true, the TX data width is a byte (8 bits). Otherwise, false.
1725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *
1726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** *******************************************************************************/
1727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** __STATIC_INLINE bool Cy_SCB_IsTxDataWidthByte(CySCB_Type const *base)
1728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** {
 921              		.loc 1 1728 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 8
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925              		@ link register save eliminated.
 926 0000 80B4     		push	{r7}
 927              		.cfi_def_cfa_offset 4
 928              		.cfi_offset 7, -4
 929 0002 83B0     		sub	sp, sp, #12
 930              		.cfi_def_cfa_offset 16
 931 0004 00AF     		add	r7, sp, #0
 932              		.cfi_def_cfa_register 7
 933 0006 7860     		str	r0, [r7, #4]
1729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h ****     return (_FLD2VAL(SCB_TX_CTRL_DATA_WIDTH, SCB_TX_CTRL(base)) < CY_SCB_BYTE_WIDTH);
 934              		.loc 1 1729 0
 935 0008 7B68     		ldr	r3, [r7, #4]
 936 000a D3F80032 		ldr	r3, [r3, #512]
 937 000e 03F00F03 		and	r3, r3, #15
 938 0012 072B     		cmp	r3, #7
 939 0014 94BF     		ite	ls
 940 0016 0123     		movls	r3, #1
 941 0018 0023     		movhi	r3, #0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 48


 942 001a DBB2     		uxtb	r3, r3
1730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_common.h **** }
 943              		.loc 1 1730 0
 944 001c 1846     		mov	r0, r3
 945 001e 0C37     		adds	r7, r7, #12
 946              		.cfi_def_cfa_offset 4
 947 0020 BD46     		mov	sp, r7
 948              		.cfi_def_cfa_register 13
 949              		@ sp needed
 950 0022 5DF8047B 		ldr	r7, [sp], #4
 951              		.cfi_restore 7
 952              		.cfi_def_cfa_offset 0
 953 0026 7047     		bx	lr
 954              		.cfi_endproc
 955              	.LFE215:
 956              		.size	Cy_SCB_IsTxDataWidthByte, .-Cy_SCB_IsTxDataWidthByte
 957              		.section	.text.Cy_SCB_UART_Enable,"ax",%progbits
 958              		.align	2
 959              		.thumb
 960              		.thumb_func
 961              		.type	Cy_SCB_UART_Enable, %function
 962              	Cy_SCB_UART_Enable:
 963              	.LFB218:
 964              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\scb\\cy_scb_uart.h"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \file cy_scb_uart.h
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \version 2.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Provides UART API declarations of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Driver API for UART
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The functions and other declarations used in this part of the driver are in 
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * cy_scb_uart.h. You can also include cy_pdl.h (ModusToolbox only) to get access 
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * to all functions and declarations in the PDL.
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The Universal Asynchronous Receiver/Transmitter (UART) protocol is an 
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * asynchronous serial interface protocol. UART communication is typically 
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * point-to-point. The UART interface consists of two signals:
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * TX: Transmitter output
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * RX: Receiver input
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Additionally, two side-band signals are used to implement flow control in 
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * UART. Note that the flow control applies only to TX functionality.
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Clear to Send (CTS): This is an input signal to the transmitter. 
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   When active, it indicates that the slave is ready for the master to 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 49


  34:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   transmit data.
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Ready to Send (RTS): This is an output signal from the receiver. When 
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   active, it indicates that the receiver is ready to receive data
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Features:
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Supports UART protocol
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   * Standard UART
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   * Multi-processor mode
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * SmartCard (ISO7816) reader
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * IrDA
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Data frame size programmable from 4 to 16 bits
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Programmable number of STOP bits, which can be set in terms of half bit 
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   periods between 1 and 4
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Parity support (odd and even parity)
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Median filter on Rx input
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Programmable oversampling
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Start skipping
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \section group_scb_uart_configuration Configuration Considerations
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The UART driver configuration can be divided to number of sequential
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * steps listed below:
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * \ref group_scb_uart_config
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * \ref group_scb_uart_pins
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * \ref group_scb_uart_clock
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * \ref group_scb_uart_data_rate
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * \ref group_scb_uart_intr
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * \ref group_scb_uart_enable
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \note
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * UART driver is built on top of the SCB hardware block. The SCB5 instance is
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * used as an example for all code snippets. Modify the code to match your
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * design.
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \subsection group_scb_uart_config Configure UART
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * To set up the UART driver, provide the configuration parameters in the
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref cy_stc_scb_uart_config_t structure. For example: provide uartMode,
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * oversample, dataWidth, enableMsbFirst, parity, and stopBits. The other
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * parameters are optional. To initialize the driver, call \ref Cy_SCB_UART_Init 
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * function providing a pointer to the populated \ref cy_stc_scb_uart_config_t 
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * structure and the allocated \ref cy_stc_scb_uart_context_t structure.
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_CFG
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \subsection group_scb_uart_pins Assign and Configure Pins
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Only dedicated SCB pins can be used for UART operation. The HSIOM
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * register must be configured to connect dedicated SCB UART pins to the 
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * SCB block. Also, the UART output pins must be configured in Strong Drive 
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Input Off mode and UART input pins in Digital High-Z:
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_CFG_PINS
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 50


  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \subsection group_scb_uart_clock Assign Clock Divider
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * A clock source must be connected to the SCB block to oversample input and
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * output signals, in this document this clock will be referred as clk_scb.
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * You must use one of available integer or fractional dividers. Use the 
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref group_sysclk driver API to do this.
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_CFG_ASSIGN_CLOCK
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \subsection group_scb_uart_data_rate Configure Baud Rate
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * To get the UART to operate with the desired baud rate, the clk_scb frequency
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * and the oversample must be configured. Use the \ref group_sysclk driver API
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * to configure clk_scb frequency. Set the <em><b>oversample parameter
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * in configuration structure</b></em> to define the number of the SCB clocks
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * within one UART bit-time.
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_CFG_DATA_RATE
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * <b>Refer to the technical reference manual (TRM) section UART sub-section
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Clocking and Oversampling to get information about how to configure the UART to run with
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * desired baud rate.</b>
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \subsection group_scb_uart_intr Configure Interrupt
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The interrupt is optional for the UART operation. To configure interrupt
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * the \ref Cy_SCB_UART_Interrupt function must be called in the interrupt
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * handler for the selected SCB instance. Also, this interrupt must be enabled
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * in the NVIC.
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The interrupt must be configured when \ref group_scb_uart_hl will be used.
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_INTR_A
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_INTR_B
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \subsection group_scb_uart_enable Enable UART
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Finally, enable the UART operation by calling \ref Cy_SCB_UART_Enable.
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_ENABLE
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \section group_scb_uart_use_cases Common Use Cases
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The UART API is divided into two categories: \ref group_scb_uart_low_level_functions
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * and \ref group_scb_uart_high_level_functions. \n
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * <em>Do not mix <b>High-Level</b> and <b>Low-Level</b> API because a Low-Level
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * API can adversely affect the operation of a High-Level API.</em>
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \subsection group_scb_uart_ll Low-Level API
 145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The \ref group_scb_uart_low_level_functions functions allow
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * interacting directly with the hardware and do not use \ref Cy_SCB_UART_Interrupt.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 51


 148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * These functions do not require context for operation. Thus, NULL can be
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * passed for context parameter in \ref Cy_SCB_UART_Init and \ref Cy_SCB_UART_Disable 
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * instead of a pointer to the context structure.
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * To write data into the TX FIFO, use one of the provided functions:
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_Put, \ref Cy_SCB_UART_PutArray,
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_PutArrayBlocking or \ref Cy_SCB_UART_PutString.
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   Note that putting data into the TX FIFO starts data transfer.
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * To read data from the RX FIFO, use one of the provided functions:
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_Get, \ref Cy_SCB_UART_GetArray or
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_GetArrayBlocking.
 160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * The statuses can be polled using: \ref Cy_SCB_UART_GetRxFifoStatus and
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_GetTxFifoStatus.
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <em>The statuses are <b>W1C (Write 1 to Clear)</b> and after a status
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   is set, it must be cleared.</em> Note that there are statuses evaluated as level.
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   These statuses remain set until an event is true. Therefore, after the clear
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   operation, the status is cleared but then it is restored (if event is still
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   true).
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   Also, the following functions can be used for polling as well
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_IsTxComplete, \ref Cy_SCB_UART_GetNumInRxFifo and
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref Cy_SCB_UART_GetNumInTxFifo.
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_TRANSMIT_DATA_LL
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \subsection group_scb_uart_hl High-Level API
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The \ref group_scb_uart_high_level_functions API use \ref Cy_SCB_UART_Interrupt
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * to execute the transfer. Call \ref Cy_SCB_UART_Transmit to start transmission.
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Call \ref Cy_SCB_UART_Receive to start receive operation. After the
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * operation is started the \ref Cy_SCB_UART_Interrupt handles the data
 181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * transfer until its completion.
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Therefore \ref Cy_SCB_UART_Interrupt must be called inside the user 
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * interrupt handler to make the High-Level API work. To monitor status
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * of transmit operation, use \ref Cy_SCB_UART_GetTransmitStatus and
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref Cy_SCB_UART_GetReceiveStatus to monitor receive status appropriately.
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Alternatively use \ref Cy_SCB_UART_RegisterCallback to register callback
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * function to be notified about \ref group_scb_uart_macros_callback_events.
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * <b>Receive Operation</b>
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_RECEIVE_DATA_HL
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * <b>Transmit Operation</b>
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \snippet SCB_CompDatasheet_sut_01_revA.cydsn\uart_snippets.c UART_TRANSMIT_DATA_HL
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * There is also capability to insert a receive ring buffer that operates between
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * the RX FIFO and the user buffer. The received data is copied into the ring
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * buffer from the RX FIFO. This process runs in the background after the ring
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * buffer operation is started by \ref Cy_SCB_UART_StartRingBuffer.
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * When \ref Cy_SCB_UART_Receive is called, it first reads data from the ring
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * buffer and then sets up an interrupt to receive more data if the required
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * amount has not yet been read.
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \section group_scb_uart_dma_trig DMA Trigger
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 52


 205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The SCB provides TX and RX output trigger signals that can be routed to the
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * DMA controller inputs. These signals are assigned based on the data availability
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * in the TX and RX FIFOs appropriately.
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * The RX trigger signal is active while the number of data
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   elements in the RX FIFO is greater than the value of RX FIFO level. Use
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   function \ref Cy_SCB_SetRxFifoLevel or set configuration structure
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   rxFifoTriggerLevel parameter to configure RX FIFO level value. \n
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <em>For example, the RX FIFO has 8 data elements and the RX FIFO level is 0.
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   The RX trigger signal is active until DMA reads all data from
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   the RX FIFO.</em>
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * The TX trigger signal is active while the number of data elements
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   in the TX FIFO is less than the value of TX FIFO level. Use function
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref Cy_SCB_SetTxFifoLevel or set configuration structure txFifoTriggerLevel
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   parameter to configure TX FIFO level value. \n
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <em>For example, the TX FIFO has 0 data elements (empty) and the TX FIFO level
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   is 7. The TX trigger signal is active until DMA loads TX FIFO
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   with 8 data elements (note that after the first TX load operation, the data 
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   element goes to the shift register and TX FIFO is empty).</em>
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * To route SCB TX or RX trigger signals to DMA controller use \ref group_trigmux
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * driver API.
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \note
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * To properly handle DMA level request signal activation and de-activation from the SCB
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * peripheral block the DMA Descriptor typically must be configured to re-trigger
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * after 16 Clk_Slow cycles.
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \section group_scb_uart_lp Low Power Support
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The UART driver provides callback functions to handle power mode
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * transition. The callback \ref Cy_SCB_UART_DeepSleepCallback must be called
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * during execution of \ref Cy_SysPm_CpuEnterDeepSleep \ref Cy_SCB_UART_HibernateCallback
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * must be called during execution of \ref Cy_SysPm_SystemEnterHibernate. To trigger the
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * callback execution, the callback must be registered before calling the
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * power mode transition function. Refer to \ref group_syspm driver for more
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * information about power mode transitions and callback registration.
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The UART is disabled during Deep Sleep and Hibernate and stops driving 
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * the output pins. The state of the UART output pins TX and RTS is High-Z, 
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * which can cause unexpected behavior of the UART receiver due to possible
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * glitches on these lines. These pins must be set to the inactive state before 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * entering Deep Sleep or Hibernate mode.
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * These pins must keep the inactive level (the same state 
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * when UART TX is enabled and does not transfer data) before entering Deep 
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Sleep or Hibernate mode. To do that, write the GPIO data register of each pin 
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * to the inactive level for each output pin. Then configure High-Speed Input 
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Output Multiplexer (HSIOM) of each pin to be controlled by the GPIO (use 
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref group_gpio driver API). After exiting Deep Sleep mode the UART 
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * must be enabled and the pins configuration restored to return the 
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * UART control of the pins (after exiting Hibernate mode, the 
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * system initialization code does the same). Copy either or 
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * both \ref Cy_SCB_UART_DeepSleepCallback and \ref Cy_SCB_UART_HibernateCallback 
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * as appropriate, and make the changes described above inside the function.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 53


 262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Alternately, external pull-up or pull-down resistors can be connected 
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * to the appropriate UART lines to keep them inactive during Deep-Sleep or 
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Hibernate.
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \section group_scb_uart_more_information More Information
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * For more information on the SCB peripheral, refer to the technical reference
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * manual (TRM).
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \section group_scb_uart_MISRA MISRA-C Compliance
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ********************************************************************************
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * <table class="doxtable">
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <th>MISRA Rule</th>
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <th>Rule Class (Required/Advisory)</th>
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <th>Rule Description</th>
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <th>Description of Deviation(s)</th>
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>11.4</td>
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>A</td>
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>A cast should not be performed between a pointer to object type and
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         a different pointer to object type.</td>
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         * The pointer to the buffer memory is void to allow handling different
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         different data types: uint8_t (4-8 bits) or uint16_t (9-16 bits).
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         The cast operation is safe because the configuration is verified
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         before operation is performed.
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         * The functions \ref Cy_SCB_UART_DeepSleepCallback and
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         \ref Cy_SCB_UART_HibernateCallback are callback of
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         \ref cy_en_syspm_status_t type. The cast operation safety in these
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         functions becomes the user's responsibility because pointers are
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         initialized when callback is registered in SysPm driver.</td>
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>14.2</td>
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>R</td>
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>All non-null statements shall either: a) have at least one side-effect
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         however executed, or b) cause control flow to change.</td>
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>The unused function parameters are cast to void. This statement
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         has no side-effect and is used to suppress a compiler warning.</td>
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>14.7</td>
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>R</td>
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>A function shall have a single point of exit at the end of the
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         function.</td>
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>The functions can return from several points. This is done to improve
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         code clarity when returning error status code if input parameters
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         validation fails.</td>
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * </table>
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \section group_scb_uart_changelog Changelog
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * <table class="doxtable">
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 54


 319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td rowspan="2">2.20</td>
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Flattened the organization of the driver source code into the single 
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         source directory and the single include directory.
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     </td>
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Driver library directory-structure simplification.</td>
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Added register access layer. Use register access macros instead
 329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         of direct register access using dereferenced pointers.</td>
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Makes register access device-independent, so that the PDL does 
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         not need to be recompiled for each supported part number.</td>
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>2.10</td>
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>None.</td>
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>SCB I2C driver updated.</td>
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td rowspan="5">2.0</td>
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Added parameters validation for public API.</td>
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td></td>
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Replaced variables that have limited range of values with enumerated
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         types.</td>
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td></td>
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Added missing "cy_cb_" to the callback function type names.</td>
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td></td>
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Added function \ref Cy_SCB_UART_SendBreakBlocking for break condition
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         generation.</td>
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td></td>
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Fixed low power callbacks \ref Cy_SCB_UART_DeepSleepCallback and
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         \ref Cy_SCB_UART_HibernateCallback to prevent the device from entering
 360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         low power mode when RX FIFO is not empty.</td>
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>The callbacks allowed entering device into low power mode when RX FIFO
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *         had data.</td>
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   <tr>
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>1.0</td>
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td>Initial version.</td>
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *     <td></td>
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   </tr>
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * </table>
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros Macros
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_functions Functions
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_general_functions General
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_high_level_functions High-Level
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 55


 376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_low_level_functions Low-Level
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_interrupt_functions Interrupt
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_low_power_functions Low Power Callbacks
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \}
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_data_structures Data Structures
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_enums Enumerated Types
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #if !defined(CY_SCB_UART_H)
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_H
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #include "cy_scb_common.h"
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #if defined(__cplusplus)
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** extern "C" {
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #endif
 392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /***************************************
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *          Enumerated Types
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ***************************************/
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_enums
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** UART status codes */
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** typedef enum
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** Operation completed successfully */
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_SUCCESS = 0U,
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** One or more of input parameters are invalid */
 409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_BAD_PARAM = (CY_SCB_ID | CY_PDL_STATUS_ERROR | CY_SCB_UART_ID | 1U),
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * The UART is busy processing a receive operation.
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_RECEIVE_BUSY = (CY_SCB_ID | CY_PDL_STATUS_ERROR | CY_SCB_UART_ID | 2U),
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * The UART is busy processing a transmit operation.
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_TRANSMIT_BUSY = (CY_SCB_ID | CY_PDL_STATUS_ERROR | CY_SCB_UART_ID | 3U)
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** } cy_en_scb_uart_status_t;
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** UART Mode */
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** typedef enum
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_STANDARD  = 0U, /**< Configures the SCB for Standard UART operation */
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_SMARTCARD = 1U, /**< Configures the SCB for SmartCard operation */
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_IRDA      = 2U, /**< Configures the SCB for IrDA operation */
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** } cy_en_scb_uart_mode_t;
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** UART Stop Bits */
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** typedef enum
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 56


 433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_1   = 2U,  /**< UART looks for 1 Stop Bit    */
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_1_5 = 3U,  /**< UART looks for 1.5 Stop Bits */
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_2   = 4U,  /**< UART looks for 2 Stop Bits   */
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_2_5 = 5U,  /**< UART looks for 2.5 Stop Bits */
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_3   = 6U,  /**< UART looks for 3 Stop Bits   */
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_3_5 = 7U,  /**< UART looks for 3.5 Stop Bits */
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_STOP_BITS_4   = 8U,  /**< UART looks for 4 Stop Bits   */
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** } cy_en_scb_uart_stop_bits_t;
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** UART Parity */
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** typedef enum
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_PARITY_NONE = 0U,    /**< UART has no parity check   */
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_PARITY_EVEN = 2U,    /**< UART has even parity check */
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_PARITY_ODD  = 3U,    /**< UART has odd parity check  */
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** } cy_en_scb_uart_parity_t;
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** UART Polarity */
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** typedef enum
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_ACTIVE_LOW  = 0U,   /**< Signal is active low */
 454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_SCB_UART_ACTIVE_HIGH = 1U,   /**< Signal is active high */
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** } cy_en_scb_uart_polarity_t;
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_enums */
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *                           Type Definitions
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_data_structures
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Provides the typedef for the callback function called in the
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref Cy_SCB_UART_Interrupt to notify the user about occurrences of
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref group_scb_uart_macros_callback_events.
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** typedef void (* cy_cb_scb_uart_handle_events_t)(uint32_t event);
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** UART configuration structure */
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** typedef struct stc_scb_uart_config
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** Specifies the UART's mode of operation */
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     cy_en_scb_uart_mode_t    uartMode;
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Oversample factor for UART.
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * * The UART baud rate is the SCB Clock frequency / oversample
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     *  (valid range is 8-16).
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * * For IrDA, the oversample is always 16, unless
 486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * \ref irdaEnableLowPowerReceiver is enabled. Then the oversample is
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * reduced to the \ref group_scb_uart_macros_irda_lp_ovs set.
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    oversample;
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 57


 490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** The width of UART data (valid range is 5 to 9) */
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    dataWidth;
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables the hardware to shift out data element MSB first; otherwise,
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * LSB first
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        enableMsbFirst;
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Specifies the number of stop bits in the UART transaction, in half-bit
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * increments
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     cy_en_scb_uart_stop_bits_t    stopBits;
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** Configures the UART parity */
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     cy_en_scb_uart_parity_t    parity;
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables a digital 3-tap median filter (2 out of 3 voting) to be applied 
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * to the input of the RX FIFO to filter glitches on the line (for IrDA, 
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * this parameter is ignored)
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     *
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        enableInputFilter;
 516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables the hardware to drop data in the RX FIFO when a parity error is
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * detected
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        dropOnParityError;
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables the hardware to drop data in the RX FIFO when a frame error is
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * detected
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        dropOnFrameError;
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables the UART operation in Multi-Processor mode which requires
 531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * dataWidth to be 9 bits (the 9th bit is used to indicate address byte)
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        enableMutliProcessorMode;
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * If Multi Processor mode is enabled, this is the address of the RX
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * FIFO. If the address matches, data is accepted into the FIFO. If
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * it does not match, the data is ignored.
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    receiverAddress;
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * This is the address mask for the Multi Processor address. 1 indicates
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * that the incoming address must match the corresponding bit in the slave
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * address. A 0 in the mask indicates that the incoming address does
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * not need to match.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 58


 547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    receiverAddressMask;
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables the hardware to accept the matching address in the RX FIFO.
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * This is useful when the device supports more than one address.
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        acceptAddrInFifo;
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** Inverts the IrDA RX input */
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        irdaInvertRx;
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables the low-power receive for IrDA mode.
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Note that the transmission must be disabled if this mode is enabled.
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        irdaEnableLowPowerReceiver;
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables retransmission of the frame placed in the TX FIFO when
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * NACK is received in SmartCard mode (for Standard and IrDA , this parameter
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * is ignored)
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        smartCardRetryOnNack;
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Enables the usage of the CTS input signal for the transmitter. The
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * transmitter waits for CTS to be active before sending data
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     bool        enableCts;
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** Sets the CTS Polarity */
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     cy_en_scb_uart_polarity_t    ctsPolarity;
 580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * When the RX FIFO has fewer entries than rtsRxFifoLevel, the
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * RTS signal is active (note to disable RTS, set this field to zero)
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    rtsRxFifoLevel;
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** Sets the RTS Polarity */
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     cy_en_scb_uart_polarity_t    rtsPolarity;
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** Specifies the number of bits to detect a break condition */
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    breakWidth;
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * When there are more entries in the RX FIFO than this level
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * the RX trigger output goes high. This output can be connected
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * to a DMA channel through a trigger mux.
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Also, it controls the \ref CY_SCB_UART_RX_TRIGGER interrupt source.
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    rxFifoTriggerLevel;
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * The bits set in this mask allow the event to cause an interrupt
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * (See \ref group_scb_uart_macros_rx_fifo_status for the set of constants)
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 59


 604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    rxFifoIntEnableMask;
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * When there are fewer entries in the TX FIFO then this level
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * the TX trigger output goes high. This output can be connected
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * to a DMA channel through a trigger mux.
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Also, it controls \ref CY_SCB_UART_TX_TRIGGER interrupt source.
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    txFifoTriggerLevel;
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /**
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * Bits set in this mask allows the event to cause an interrupt
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * (See \ref group_scb_uart_macros_tx_fifo_status for the set of constants)
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t    txFifoIntEnableMask;
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** } cy_stc_scb_uart_config_t;
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** UART context structure.
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * All fields for the context structure are internal. Firmware never reads or
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * writes these values. Firmware allocates the structure and provides the
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * address of the structure to the driver in function calls. Firmware must
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * ensure that the defined instance of this structure remains in scope
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * while the drive is in use.
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** typedef struct cy_stc_scb_uart_context
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** \cond INTERNAL */
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t volatile txStatus;         /**< The transmit status */
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t volatile rxStatus;         /**< The receive status */
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     void     *rxRingBuf;                /**< The pointer to the ring buffer */
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t  rxRingBufSize;            /**< The ring buffer size */
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t volatile rxRingBufHead;    /**< The ring buffer head index */
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t volatile rxRingBufTail;    /**< The ring buffer tail index */
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     void     *rxBuf;                    /**< The pointer to the receive buffer */
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t  rxBufSize;                /**< The receive buffer size */
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t volatile rxBufIdx;         /**< The current location in the receive buffer */
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     void     *txBuf;                    /**< The pointer to the transmit buffer */
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t  txBufSize;                /**< The transmit buffer size */
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t volatile txLeftToTransmit; /**< The number of data elements left to be transmitted */
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** The pointer to an event callback that is called when any of
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     * \ref group_scb_uart_macros_callback_events occurs
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     */
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     cy_cb_scb_uart_handle_events_t cbEvents;
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #if !defined(NDEBUG)
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     uint32_t initKey;               /**< Tracks the context initialization */
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #endif /* !(NDEBUG) */
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     /** \endcond */
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** } cy_stc_scb_uart_context_t;
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_data_structures */
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 60


 661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *                           Function Prototypes
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_general_functions
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** cy_en_scb_uart_status_t Cy_SCB_UART_Init(CySCB_Type *base, cy_stc_scb_uart_config_t const *config,
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                          cy_stc_scb_uart_context_t *context);
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void Cy_SCB_UART_DeInit (CySCB_Type *base);
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_Enable(CySCB_Type *base);
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void Cy_SCB_UART_Disable(CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_EnableCts      (CySCB_Type *base);
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_DisableCts     (CySCB_Type *base);
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_SetRtsFifoLevel(CySCB_Type *base, uint32_t level);
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetRtsFifoLevel(CySCB_Type const *base);
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_EnableSkipStart (CySCB_Type *base);
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_DisableSkipStart(CySCB_Type *base);
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_general_functions */
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_high_level_functions
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void     Cy_SCB_UART_StartRingBuffer   (CySCB_Type *base, void *buffer, uint32_t size,
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                         cy_stc_scb_uart_context_t *context);
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void     Cy_SCB_UART_StopRingBuffer    (CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetNumInRingBuffer(CySCB_Type const *base, cy_stc_scb_uart_context_t const *co
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void     Cy_SCB_UART_ClearRingBuffer   (CySCB_Type const *base, cy_stc_scb_uart_context_t *context)
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** cy_en_scb_uart_status_t Cy_SCB_UART_Receive(CySCB_Type *base, void *buffer, uint32_t size,
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                             cy_stc_scb_uart_context_t *context);
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void     Cy_SCB_UART_AbortReceive    (CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetReceiveStatus(CySCB_Type const *base, cy_stc_scb_uart_context_t const *cont
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetNumReceived  (CySCB_Type const *base, cy_stc_scb_uart_context_t const *cont
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** cy_en_scb_uart_status_t Cy_SCB_UART_Transmit(CySCB_Type *base, void *buffer, uint32_t size,
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                              cy_stc_scb_uart_context_t *context);
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void     Cy_SCB_UART_AbortTransmit       (CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetTransmitStatus   (CySCB_Type const *base, cy_stc_scb_uart_context_t const *
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** uint32_t Cy_SCB_UART_GetNumLeftToTransmit(CySCB_Type const *base, cy_stc_scb_uart_context_t const *
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_high_level_functions */
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_low_level_functions
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_Put             (CySCB_Type *base, uint32_t data);
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_PutArray        (CySCB_Type *base, void *buffer, uint32_t size
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_PutArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_PutString       (CySCB_Type *base, char_t const string[]);
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void Cy_SCB_UART_SendBreakBlocking(CySCB_Type *base, uint32_t breakWidth);
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_Get             (CySCB_Type const *base);
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 61


 718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetArray        (CySCB_Type const *base, void *buffer, uint32_
 719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_GetArrayBlocking(CySCB_Type const *base, void *buffer, uint32_
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetTxFifoStatus  (CySCB_Type const *base);
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_ClearTxFifoStatus(CySCB_Type *base, uint32_t clearMask);
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetRxFifoStatus  (CySCB_Type const *base);
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_ClearRxFifoStatus(CySCB_Type *base, uint32_t clearMask);
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetNumInTxFifo   (CySCB_Type const *base);
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE bool     Cy_SCB_UART_IsTxComplete     (CySCB_Type const *base);
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetNumInRxFifo   (CySCB_Type const *base);
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_ClearRxFifo      (CySCB_Type *base);
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void     Cy_SCB_UART_ClearTxFifo      (CySCB_Type *base);
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_low_level_functions */
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_interrupt_functions
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** void Cy_SCB_UART_Interrupt(CySCB_Type *base, cy_stc_scb_uart_context_t *context);
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_RegisterCallback(CySCB_Type const *base, cy_cb_scb_uart_handle_eve
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                   cy_stc_scb_uart_context_t *context);
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_interrupt_functions */
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_low_power_functions
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** cy_en_syspm_status_t Cy_SCB_UART_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, 
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** cy_en_syspm_status_t Cy_SCB_UART_HibernateCallback(cy_stc_syspm_callback_params_t *callbackParams, 
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_low_power_functions */
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *                               API Constants
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_macros
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_irda_lp_ovs UART IRDA Low Power Oversample factors
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS16      (1UL)   /**< IrDA in low-power mode oversampled by 16   */
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS32      (2UL)   /**< IrDA in low-power mode oversampled by 32   */
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS48      (3UL)   /**< IrDA in low-power mode oversampled by 48   */
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS96      (4UL)   /**< IrDA in low-power mode oversampled by 96   */
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS192     (5UL)   /**< IrDA in low-power mode oversampled by 192  */
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS768     (6UL)   /**< IrDA in low-power mode oversampled by 768  */
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IRDA_LP_OVS1536    (7UL)   /**< IrDA in low-power mode oversampled by 1536 */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 62


 775:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_irda_lp_ovs */
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 778:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_rx_fifo_status UART RX FIFO status.
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Macros to check UART RX FIFO status returned by \ref Cy_SCB_UART_GetRxFifoStatus
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * function or assign mask for \ref Cy_SCB_UART_ClearRxFifoStatus function.
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Each UART RX FIFO status is encoded in a separate bit, therefore multiple
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * bits may be set to indicate the current status.
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The number of entries in the RX FIFO is more than the RX FIFO trigger level
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * value
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_TRIGGER         (SCB_INTR_RX_TRIGGER_Msk)
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The RX FIFO is not empty, there is data to read */
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_NOT_EMPTY       (SCB_INTR_RX_NOT_EMPTY_Msk)
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The RX FIFO is full, there is no more space for additional data, and
 796:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * any additional data will be dropped
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_FULL            (SCB_INTR_RX_FULL_Msk)
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The RX FIFO was full and there was an attempt to write to it.
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * That additional data was dropped.
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_OVERFLOW        (SCB_INTR_RX_OVERFLOW_Msk)
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** An attempt to read from an empty RX FIFO */
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_UNDERFLOW       (SCB_INTR_RX_UNDERFLOW_Msk)
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The RX FIFO detected a frame error, either a stop or stop-bit error */
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_ERR_FRAME       (SCB_INTR_RX_FRAME_ERROR_Msk)
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The RX FIFO detected a parity error */
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_ERR_PARITY      (SCB_INTR_RX_PARITY_ERROR_Msk)
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The RX FIFO detected a break transmission from the transmitter */
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_BREAK_DETECT    (SCB_INTR_RX_BREAK_DETECT_Msk)
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_rx_fifo_status */
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_tx_fifo_status UART TX FIFO Statuses
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Macros to check UART TX FIFO status returned by \ref Cy_SCB_UART_GetTxFifoStatus
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * function or assign mask for \ref Cy_SCB_UART_ClearTxFifoStatus function.
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Each UART TX FIFO status is encoded in a separate bit, therefore multiple bits
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * may be set to indicate the current status.
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The number of entries in the TX FIFO is less than the TX FIFO trigger level
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * value
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_TRIGGER     (SCB_INTR_TX_TRIGGER_Msk)
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 63


 832:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The TX FIFO is not full, there is a space for more data */
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_NOT_FULL    (SCB_INTR_TX_NOT_FULL_Msk)
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The TX FIFO is empty, note there may still be data in the shift register.*/
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_EMPTY       (SCB_INTR_TX_EMPTY_Msk)
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** An attempt to write to the full TX FIFO */
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_OVERFLOW    (SCB_INTR_TX_OVERFLOW_Msk)
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** An attempt to read from an empty transmitter FIFO (hardware reads). */
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_UNDERFLOW (SCB_INTR_TX_UNDERFLOW_Msk)
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** All data has been transmitted out of the FIFO, including shifter */
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_DONE        (SCB_INTR_TX_UART_DONE_Msk)
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** SmartCard only: the transmitter received a NACK */
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_NACK        (SCB_INTR_TX_UART_NACK_Msk)
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** SmartCard only: the transmitter lost arbitration */
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_ARB_LOST    (SCB_INTR_TX_UART_ARB_LOST_Msk)
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_tx_fifo_status */
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_receive_status UART Receive Statuses
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Macros to check current UART receive status returned by 
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref Cy_SCB_UART_GetReceiveStatus function. 
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Each UART receive status is encoded in a separate bit, therefore multiple bits
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * may be set to indicate the current status.
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The receive operation started by \ref Cy_SCB_UART_Receive is in progress */
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ACTIVE         (0x01UL)
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The hardware RX FIFO was full and there was an attempt to write to it.
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * That additional data was dropped.
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_OVERFLOW       (SCB_INTR_RX_OVERFLOW_Msk)
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The receive hardware detected a frame error, either a start or
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * stop bit error
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ERR_FRAME      (SCB_INTR_RX_FRAME_ERROR_Msk)
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The receive hardware detected a parity error */
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ERR_PARITY     (SCB_INTR_RX_PARITY_ERROR_Msk)
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The receive hardware detected a break transmission from transmitter */
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_BREAK_DETECT   (SCB_INTR_RX_BREAK_DETECT_Msk)
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_receive_status */
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_transmit_status UART Transmit Status
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Macros to check current UART transmit status returned by 
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref Cy_SCB_UART_GetTransmitStatus function. 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 64


 889:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Each UART transmit status is encoded in a separate bit, therefore multiple bits
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * may be set to indicate the current status.
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The transmit operation started by \ref Cy_SCB_UART_Transmit is in progress */
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_ACTIVE    (0x01UL)
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * All data elements specified by \ref Cy_SCB_UART_Transmit have been loaded
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * into the TX FIFO
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_IN_FIFO   (0x02UL)
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** SmartCard only: the transmitter received a NACK */
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_NACK      (SCB_INTR_TX_UART_NACK_Msk)
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** SmartCard only: the transmitter lost arbitration */
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_ARB_LOST  (SCB_INTR_TX_UART_ARB_LOST_Msk)
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_transmit_status */
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \defgroup group_scb_uart_macros_callback_events UART Callback Events
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Macros to check UART events passed by \ref cy_cb_scb_uart_handle_events_t callback.
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Note that only single event is notified by the callback when it is called.
 914:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * All data elements specified by \ref Cy_SCB_UART_Transmit have been loaded
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * into the TX FIFO
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_IN_FIFO_EVENT (0x01UL)
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The transmit operation started by \ref Cy_SCB_UART_Transmit is complete */
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_DONE_EVENT    (0x02UL)
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** The receive operation started by \ref Cy_SCB_UART_Receive is complete */
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_DONE_EVENT     (0x04UL)
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The ring buffer is full, there is no more space for additional data.
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Additional data is stored in the RX FIFO until it becomes full, at which
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * point data is dropped.
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RB_FULL_EVENT          (0x08UL)
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * An error was detected during the receive operation. This includes overflow,
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * frame error, or parity error. Check \ref Cy_SCB_UART_GetReceiveStatus to
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * determine the source of the error.
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ERR_EVENT      (0x10UL)
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * An error was detected during the transmit operation. This includes a NACK
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * or lost arbitration. Check \ref Cy_SCB_UART_GetTransmitStatus to determine
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * the source of the error
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 65


 946:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_ERR_EVENT     (0x20UL)
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_macros_callback_events */
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** Data returned by the hardware when an empty RX FIFO is read */
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_NO_DATA         (0xFFFFFFFFUL)
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *                            Internal Constants
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \cond INTERNAL */
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_INTR_MASK    (CY_SCB_UART_TX_TRIGGER  | CY_SCB_UART_TX_NOT_FULL  | CY_SCB_UA
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                      CY_SCB_UART_TX_OVERFLOW | CY_SCB_UART_TX_UNDERFLOW | CY_SCB_UA
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                      CY_SCB_UART_TX_NACK     | CY_SCB_UART_TX_ARB_LOST)
 962:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_INTR_MASK    (CY_SCB_UART_RX_TRIGGER    | CY_SCB_UART_RX_NOT_EMPTY | CY_SCB_
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                      CY_SCB_UART_RX_OVERFLOW   | CY_SCB_UART_RX_UNDERFLOW | CY_SCB_
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                      CY_SCB_UART_RX_ERR_PARITY | CY_SCB_UART_RX_BREAK_DETECT)
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TX_INTR        (CY_SCB_TX_INTR_LEVEL | CY_SCB_TX_INTR_UART_NACK | CY_SCB_TX_INT
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RX_INTR        (CY_SCB_RX_INTR_LEVEL | CY_SCB_RX_INTR_OVERFLOW | CY_SCB_RX_INTR
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                     CY_SCB_RX_INTR_UART_PARITY_ERROR | CY_SCB_RX_INTR_UART_BREAK_DE
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_RECEIVE_ERR    (CY_SCB_RX_INTR_OVERFLOW | CY_SCB_RX_INTR_UART_FRAME_ERROR | \
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                     CY_SCB_RX_INTR_UART_PARITY_ERROR)
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_TRANSMIT_ERR   (CY_SCB_TX_INTR_UART_NACK | CY_SCB_TX_INTR_UART_ARB_LOST)
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_INIT_KEY       (0x00ABCDEFUL)
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_MODE_VALID(mode)     ( (CY_SCB_UART_STANDARD  == (mode)) || \
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                               (CY_SCB_UART_SMARTCARD == (mode)) || \
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                               (CY_SCB_UART_IRDA      == (mode)) )
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_STOP_BITS_VALID(stopBits)    ( (CY_SCB_UART_STOP_BITS_1   == (stopBits)) || 
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_1_5 == (stopBits)) || 
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_2   == (stopBits)) || 
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_2_5 == (stopBits)) || 
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_3   == (stopBits)) || 
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_3_5 == (stopBits)) || 
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_STOP_BITS_4   == (stopBits)) )
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_PARITY_VALID(parity)         ( (CY_SCB_UART_PARITY_NONE == (parity)) || \
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_PARITY_EVEN == (parity)) || \
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_PARITY_ODD  == (parity)) )
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_POLARITY_VALID(polarity)     ( (CY_SCB_UART_ACTIVE_LOW  == (polarity)) || \
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_ACTIVE_HIGH == (polarity)) )
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_IRDA_LP_OVS_VALID(ovs)       ( (CY_SCB_UART_IRDA_LP_OVS16   == (ovs)) || \
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS32   == (ovs)) || \
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS48   == (ovs)) || \
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS96   == (ovs)) || \
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS192  == (ovs)) || \
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 66


1003:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS768  == (ovs)) || \
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                       (CY_SCB_UART_IRDA_LP_OVS1536 == (ovs)) )
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_ADDRESS_VALID(addr)          ((addr) <= 0xFFUL)
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_ADDRESS_MASK_VALID(mask)     ((mask) <= 0xFFUL)
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_DATA_WIDTH_VALID(width)      ( ((width) >= 5UL) && ((width) <= 9UL) )
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_OVERSAMPLE_VALID(ovs, mode, lpRx)    ( ((CY_SCB_UART_STANDARD  == (mode)) ||
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                               (((ovs) >= 8UL) && ((ovs) <= 16UL)) :
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                               ((lpRx) ? CY_SCB_UART_IS_IRDA_LP_OVS_
1012:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_RX_BREAK_WIDTH_VALID(base, width)    ( ((width) >= (_FLD2VAL(SCB_RX_CTRL_DAT
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                               ((width) <= 16UL) )
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_TX_BREAK_WIDTH_VALID(width)          ( ((width) >= 4UL) && ((width) <= 16UL)
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** #define CY_SCB_UART_IS_MUTLI_PROC_VALID(mp, mode, width, parity)    ( (mp) ? ((CY_SCB_UART_STANDARD
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****                                                                               (CY_SCB_UART_PARITY_N
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \endcond */
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_macros */
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *                    In-line Function Implementation
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_general_functions
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_Enable
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Enables the SCB block for the UART operation.
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_Enable(CySCB_Type *base)
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 965              		.loc 2 1044 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 8
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969              		@ link register save eliminated.
 970 0000 80B4     		push	{r7}
 971              		.cfi_def_cfa_offset 4
 972              		.cfi_offset 7, -4
 973 0002 83B0     		sub	sp, sp, #12
 974              		.cfi_def_cfa_offset 16
 975 0004 00AF     		add	r7, sp, #0
 976              		.cfi_def_cfa_register 7
 977 0006 7860     		str	r0, [r7, #4]
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     SCB_CTRL(base) |= SCB_CTRL_ENABLED_Msk;
 978              		.loc 2 1045 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 67


 979 0008 7B68     		ldr	r3, [r7, #4]
 980 000a 1B68     		ldr	r3, [r3]
 981 000c 43F00042 		orr	r2, r3, #-2147483648
 982 0010 7B68     		ldr	r3, [r7, #4]
 983 0012 1A60     		str	r2, [r3]
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
 984              		.loc 2 1046 0
 985 0014 00BF     		nop
 986 0016 0C37     		adds	r7, r7, #12
 987              		.cfi_def_cfa_offset 4
 988 0018 BD46     		mov	sp, r7
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 001a 5DF8047B 		ldr	r7, [sp], #4
 992              		.cfi_restore 7
 993              		.cfi_def_cfa_offset 0
 994 001e 7047     		bx	lr
 995              		.cfi_endproc
 996              	.LFE218:
 997              		.size	Cy_SCB_UART_Enable, .-Cy_SCB_UART_Enable
 998              		.section	.rodata
 999 0042 0000     		.align	2
 1000              	.LC1:
 1001 0044 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 1001      72617465 
 1001      645F536F 
 1001      75726365 
 1001      5C50536F 
 1002 0072 7363625C 		.ascii	"scb\\cy_scb_uart.h\000"
 1002      63795F73 
 1002      63625F75 
 1002      6172742E 
 1002      6800
 1003              		.section	.text.Cy_SCB_UART_GetArray,"ax",%progbits
 1004              		.align	2
 1005              		.thumb
 1006              		.thumb_func
 1007              		.type	Cy_SCB_UART_GetArray, %function
 1008              	Cy_SCB_UART_GetArray:
 1009              	.LFB226:
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_EnableCts
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Enables the Clear to Send (CTS) input for the UART. The UART will not transmit
1054:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * data while this signal is inactive.
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_EnableCts(CySCB_Type *base)
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     SCB_UART_FLOW_CTRL(base) |= SCB_UART_FLOW_CTRL_CTS_ENABLED_Msk;
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 68


1064:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_DisableCts
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Disables the Clear to Send (CTS) input for the UART.
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * See \ref Cy_SCB_UART_EnableCts for the details.
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_DisableCts(CySCB_Type *base)
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     SCB_UART_FLOW_CTRL(base) &= (uint32_t) ~SCB_UART_FLOW_CTRL_CTS_ENABLED_Msk;
1080:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_SetRtsFifoLevel
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Sets a level for the Ready To Send (RTS) signal activation.
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * When the number of data elements in the receive FIFO is below this level,
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * then the RTS output is active. Otherwise, the RTS signal is inactive.
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * To disable the RTS signal generation, set this level to zero.
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param level
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The level in the RX FIFO for RTS signal activation.
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_SetRtsFifoLevel(CySCB_Type *base, uint32_t level)
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, level));
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_REG32_CLR_SET(SCB_UART_FLOW_CTRL(base), SCB_UART_FLOW_CTRL_TRIGGER_LEVEL, level);
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetRtsFifoLevel
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Returns the level in the RX FIFO for the RTS signal activation.
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The level in the RX FIFO for RTS signal activation.
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetRtsFifoLevel(CySCB_Type const *base)
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 69


1121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return _FLD2VAL(SCB_UART_FLOW_CTRL_TRIGGER_LEVEL, SCB_UART_FLOW_CTRL(base));
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_EnableSkipStart
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Enables the skip start-bit functionality.
1131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * When skip start is enabled the UART hardware does not synchronize to a 
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * start bit but synchronizes to the first rising edge. To create a rising edge, 
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * the first data bit must be a 1. This feature is useful when the start bit 
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * falling edge is used to wake the device through a GPIO interrupt.
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \note
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * When skip start-bit feature is enabled, it is applied (UART synchronizes 
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * to the first rising edge after start bit) whenever the SCB is enabled. 
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This can cause incorrect UART synchronization and data reception when 
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * the first data bit is not a 1. Therefore, disable the skip start-bit 
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * when it should not be applied.
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Note that SCB is disabled before enter Deep Sleep mode or after calling 
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref Cy_SCB_UART_Disable.
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_EnableSkipStart(CySCB_Type *base)
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     SCB_UART_RX_CTRL(base) |= SCB_UART_RX_CTRL_SKIP_START_Msk;
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_DisableSkipStart
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Disable the skip start-bit functionality.
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * See \ref Cy_SCB_UART_EnableSkipStart for the details.
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_DisableSkipStart(CySCB_Type *base)
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     SCB_UART_RX_CTRL(base) &= (uint32_t) ~SCB_UART_RX_CTRL_SKIP_START_Msk;
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /** \} group_scb_uart_general_functions */
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /**
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \addtogroup group_scb_uart_low_level_functions
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \{
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** */
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 70


1178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_Get
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Reads a single data element from the UART RX FIFO.
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This function does not check whether the RX FIFO has data before reading it.
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * If the RX FIFO is empty, the function returns \ref CY_SCB_UART_RX_NO_DATA.
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Data from the RX FIFO.
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The data element size is defined by the configured data width.
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_Get(CySCB_Type const *base)
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return Cy_SCB_ReadRxFifo(base);
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetArray
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Reads an array of data out of the UART RX FIFO.
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This function does not block. It returns how many data elements were read
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * from the RX FIFO.
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param buffer
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the location to place the data read from the RX FIFO.
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The element size is defined by the data type, which depends on the configured
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * data width.
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param size
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements to read from the RX FIFO.
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements read from the RX FIFO.
1220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetArray(CySCB_Type const *base, void *buffer, uint32_t size)
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 1010              		.loc 2 1223 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 16
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0000 80B5     		push	{r7, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0002 84B0     		sub	sp, sp, #16
 1019              		.cfi_def_cfa_offset 24
 1020 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 71


 1021              		.cfi_def_cfa_register 7
 1022 0006 F860     		str	r0, [r7, #12]
 1023 0008 B960     		str	r1, [r7, #8]
 1024 000a 7A60     		str	r2, [r7, #4]
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
 1025              		.loc 2 1224 0
 1026 000c BB68     		ldr	r3, [r7, #8]
 1027 000e 002B     		cmp	r3, #0
 1028 0010 02D0     		beq	.L57
 1029              		.loc 2 1224 0 is_stmt 0 discriminator 2
 1030 0012 7B68     		ldr	r3, [r7, #4]
 1031 0014 002B     		cmp	r3, #0
 1032 0016 04D1     		bne	.L58
 1033              	.L57:
 1034              		.loc 2 1224 0 discriminator 3
 1035 0018 4FF49961 		mov	r1, #1224
 1036 001c 0648     		ldr	r0, .L60
 1037 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1038              	.L58:
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return Cy_SCB_ReadArray(base, buffer, size);
 1039              		.loc 2 1226 0 is_stmt 1
 1040 0022 7A68     		ldr	r2, [r7, #4]
 1041 0024 B968     		ldr	r1, [r7, #8]
 1042 0026 F868     		ldr	r0, [r7, #12]
 1043 0028 FFF7FEFF 		bl	Cy_SCB_ReadArray
 1044 002c 0346     		mov	r3, r0
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
 1045              		.loc 2 1227 0
 1046 002e 1846     		mov	r0, r3
 1047 0030 1037     		adds	r7, r7, #16
 1048              		.cfi_def_cfa_offset 8
 1049 0032 BD46     		mov	sp, r7
 1050              		.cfi_def_cfa_register 13
 1051              		@ sp needed
 1052 0034 80BD     		pop	{r7, pc}
 1053              	.L61:
 1054 0036 00BF     		.align	2
 1055              	.L60:
 1056 0038 44000000 		.word	.LC1
 1057              		.cfi_endproc
 1058              	.LFE226:
 1059              		.size	Cy_SCB_UART_GetArray, .-Cy_SCB_UART_GetArray
 1060              		.section	.text.Cy_SCB_UART_GetNumInRxFifo,"ax",%progbits
 1061              		.align	2
 1062              		.thumb
 1063              		.thumb_func
 1064              		.type	Cy_SCB_UART_GetNumInRxFifo, %function
 1065              	Cy_SCB_UART_GetNumInRxFifo:
 1066              	.LFB230:
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetArrayBlocking
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Reads an array of data out of the UART RX FIFO.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 72


1235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This function blocks until the number of data elements specified by the
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * size has been read from the RX FIFO.
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param buffer
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the location to place the data read from the RX FIFO.
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The element size is defined by the data type, which depends on the configured
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * data width.
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param size
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements to read from the RX FIFO.
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_GetArrayBlocking(CySCB_Type const *base, void *buffer, uint32_t si
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     Cy_SCB_ReadArrayBlocking(base, buffer, size);
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetRxFifoStatus
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Returns the current status of the RX FIFO.
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref group_scb_uart_macros_rx_fifo_status
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetRxFifoStatus(CySCB_Type const *base)
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return (Cy_SCB_GetRxInterruptStatus(base) & CY_SCB_UART_RX_INTR_MASK);
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_ClearRxFifoStatus
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Clears the selected statuses of the RX FIFO.
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param clearMask
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The mask whose statuses to clear.
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * See \ref group_scb_uart_macros_rx_fifo_status for the set of constants.
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \note
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * This status is also used for interrupt generation, so clearing it also
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 73


1292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   clears the interrupt sources.
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Level-sensitive statuses such as \ref CY_SCB_UART_RX_TRIGGER,
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref CY_SCB_UART_RX_NOT_EMPTY and \ref CY_SCB_UART_RX_FULL are set high again after
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   being cleared if the condition remains true.
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_ClearRxFifoStatus(CySCB_Type *base, uint32_t clearMask)
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(clearMask, CY_SCB_UART_RX_INTR_MASK));
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     Cy_SCB_ClearRxInterrupt(base, clearMask);
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetNumInRxFifo
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Returns the number of data elements in the UART RX FIFO.
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements in the RX FIFO.
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The size of date element defined by the configured data width.
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetNumInRxFifo(CySCB_Type const *base)
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 1067              		.loc 2 1321 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 8
 1070              		@ frame_needed = 1, uses_anonymous_args = 0
 1071 0000 80B5     		push	{r7, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 7, -8
 1074              		.cfi_offset 14, -4
 1075 0002 82B0     		sub	sp, sp, #8
 1076              		.cfi_def_cfa_offset 16
 1077 0004 00AF     		add	r7, sp, #0
 1078              		.cfi_def_cfa_register 7
 1079 0006 7860     		str	r0, [r7, #4]
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return Cy_SCB_GetNumInRxFifo(base);
 1080              		.loc 2 1322 0
 1081 0008 7868     		ldr	r0, [r7, #4]
 1082 000a FFF7FEFF 		bl	Cy_SCB_GetNumInRxFifo
 1083 000e 0346     		mov	r3, r0
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
 1084              		.loc 2 1323 0
 1085 0010 1846     		mov	r0, r3
 1086 0012 0837     		adds	r7, r7, #8
 1087              		.cfi_def_cfa_offset 8
 1088 0014 BD46     		mov	sp, r7
 1089              		.cfi_def_cfa_register 13
 1090              		@ sp needed
 1091 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 74


 1092              		.cfi_endproc
 1093              	.LFE230:
 1094              		.size	Cy_SCB_UART_GetNumInRxFifo, .-Cy_SCB_UART_GetNumInRxFifo
 1095              		.section	.text.Cy_SCB_UART_PutArray,"ax",%progbits
 1096              		.align	2
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	Cy_SCB_UART_PutArray, %function
 1100              	Cy_SCB_UART_PutArray:
 1101              	.LFB233:
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_ClearRxFifo
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Clears all data out of the UART RX FIFO.
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \sideeffect
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Any data currently in the shifter is cleared and lost.
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_ClearRxFifo(CySCB_Type *base)
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     Cy_SCB_ClearRxFifo(base);
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_Put
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Places a single data element in the UART TX FIFO.
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This function does not block and returns how many data elements were placed
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * in the TX FIFO.
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param data
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Data to put in the TX FIFO.
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The element size is defined by the data type, which depends on the configured
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * data width.
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements placed in the TX FIFO: 0 or 1.
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_Put(CySCB_Type *base, uint32_t data)
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return Cy_SCB_Write(base, data);
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 75


1371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_PutArray
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Places an array of data in the UART TX FIFO.
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This function does not block. It returns how many data elements were
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * placed in the TX FIFO.
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param buffer
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to data to place in the TX FIFO.
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The element size is defined by the data type, which depends on the configured
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * TX data width.
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param size
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements to TX.
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements placed in the TX FIFO.
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_PutArray(CySCB_Type *base, void *buffer, uint32_t size)
1394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 1102              		.loc 2 1394 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 16
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 7, -8
 1109              		.cfi_offset 14, -4
 1110 0002 84B0     		sub	sp, sp, #16
 1111              		.cfi_def_cfa_offset 24
 1112 0004 00AF     		add	r7, sp, #0
 1113              		.cfi_def_cfa_register 7
 1114 0006 F860     		str	r0, [r7, #12]
 1115 0008 B960     		str	r1, [r7, #8]
 1116 000a 7A60     		str	r2, [r7, #4]
1395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
 1117              		.loc 2 1395 0
 1118 000c BB68     		ldr	r3, [r7, #8]
 1119 000e 002B     		cmp	r3, #0
 1120 0010 02D0     		beq	.L65
 1121              		.loc 2 1395 0 is_stmt 0 discriminator 2
 1122 0012 7B68     		ldr	r3, [r7, #4]
 1123 0014 002B     		cmp	r3, #0
 1124 0016 04D1     		bne	.L66
 1125              	.L65:
 1126              		.loc 2 1395 0 discriminator 3
 1127 0018 40F27351 		movw	r1, #1395
 1128 001c 0648     		ldr	r0, .L68
 1129 001e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1130              	.L66:
1396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return Cy_SCB_WriteArray(base, buffer, size);
 1131              		.loc 2 1397 0 is_stmt 1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 76


 1132 0022 7A68     		ldr	r2, [r7, #4]
 1133 0024 B968     		ldr	r1, [r7, #8]
 1134 0026 F868     		ldr	r0, [r7, #12]
 1135 0028 FFF7FEFF 		bl	Cy_SCB_WriteArray
 1136 002c 0346     		mov	r3, r0
1398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
 1137              		.loc 2 1398 0
 1138 002e 1846     		mov	r0, r3
 1139 0030 1037     		adds	r7, r7, #16
 1140              		.cfi_def_cfa_offset 8
 1141 0032 BD46     		mov	sp, r7
 1142              		.cfi_def_cfa_register 13
 1143              		@ sp needed
 1144 0034 80BD     		pop	{r7, pc}
 1145              	.L69:
 1146 0036 00BF     		.align	2
 1147              	.L68:
 1148 0038 44000000 		.word	.LC1
 1149              		.cfi_endproc
 1150              	.LFE233:
 1151              		.size	Cy_SCB_UART_PutArray, .-Cy_SCB_UART_PutArray
 1152              		.section	.text.Cy_SCB_UART_IsTxComplete,"ax",%progbits
 1153              		.align	2
 1154              		.thumb
 1155              		.thumb_func
 1156              		.type	Cy_SCB_UART_IsTxComplete, %function
 1157              	Cy_SCB_UART_IsTxComplete:
 1158              	.LFB239:
1399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_PutArrayBlocking
1403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Places an array of data in the UART TX FIFO.
1406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This function blocks until the number of data elements specified by the size
1407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * is placed in the TX FIFO.
1408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param buffer
1413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to data to place in the TX FIFO.
1414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The element size is defined by the data type, which depends on the configured
1415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * data width.
1416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param size
1418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements to write into the TX FIFO.
1419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_PutArrayBlocking(CySCB_Type *base, void *buffer, uint32_t size)
1422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
1424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     Cy_SCB_WriteArrayBlocking(base, buffer, size);
1426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 77


1428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_PutString
1431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Places a NULL terminated string in the UART TX FIFO.
1434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This function blocks until the entire string is placed in the TX FIFO.
1435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param string
1440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the null terminated string array.
1441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_PutString(CySCB_Type *base, char_t const string[])
1444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(string, 1UL));
1446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     Cy_SCB_WriteString(base, string);
1448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetTxFifoStatus
1453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Returns the current status of the TX FIFO.
1456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \ref group_scb_uart_macros_tx_fifo_status
1462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetTxFifoStatus(CySCB_Type const *base)
1465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return (Cy_SCB_GetTxInterruptStatus(base) & CY_SCB_UART_TX_INTR_MASK);
1467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_ClearTxFifoStatus
1472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Clears the selected statuses of the TX FIFO.
1475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param clearMask
1480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The mask whose statuses to clear.
1481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * See \ref group_scb_uart_macros_tx_fifo_status for the set of constants.
1482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \note
1484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * The status is also used for interrupt generation, so clearing it also
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 78


1485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   clears the interrupt sources.
1486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * * Level-sensitive statuses such as \ref CY_SCB_UART_TX_TRIGGER,
1487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   \ref CY_SCB_UART_TX_EMPTY and \ref CY_SCB_UART_TX_NOT_FULL are set high again after
1488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *   being cleared if the condition remains true.
1489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_ClearTxFifoStatus(CySCB_Type *base, uint32_t clearMask)
1492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(clearMask, CY_SCB_UART_TX_INTR_MASK));
1494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     Cy_SCB_ClearTxInterrupt(base, clearMask);
1496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_GetNumInTxFifo
1501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Returns the number of data elements in the UART TX FIFO.
1504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The number of data elements in the TX FIFO.
1510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The size of date element defined by the configured data width.
1511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \note
1513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * This number does not include any data currently in the TX shifter.
1514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE uint32_t Cy_SCB_UART_GetNumInTxFifo(CySCB_Type const *base)
1517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
1518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return Cy_SCB_GetNumInTxFifo(base);
1519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
1520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_IsTxComplete
1524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Checks whether the TX FIFO and Shifter are empty and there is no more data to send
1527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Pointer to the UART SCB instance.
1530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \return
1532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * If true, transmission complete. If false, transmission is not complete.
1533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE bool Cy_SCB_UART_IsTxComplete(CySCB_Type const *base)
1536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 1159              		.loc 2 1536 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 8
 1162              		@ frame_needed = 1, uses_anonymous_args = 0
 1163 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 79


 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 82B0     		sub	sp, sp, #8
 1168              		.cfi_def_cfa_offset 16
 1169 0004 00AF     		add	r7, sp, #0
 1170              		.cfi_def_cfa_register 7
 1171 0006 7860     		str	r0, [r7, #4]
1537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     return Cy_SCB_IsTxComplete(base);
 1172              		.loc 2 1537 0
 1173 0008 7868     		ldr	r0, [r7, #4]
 1174 000a FFF7FEFF 		bl	Cy_SCB_IsTxComplete
 1175 000e 0346     		mov	r3, r0
1538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
 1176              		.loc 2 1538 0
 1177 0010 1846     		mov	r0, r3
 1178 0012 0837     		adds	r7, r7, #8
 1179              		.cfi_def_cfa_offset 8
 1180 0014 BD46     		mov	sp, r7
 1181              		.cfi_def_cfa_register 13
 1182              		@ sp needed
 1183 0016 80BD     		pop	{r7, pc}
 1184              		.cfi_endproc
 1185              	.LFE239:
 1186              		.size	Cy_SCB_UART_IsTxComplete, .-Cy_SCB_UART_IsTxComplete
 1187              		.section	.text.Cy_SCB_UART_ClearTxFifo,"ax",%progbits
 1188              		.align	2
 1189              		.thumb
 1190              		.thumb_func
 1191              		.type	Cy_SCB_UART_ClearTxFifo, %function
 1192              	Cy_SCB_UART_ClearTxFifo:
 1193              	.LFB240:
1539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** 
1541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** /*******************************************************************************
1542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Function Name: Cy_SCB_UART_ClearTxFifo
1543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** ****************************************************************************//**
1544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * Clears all data out of the UART TX FIFO.
1546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \param base
1548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The pointer to the UART SCB instance.
1549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * \sideeffect
1551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * The TX FIFO clear operation also clears the shift register, so that
1552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * the shifter could be cleared in the middle of a data element transfer,
1553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * corrupting it. The data element corruption means that all bits that have
1554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** * not been transmitted are transmitted as 1s on the bus.
1555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *
1556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** *******************************************************************************/
1557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** __STATIC_INLINE void Cy_SCB_UART_ClearTxFifo(CySCB_Type *base)
1558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** {
 1194              		.loc 2 1558 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 8
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 80


 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 82B0     		sub	sp, sp, #8
 1203              		.cfi_def_cfa_offset 16
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 7860     		str	r0, [r7, #4]
1559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h ****     Cy_SCB_ClearTxFifo(base);
 1207              		.loc 2 1559 0
 1208 0008 7868     		ldr	r0, [r7, #4]
 1209 000a FFF7FEFF 		bl	Cy_SCB_ClearTxFifo
1560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.h **** }
 1210              		.loc 2 1560 0
 1211 000e 00BF     		nop
 1212 0010 0837     		adds	r7, r7, #8
 1213              		.cfi_def_cfa_offset 8
 1214 0012 BD46     		mov	sp, r7
 1215              		.cfi_def_cfa_register 13
 1216              		@ sp needed
 1217 0014 80BD     		pop	{r7, pc}
 1218              		.cfi_endproc
 1219              	.LFE240:
 1220              		.size	Cy_SCB_UART_ClearTxFifo, .-Cy_SCB_UART_ClearTxFifo
 1221 0016 00BF     		.section	.rodata
 1222              		.align	2
 1223              	.LC2:
 1224 0084 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 1224      72617465 
 1224      645F536F 
 1224      75726365 
 1224      5C50536F 
 1225 00b2 7363625C 		.ascii	"scb\\cy_scb_uart.c\000"
 1225      63795F73 
 1225      63625F75 
 1225      6172742E 
 1225      6300
 1226              		.section	.text.Cy_SCB_UART_Init,"ax",%progbits
 1227              		.align	2
 1228              		.global	Cy_SCB_UART_Init
 1229              		.thumb
 1230              		.thumb_func
 1231              		.type	Cy_SCB_UART_Init, %function
 1232              	Cy_SCB_UART_Init:
 1233              	.LFB242:
 1234              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\scb\\cy_scb_uart.c"
   1:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \file cy_scb_uart.c
   3:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \version 2.20
   4:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
   5:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Provides UART API implementation of the SCB driver.
   6:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
   7:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 81


  12:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  15:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** #include "cy_scb_uart.h"
  16:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  17:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** #ifdef CY_IP_MXSCB
  18:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  19:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** #if defined(__cplusplus)
  20:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** extern "C" {
  21:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** #endif
  22:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  23:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /* Static functions */
  24:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** static void HandleDataReceive (CySCB_Type *base, cy_stc_scb_uart_context_t *context);
  25:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** static void HandleRingBuffer  (CySCB_Type *base, cy_stc_scb_uart_context_t *context);
  26:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** static void HandleDataTransmit(CySCB_Type *base, cy_stc_scb_uart_context_t *context);
  27:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  28:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  29:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
  30:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_Init
  31:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
  32:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
  33:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Initializes the SCB for UART operation.
  34:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
  35:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
  36:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
  37:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
  38:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param config
  39:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to configuration structure \ref cy_stc_scb_uart_config_t.
  40:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
  41:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
  42:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
  43:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
  44:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
  45:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
  46:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * If only UART \ref group_scb_uart_ll will be used pass NULL as pointer to 
  47:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * context.
  48:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
  49:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
  50:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref cy_en_scb_uart_status_t
  51:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
  52:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
  53:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Ensure that the SCB block is disabled before calling this function.
  54:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
  55:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
  56:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** cy_en_scb_uart_status_t Cy_SCB_UART_Init(CySCB_Type *base, cy_stc_scb_uart_config_t const *config, 
  57:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 1235              		.loc 3 57 0
 1236              		.cfi_startproc
 1237              		@ args = 0, pretend = 0, frame = 24
 1238              		@ frame_needed = 1, uses_anonymous_args = 0
 1239 0000 90B5     		push	{r4, r7, lr}
 1240              		.cfi_def_cfa_offset 12
 1241              		.cfi_offset 4, -12
 1242              		.cfi_offset 7, -8
 1243              		.cfi_offset 14, -4
 1244 0002 87B0     		sub	sp, sp, #28
 1245              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 82


 1246 0004 00AF     		add	r7, sp, #0
 1247              		.cfi_def_cfa_register 7
 1248 0006 F860     		str	r0, [r7, #12]
 1249 0008 B960     		str	r1, [r7, #8]
 1250 000a 7A60     		str	r2, [r7, #4]
  58:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if ((NULL == base) || (NULL == config))
 1251              		.loc 3 58 0
 1252 000c FB68     		ldr	r3, [r7, #12]
 1253 000e 002B     		cmp	r3, #0
 1254 0010 02D0     		beq	.L74
 1255              		.loc 3 58 0 is_stmt 0 discriminator 1
 1256 0012 BB68     		ldr	r3, [r7, #8]
 1257 0014 002B     		cmp	r3, #0
 1258 0016 01D1     		bne	.L75
 1259              	.L74:
  59:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
  60:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         return CY_SCB_UART_BAD_PARAM;
 1260              		.loc 3 60 0 is_stmt 1
 1261 0018 8A4B     		ldr	r3, .L146
 1262 001a 58E2     		b	.L76
 1263              	.L75:
  61:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
  62:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  63:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L3(CY_SCB_UART_IS_MODE_VALID     (config->uartMode));
 1264              		.loc 3 63 0
 1265 001c BB68     		ldr	r3, [r7, #8]
 1266 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1267 0020 002B     		cmp	r3, #0
 1268 0022 0BD0     		beq	.L77
 1269              		.loc 3 63 0 is_stmt 0 discriminator 1
 1270 0024 BB68     		ldr	r3, [r7, #8]
 1271 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1272 0028 012B     		cmp	r3, #1
 1273 002a 07D0     		beq	.L77
 1274              		.loc 3 63 0 discriminator 2
 1275 002c BB68     		ldr	r3, [r7, #8]
 1276 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1277 0030 022B     		cmp	r3, #2
 1278 0032 03D0     		beq	.L77
 1279              		.loc 3 63 0 discriminator 3
 1280 0034 3F21     		movs	r1, #63
 1281 0036 8448     		ldr	r0, .L146+4
 1282 0038 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1283              	.L77:
  64:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L3(CY_SCB_UART_IS_STOP_BITS_VALID(config->stopBits));
 1284              		.loc 3 64 0 is_stmt 1
 1285 003c BB68     		ldr	r3, [r7, #8]
 1286 003e 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1287 0040 022B     		cmp	r3, #2
 1288 0042 1BD0     		beq	.L78
 1289              		.loc 3 64 0 is_stmt 0 discriminator 1
 1290 0044 BB68     		ldr	r3, [r7, #8]
 1291 0046 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1292 0048 032B     		cmp	r3, #3
 1293 004a 17D0     		beq	.L78
 1294              		.loc 3 64 0 discriminator 2
 1295 004c BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 83


 1296 004e 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1297 0050 042B     		cmp	r3, #4
 1298 0052 13D0     		beq	.L78
 1299              		.loc 3 64 0 discriminator 3
 1300 0054 BB68     		ldr	r3, [r7, #8]
 1301 0056 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1302 0058 052B     		cmp	r3, #5
 1303 005a 0FD0     		beq	.L78
 1304              		.loc 3 64 0 discriminator 4
 1305 005c BB68     		ldr	r3, [r7, #8]
 1306 005e 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1307 0060 062B     		cmp	r3, #6
 1308 0062 0BD0     		beq	.L78
 1309              		.loc 3 64 0 discriminator 5
 1310 0064 BB68     		ldr	r3, [r7, #8]
 1311 0066 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1312 0068 072B     		cmp	r3, #7
 1313 006a 07D0     		beq	.L78
 1314              		.loc 3 64 0 discriminator 6
 1315 006c BB68     		ldr	r3, [r7, #8]
 1316 006e 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1317 0070 082B     		cmp	r3, #8
 1318 0072 03D0     		beq	.L78
 1319              		.loc 3 64 0 discriminator 7
 1320 0074 4021     		movs	r1, #64
 1321 0076 7448     		ldr	r0, .L146+4
 1322 0078 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1323              	.L78:
  65:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L3(CY_SCB_UART_IS_PARITY_VALID   (config->parity));
 1324              		.loc 3 65 0 is_stmt 1
 1325 007c BB68     		ldr	r3, [r7, #8]
 1326 007e 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1327 0080 002B     		cmp	r3, #0
 1328 0082 0BD0     		beq	.L79
 1329              		.loc 3 65 0 is_stmt 0 discriminator 1
 1330 0084 BB68     		ldr	r3, [r7, #8]
 1331 0086 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1332 0088 022B     		cmp	r3, #2
 1333 008a 07D0     		beq	.L79
 1334              		.loc 3 65 0 discriminator 2
 1335 008c BB68     		ldr	r3, [r7, #8]
 1336 008e 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1337 0090 032B     		cmp	r3, #3
 1338 0092 03D0     		beq	.L79
 1339              		.loc 3 65 0 discriminator 3
 1340 0094 4121     		movs	r1, #65
 1341 0096 6C48     		ldr	r0, .L146+4
 1342 0098 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1343              	.L79:
  66:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L3(CY_SCB_UART_IS_POLARITY_VALID (config->ctsPolarity));
 1344              		.loc 3 66 0 is_stmt 1
 1345 009c BB68     		ldr	r3, [r7, #8]
 1346 009e 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 1347 00a2 002B     		cmp	r3, #0
 1348 00a4 08D0     		beq	.L80
 1349              		.loc 3 66 0 is_stmt 0 discriminator 1
 1350 00a6 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 84


 1351 00a8 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 1352 00ac 012B     		cmp	r3, #1
 1353 00ae 03D0     		beq	.L80
 1354              		.loc 3 66 0 discriminator 2
 1355 00b0 4221     		movs	r1, #66
 1356 00b2 6548     		ldr	r0, .L146+4
 1357 00b4 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1358              	.L80:
  67:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L3(CY_SCB_UART_IS_POLARITY_VALID (config->rtsPolarity));
 1359              		.loc 3 67 0 is_stmt 1
 1360 00b8 BB68     		ldr	r3, [r7, #8]
 1361 00ba 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1362 00be 002B     		cmp	r3, #0
 1363 00c0 08D0     		beq	.L81
 1364              		.loc 3 67 0 is_stmt 0 discriminator 1
 1365 00c2 BB68     		ldr	r3, [r7, #8]
 1366 00c4 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1367 00c8 012B     		cmp	r3, #1
 1368 00ca 03D0     		beq	.L81
 1369              		.loc 3 67 0 discriminator 2
 1370 00cc 4321     		movs	r1, #67
 1371 00ce 5E48     		ldr	r0, .L146+4
 1372 00d0 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1373              	.L81:
  68:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  69:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_UART_IS_OVERSAMPLE_VALID  (config->oversample, config->uartMode, config->ir
 1374              		.loc 3 69 0 is_stmt 1
 1375 00d4 BB68     		ldr	r3, [r7, #8]
 1376 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1377 00d8 002B     		cmp	r3, #0
 1378 00da 03D0     		beq	.L82
 1379              		.loc 3 69 0 is_stmt 0 discriminator 2
 1380 00dc BB68     		ldr	r3, [r7, #8]
 1381 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1382 00e0 012B     		cmp	r3, #1
 1383 00e2 0ED1     		bne	.L83
 1384              	.L82:
 1385              		.loc 3 69 0 discriminator 3
 1386 00e4 BB68     		ldr	r3, [r7, #8]
 1387 00e6 5B68     		ldr	r3, [r3, #4]
 1388 00e8 072B     		cmp	r3, #7
 1389 00ea 03D9     		bls	.L84
 1390              		.loc 3 69 0 discriminator 6
 1391 00ec BB68     		ldr	r3, [r7, #8]
 1392 00ee 5B68     		ldr	r3, [r3, #4]
 1393 00f0 102B     		cmp	r3, #16
 1394 00f2 01D9     		bls	.L85
 1395              	.L84:
 1396              		.loc 3 69 0 discriminator 7
 1397 00f4 0123     		movs	r3, #1
 1398 00f6 00E0     		b	.L86
 1399              	.L85:
 1400              		.loc 3 69 0 discriminator 8
 1401 00f8 0023     		movs	r3, #0
 1402              	.L86:
 1403              		.loc 3 69 0 discriminator 10
 1404 00fa 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 85


 1405 00fe DBB2     		uxtb	r3, r3
 1406 0100 27E0     		b	.L87
 1407              	.L83:
 1408              		.loc 3 69 0 discriminator 4
 1409 0102 BB68     		ldr	r3, [r7, #8]
 1410 0104 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 1411 0106 002B     		cmp	r3, #0
 1412 0108 22D0     		beq	.L88
 1413              		.loc 3 69 0 discriminator 12
 1414 010a BB68     		ldr	r3, [r7, #8]
 1415 010c 5B68     		ldr	r3, [r3, #4]
 1416 010e 012B     		cmp	r3, #1
 1417 0110 19D0     		beq	.L89
 1418              		.loc 3 69 0 discriminator 14
 1419 0112 BB68     		ldr	r3, [r7, #8]
 1420 0114 5B68     		ldr	r3, [r3, #4]
 1421 0116 022B     		cmp	r3, #2
 1422 0118 15D0     		beq	.L89
 1423              		.loc 3 69 0 discriminator 16
 1424 011a BB68     		ldr	r3, [r7, #8]
 1425 011c 5B68     		ldr	r3, [r3, #4]
 1426 011e 032B     		cmp	r3, #3
 1427 0120 11D0     		beq	.L89
 1428              		.loc 3 69 0 discriminator 18
 1429 0122 BB68     		ldr	r3, [r7, #8]
 1430 0124 5B68     		ldr	r3, [r3, #4]
 1431 0126 042B     		cmp	r3, #4
 1432 0128 0DD0     		beq	.L89
 1433              		.loc 3 69 0 discriminator 20
 1434 012a BB68     		ldr	r3, [r7, #8]
 1435 012c 5B68     		ldr	r3, [r3, #4]
 1436 012e 052B     		cmp	r3, #5
 1437 0130 09D0     		beq	.L89
 1438              		.loc 3 69 0 discriminator 22
 1439 0132 BB68     		ldr	r3, [r7, #8]
 1440 0134 5B68     		ldr	r3, [r3, #4]
 1441 0136 062B     		cmp	r3, #6
 1442 0138 05D0     		beq	.L89
 1443              		.loc 3 69 0 discriminator 24
 1444 013a BB68     		ldr	r3, [r7, #8]
 1445 013c 5B68     		ldr	r3, [r3, #4]
 1446 013e 072B     		cmp	r3, #7
 1447 0140 01D0     		beq	.L89
 1448              		.loc 3 69 0 discriminator 26
 1449 0142 0123     		movs	r3, #1
 1450 0144 00E0     		b	.L90
 1451              	.L89:
 1452              		.loc 3 69 0 discriminator 27
 1453 0146 0023     		movs	r3, #0
 1454              	.L90:
 1455              		.loc 3 69 0 discriminator 29
 1456 0148 03F00103 		and	r3, r3, #1
 1457 014c DBB2     		uxtb	r3, r3
 1458 014e 00E0     		b	.L87
 1459              	.L88:
 1460              		.loc 3 69 0 discriminator 13
 1461 0150 0023     		movs	r3, #0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 86


 1462              	.L87:
 1463              		.loc 3 69 0 discriminator 32
 1464 0152 002B     		cmp	r3, #0
 1465 0154 03D0     		beq	.L92
 1466              		.loc 3 69 0 discriminator 33
 1467 0156 4521     		movs	r1, #69
 1468 0158 3B48     		ldr	r0, .L146+4
 1469 015a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1470              	.L92:
  70:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_UART_IS_DATA_WIDTH_VALID  (config->dataWidth));
 1471              		.loc 3 70 0 is_stmt 1
 1472 015e BB68     		ldr	r3, [r7, #8]
 1473 0160 9B68     		ldr	r3, [r3, #8]
 1474 0162 042B     		cmp	r3, #4
 1475 0164 03D9     		bls	.L93
 1476              		.loc 3 70 0 is_stmt 0 discriminator 2
 1477 0166 BB68     		ldr	r3, [r7, #8]
 1478 0168 9B68     		ldr	r3, [r3, #8]
 1479 016a 092B     		cmp	r3, #9
 1480 016c 03D9     		bls	.L94
 1481              	.L93:
 1482              		.loc 3 70 0 discriminator 3
 1483 016e 4621     		movs	r1, #70
 1484 0170 3548     		ldr	r0, .L146+4
 1485 0172 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1486              	.L94:
  71:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_UART_IS_ADDRESS_VALID     (config->receiverAddress));
 1487              		.loc 3 71 0 is_stmt 1
 1488 0176 BB68     		ldr	r3, [r7, #8]
 1489 0178 5B69     		ldr	r3, [r3, #20]
 1490 017a FF2B     		cmp	r3, #255
 1491 017c 03D9     		bls	.L95
 1492              		.loc 3 71 0 is_stmt 0 discriminator 1
 1493 017e 4721     		movs	r1, #71
 1494 0180 3148     		ldr	r0, .L146+4
 1495 0182 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1496              	.L95:
  72:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_UART_IS_ADDRESS_MASK_VALID(config->receiverAddressMask));
 1497              		.loc 3 72 0 is_stmt 1
 1498 0186 BB68     		ldr	r3, [r7, #8]
 1499 0188 9B69     		ldr	r3, [r3, #24]
 1500 018a FF2B     		cmp	r3, #255
 1501 018c 03D9     		bls	.L96
 1502              		.loc 3 72 0 is_stmt 0 discriminator 1
 1503 018e 4821     		movs	r1, #72
 1504 0190 2D48     		ldr	r0, .L146+4
 1505 0192 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1506              	.L96:
  73:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_UART_IS_MUTLI_PROC_VALID  (config->enableMutliProcessorMode, config->uartMo
 1507              		.loc 3 73 0 is_stmt 1
 1508 0196 BB68     		ldr	r3, [r7, #8]
 1509 0198 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1510 019a 002B     		cmp	r3, #0
 1511 019c 12D0     		beq	.L97
 1512              		.loc 3 73 0 is_stmt 0 discriminator 1
 1513 019e BB68     		ldr	r3, [r7, #8]
 1514 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 87


 1515 01a2 002B     		cmp	r3, #0
 1516 01a4 07D1     		bne	.L98
 1517              		.loc 3 73 0 discriminator 4
 1518 01a6 BB68     		ldr	r3, [r7, #8]
 1519 01a8 9B68     		ldr	r3, [r3, #8]
 1520 01aa 092B     		cmp	r3, #9
 1521 01ac 03D1     		bne	.L98
 1522              		.loc 3 73 0 discriminator 6
 1523 01ae BB68     		ldr	r3, [r7, #8]
 1524 01b0 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1525 01b2 002B     		cmp	r3, #0
 1526 01b4 01D0     		beq	.L99
 1527              	.L98:
 1528              		.loc 3 73 0 discriminator 7
 1529 01b6 0123     		movs	r3, #1
 1530 01b8 00E0     		b	.L100
 1531              	.L99:
 1532              		.loc 3 73 0 discriminator 8
 1533 01ba 0023     		movs	r3, #0
 1534              	.L100:
 1535              		.loc 3 73 0 discriminator 10
 1536 01bc 03F00103 		and	r3, r3, #1
 1537 01c0 DBB2     		uxtb	r3, r3
 1538 01c2 00E0     		b	.L101
 1539              	.L97:
 1540              		.loc 3 73 0 discriminator 2
 1541 01c4 0023     		movs	r3, #0
 1542              	.L101:
 1543              		.loc 3 73 0 discriminator 12
 1544 01c6 002B     		cmp	r3, #0
 1545 01c8 03D0     		beq	.L102
 1546              		.loc 3 73 0 discriminator 13
 1547 01ca 4A21     		movs	r1, #74
 1548 01cc 1E48     		ldr	r0, .L146+4
 1549 01ce FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1550              	.L102:
  74:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                                    config->parity));
  75:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  76:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(config->rxFifoIntEnableMask, CY_SCB_UART_RX_INTR_MASK));
 1551              		.loc 3 76 0 is_stmt 1
 1552 01d2 BB68     		ldr	r3, [r7, #8]
 1553 01d4 5B6B     		ldr	r3, [r3, #52]
 1554 01d6 23F43663 		bic	r3, r3, #2912
 1555 01da 23F00D03 		bic	r3, r3, #13
 1556 01de 002B     		cmp	r3, #0
 1557 01e0 03D0     		beq	.L103
 1558              		.loc 3 76 0 is_stmt 0 discriminator 1
 1559 01e2 4C21     		movs	r1, #76
 1560 01e4 1848     		ldr	r0, .L146+4
 1561 01e6 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1562              	.L103:
  77:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_IS_INTR_VALID(config->txFifoIntEnableMask, CY_SCB_UART_TX_INTR_MASK));
 1563              		.loc 3 77 0 is_stmt 1
 1564 01ea BB68     		ldr	r3, [r7, #8]
 1565 01ec DB6B     		ldr	r3, [r3, #60]
 1566 01ee 23F4EE63 		bic	r3, r3, #1904
 1567 01f2 23F00303 		bic	r3, r3, #3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 88


 1568 01f6 002B     		cmp	r3, #0
 1569 01f8 03D0     		beq	.L104
 1570              		.loc 3 77 0 is_stmt 0 discriminator 1
 1571 01fa 4D21     		movs	r1, #77
 1572 01fc 1248     		ldr	r0, .L146+4
 1573 01fe FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1574              	.L104:
  78:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  79:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t ovs;
  80:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  81:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if ((CY_SCB_UART_IRDA == config->uartMode) && (!config->irdaEnableLowPowerReceiver))
 1575              		.loc 3 81 0 is_stmt 1
 1576 0202 BB68     		ldr	r3, [r7, #8]
 1577 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1578 0206 022B     		cmp	r3, #2
 1579 0208 09D1     		bne	.L105
 1580              		.loc 3 81 0 is_stmt 0 discriminator 1
 1581 020a BB68     		ldr	r3, [r7, #8]
 1582 020c 9B7F     		ldrb	r3, [r3, #30]	@ zero_extendqisi2
 1583 020e 83F00103 		eor	r3, r3, #1
 1584 0212 DBB2     		uxtb	r3, r3
 1585 0214 002B     		cmp	r3, #0
 1586 0216 02D0     		beq	.L105
  82:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
  83:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* For Normal IrDA mode oversampling is always zero */
  84:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         ovs = 0UL;
 1587              		.loc 3 84 0 is_stmt 1
 1588 0218 0023     		movs	r3, #0
 1589 021a 7B61     		str	r3, [r7, #20]
 1590 021c 03E0     		b	.L106
 1591              	.L105:
  85:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
  86:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     else
  87:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
  88:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         ovs = (config->oversample - 1UL);
 1592              		.loc 3 88 0
 1593 021e BB68     		ldr	r3, [r7, #8]
 1594 0220 5B68     		ldr	r3, [r3, #4]
 1595 0222 013B     		subs	r3, r3, #1
 1596 0224 7B61     		str	r3, [r7, #20]
 1597              	.L106:
  89:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
  90:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  91:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Configure the UART interface */
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_CTRL(base) = _BOOL2FLD(SCB_CTRL_ADDR_ACCEPT, config->acceptAddrInFifo)               |
 1598              		.loc 3 92 0
 1599 0226 BB68     		ldr	r3, [r7, #8]
 1600 0228 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 1601 022a 002B     		cmp	r3, #0
 1602 022c 02D0     		beq	.L107
 1603              		.loc 3 92 0 is_stmt 0 discriminator 1
 1604 022e 4FF48032 		mov	r2, #65536
 1605 0232 00E0     		b	.L108
 1606              	.L107:
 1607              		.loc 3 92 0 discriminator 2
 1608 0234 0022     		movs	r2, #0
 1609              	.L108:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 89


  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                  _BOOL2FLD(SCB_CTRL_BYTE_MODE, (config->dataWidth <= CY_SCB_BYTE_WIDTH)) |
 1610              		.loc 3 93 0 is_stmt 1
 1611 0236 BB68     		ldr	r3, [r7, #8]
 1612 0238 9B68     		ldr	r3, [r3, #8]
 1613 023a 082B     		cmp	r3, #8
 1614 023c 06D8     		bhi	.L109
 1615              		.loc 3 93 0 is_stmt 0 discriminator 1
 1616 023e 4FF40063 		mov	r3, #2048
 1617 0242 04E0     		b	.L110
 1618              	.L147:
 1619              		.align	2
 1620              	.L146:
 1621 0244 0160AA00 		.word	11165697
 1622 0248 84000000 		.word	.LC2
 1623              	.L109:
 1624              		.loc 3 93 0 discriminator 2
 1625 024c 0023     		movs	r3, #0
 1626              	.L110:
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                  _BOOL2FLD(SCB_CTRL_BYTE_MODE, (config->dataWidth <= CY_SCB_BYTE_WIDTH)) |
 1627              		.loc 3 92 0 is_stmt 1
 1628 024e 1A43     		orrs	r2, r2, r3
  94:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                  _VAL2FLD(SCB_CTRL_OVS, ovs)                                             |
 1629              		.loc 3 94 0
 1630 0250 7B69     		ldr	r3, [r7, #20]
 1631 0252 03F00F03 		and	r3, r3, #15
  93:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                  _BOOL2FLD(SCB_CTRL_BYTE_MODE, (config->dataWidth <= CY_SCB_BYTE_WIDTH)) |
 1632              		.loc 3 93 0
 1633 0256 1343     		orrs	r3, r3, r2
 1634              		.loc 3 94 0
 1635 0258 43F00072 		orr	r2, r3, #33554432
  92:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                  _BOOL2FLD(SCB_CTRL_BYTE_MODE, (config->dataWidth <= CY_SCB_BYTE_WIDTH)) |
 1636              		.loc 3 92 0
 1637 025c FB68     		ldr	r3, [r7, #12]
 1638 025e 1A60     		str	r2, [r3]
  95:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                  _VAL2FLD(SCB_CTRL_MODE, CY_SCB_CTRL_MODE_UART);
  96:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
  97:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Configure SCB_CTRL.BYTE_MODE then verify levels */
  98:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, config->rxFifoTriggerLevel));
 1639              		.loc 3 98 0
 1640 0260 BB68     		ldr	r3, [r7, #8]
 1641 0262 1C6B     		ldr	r4, [r3, #48]
 1642 0264 F868     		ldr	r0, [r7, #12]
 1643 0266 FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 1644 026a 0346     		mov	r3, r0
 1645 026c 9C42     		cmp	r4, r3
 1646 026e 03D3     		bcc	.L111
 1647              		.loc 3 98 0 is_stmt 0 discriminator 1
 1648 0270 6221     		movs	r1, #98
 1649 0272 9948     		ldr	r0, .L148
 1650 0274 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1651              	.L111:
  99:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, config->txFifoTriggerLevel));
 1652              		.loc 3 99 0 is_stmt 1
 1653 0278 BB68     		ldr	r3, [r7, #8]
 1654 027a 9C6B     		ldr	r4, [r3, #56]
 1655 027c F868     		ldr	r0, [r7, #12]
 1656 027e FFF7FEFF 		bl	Cy_SCB_GetFifoSize
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 90


 1657 0282 0346     		mov	r3, r0
 1658 0284 9C42     		cmp	r4, r3
 1659 0286 03D3     		bcc	.L112
 1660              		.loc 3 99 0 is_stmt 0 discriminator 1
 1661 0288 6321     		movs	r1, #99
 1662 028a 9348     		ldr	r0, .L148
 1663 028c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1664              	.L112:
 100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_IS_TRIGGER_LEVEL_VALID(base, config->rtsRxFifoLevel));
 1665              		.loc 3 100 0 is_stmt 1
 1666 0290 BB68     		ldr	r3, [r7, #8]
 1667 0292 5C6A     		ldr	r4, [r3, #36]
 1668 0294 F868     		ldr	r0, [r7, #12]
 1669 0296 FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 1670 029a 0346     		mov	r3, r0
 1671 029c 9C42     		cmp	r4, r3
 1672 029e 03D3     		bcc	.L113
 1673              		.loc 3 100 0 is_stmt 0 discriminator 1
 1674 02a0 6421     		movs	r1, #100
 1675 02a2 8D48     		ldr	r0, .L148
 1676 02a4 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1677              	.L113:
 101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_UART_CTRL(base) = _VAL2FLD(SCB_UART_CTRL_MODE, (uint32_t) config->uartMode);
 1678              		.loc 3 102 0 is_stmt 1
 1679 02a8 BB68     		ldr	r3, [r7, #8]
 1680 02aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1681 02ac 1B06     		lsls	r3, r3, #24
 1682 02ae 03F04072 		and	r2, r3, #50331648
 1683 02b2 FB68     		ldr	r3, [r7, #12]
 1684 02b4 1A64     		str	r2, [r3, #64]
 103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Configure the RX direction */
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_UART_RX_CTRL(base) = _BOOL2FLD(SCB_UART_RX_CTRL_POLARITY, config->irdaInvertRx)            
 1685              		.loc 3 105 0
 1686 02b6 BB68     		ldr	r3, [r7, #8]
 1687 02b8 5B7F     		ldrb	r3, [r3, #29]	@ zero_extendqisi2
 1688 02ba 002B     		cmp	r3, #0
 1689 02bc 01D0     		beq	.L114
 1690              		.loc 3 105 0 is_stmt 0 discriminator 1
 1691 02be 4022     		movs	r2, #64
 1692 02c0 00E0     		b	.L115
 1693              	.L114:
 1694              		.loc 3 105 0 discriminator 2
 1695 02c2 0022     		movs	r2, #0
 1696              	.L115:
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _BOOL2FLD(SCB_UART_RX_CTRL_MP_MODE, config->enableMutliProcessorMode)     
 1697              		.loc 3 106 0 is_stmt 1
 1698 02c4 BB68     		ldr	r3, [r7, #8]
 1699 02c6 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 1700 02c8 002B     		cmp	r3, #0
 1701 02ca 02D0     		beq	.L116
 1702              		.loc 3 106 0 is_stmt 0 discriminator 1
 1703 02cc 4FF48063 		mov	r3, #1024
 1704 02d0 00E0     		b	.L117
 1705              	.L116:
 1706              		.loc 3 106 0 discriminator 2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 91


 1707 02d2 0023     		movs	r3, #0
 1708              	.L117:
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _BOOL2FLD(SCB_UART_RX_CTRL_MP_MODE, config->enableMutliProcessorMode)     
 1709              		.loc 3 105 0 is_stmt 1
 1710 02d4 1A43     		orrs	r2, r2, r3
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _BOOL2FLD(SCB_UART_RX_CTRL_DROP_ON_PARITY_ERROR, config->dropOnParityError
 1711              		.loc 3 107 0
 1712 02d6 BB68     		ldr	r3, [r7, #8]
 1713 02d8 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1714 02da 002B     		cmp	r3, #0
 1715 02dc 02D0     		beq	.L118
 1716              		.loc 3 107 0 is_stmt 0 discriminator 1
 1717 02de 4FF48073 		mov	r3, #256
 1718 02e2 00E0     		b	.L119
 1719              	.L118:
 1720              		.loc 3 107 0 discriminator 2
 1721 02e4 0023     		movs	r3, #0
 1722              	.L119:
 106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _BOOL2FLD(SCB_UART_RX_CTRL_MP_MODE, config->enableMutliProcessorMode)     
 1723              		.loc 3 106 0 is_stmt 1
 1724 02e6 1A43     		orrs	r2, r2, r3
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _BOOL2FLD(SCB_UART_RX_CTRL_DROP_ON_FRAME_ERROR, config->dropOnFrameError) 
 1725              		.loc 3 108 0
 1726 02e8 BB68     		ldr	r3, [r7, #8]
 1727 02ea 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 1728 02ec 002B     		cmp	r3, #0
 1729 02ee 02D0     		beq	.L120
 1730              		.loc 3 108 0 is_stmt 0 discriminator 1
 1731 02f0 4FF40073 		mov	r3, #512
 1732 02f4 00E0     		b	.L121
 1733              	.L120:
 1734              		.loc 3 108 0 discriminator 2
 1735 02f6 0023     		movs	r3, #0
 1736              	.L121:
 107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _BOOL2FLD(SCB_UART_RX_CTRL_DROP_ON_PARITY_ERROR, config->dropOnParityError
 1737              		.loc 3 107 0 is_stmt 1
 1738 02f8 1A43     		orrs	r2, r2, r3
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _VAL2FLD(SCB_UART_RX_CTRL_BREAK_WIDTH, (config->breakWidth - 1UL))        
 1739              		.loc 3 109 0
 1740 02fa BB68     		ldr	r3, [r7, #8]
 1741 02fc DB6A     		ldr	r3, [r3, #44]
 1742 02fe 013B     		subs	r3, r3, #1
 1743 0300 1B04     		lsls	r3, r3, #16
 1744 0302 03F47023 		and	r3, r3, #983040
 108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _BOOL2FLD(SCB_UART_RX_CTRL_DROP_ON_FRAME_ERROR, config->dropOnFrameError) 
 1745              		.loc 3 108 0
 1746 0306 1A43     		orrs	r2, r2, r3
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _VAL2FLD(SCB_UART_RX_CTRL_STOP_BITS,   ((uint32_t) config->stopBits) - 1UL
 1747              		.loc 3 110 0
 1748 0308 BB68     		ldr	r3, [r7, #8]
 1749 030a 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1750 030c 013B     		subs	r3, r3, #1
 1751 030e 03F00703 		and	r3, r3, #7
 109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _VAL2FLD(SCB_UART_RX_CTRL_BREAK_WIDTH, (config->breakWidth - 1UL))        
 1752              		.loc 3 109 0
 1753 0312 1A43     		orrs	r2, r2, r3
 111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _VAL2FLD(CY_SCB_UART_RX_CTRL_SET_PARITY, (uint32_t) config->parity);
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 92


 1754              		.loc 3 111 0
 1755 0314 BB68     		ldr	r3, [r7, #8]
 1756 0316 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1757 0318 1B01     		lsls	r3, r3, #4
 1758 031a 03F03003 		and	r3, r3, #48
 110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _VAL2FLD(SCB_UART_RX_CTRL_STOP_BITS,   ((uint32_t) config->stopBits) - 1UL
 1759              		.loc 3 110 0
 1760 031e 1A43     		orrs	r2, r2, r3
 105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _BOOL2FLD(SCB_UART_RX_CTRL_MP_MODE, config->enableMutliProcessorMode)     
 1761              		.loc 3 105 0
 1762 0320 FB68     		ldr	r3, [r7, #12]
 1763 0322 9A64     		str	r2, [r3, #72]
 112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_RX_CTRL(base) = _BOOL2FLD(SCB_RX_CTRL_MSB_FIRST, config->enableMsbFirst)          |
 1764              		.loc 3 113 0
 1765 0324 BB68     		ldr	r3, [r7, #8]
 1766 0326 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1767 0328 002B     		cmp	r3, #0
 1768 032a 02D0     		beq	.L122
 1769              		.loc 3 113 0 is_stmt 0 discriminator 1
 1770 032c 4FF48072 		mov	r2, #256
 1771 0330 00E0     		b	.L123
 1772              	.L122:
 1773              		.loc 3 113 0 discriminator 2
 1774 0332 0022     		movs	r2, #0
 1775              	.L123:
 114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     _BOOL2FLD(SCB_RX_CTRL_MEDIAN, ((config->enableInputFilter) || \
 1776              		.loc 3 114 0 is_stmt 1
 1777 0334 BB68     		ldr	r3, [r7, #8]
 1778 0336 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1779 0338 002B     		cmp	r3, #0
 1780 033a 03D1     		bne	.L124
 1781              		.loc 3 114 0 is_stmt 0 discriminator 2
 1782 033c BB68     		ldr	r3, [r7, #8]
 1783 033e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1784 0340 022B     		cmp	r3, #2
 1785 0342 01D1     		bne	.L125
 1786              	.L124:
 1787              		.loc 3 114 0 discriminator 3
 1788 0344 0123     		movs	r3, #1
 1789 0346 00E0     		b	.L126
 1790              	.L125:
 1791              		.loc 3 114 0 discriminator 4
 1792 0348 0023     		movs	r3, #0
 1793              	.L126:
 1794              		.loc 3 114 0 discriminator 6
 1795 034a 002B     		cmp	r3, #0
 1796 034c 02D0     		beq	.L127
 1797              		.loc 3 114 0 discriminator 7
 1798 034e 4FF40073 		mov	r3, #512
 1799 0352 00E0     		b	.L128
 1800              	.L127:
 1801              		.loc 3 114 0 discriminator 8
 1802 0354 0023     		movs	r3, #0
 1803              	.L128:
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     _BOOL2FLD(SCB_RX_CTRL_MEDIAN, ((config->enableInputFilter) || \
 1804              		.loc 3 113 0 is_stmt 1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 93


 1805 0356 1A43     		orrs	r2, r2, r3
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                              (config->uartMode == CY_SCB_UART_IRDA))) |
 116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     _VAL2FLD(SCB_RX_CTRL_DATA_WIDTH, (config->dataWidth - 1UL));
 1806              		.loc 3 116 0
 1807 0358 BB68     		ldr	r3, [r7, #8]
 1808 035a 9B68     		ldr	r3, [r3, #8]
 1809 035c 013B     		subs	r3, r3, #1
 1810 035e 03F00F03 		and	r3, r3, #15
 115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                              (config->uartMode == CY_SCB_UART_IRDA))) |
 1811              		.loc 3 115 0
 1812 0362 1A43     		orrs	r2, r2, r3
 113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     _BOOL2FLD(SCB_RX_CTRL_MEDIAN, ((config->enableInputFilter) || \
 1813              		.loc 3 113 0
 1814 0364 FB68     		ldr	r3, [r7, #12]
 1815 0366 C3F80023 		str	r2, [r3, #768]
 117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_RX_MATCH(base) = _VAL2FLD(SCB_RX_MATCH_ADDR, config->receiverAddress) |
 1816              		.loc 3 118 0
 1817 036a BB68     		ldr	r3, [r7, #8]
 1818 036c 5B69     		ldr	r3, [r3, #20]
 1819 036e DAB2     		uxtb	r2, r3
 119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                      _VAL2FLD(SCB_RX_MATCH_MASK, config->receiverAddressMask);
 1820              		.loc 3 119 0
 1821 0370 BB68     		ldr	r3, [r7, #8]
 1822 0372 9B69     		ldr	r3, [r3, #24]
 1823 0374 1B04     		lsls	r3, r3, #16
 1824 0376 03F47F03 		and	r3, r3, #16711680
 118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                      _VAL2FLD(SCB_RX_MATCH_MASK, config->receiverAddressMask);
 1825              		.loc 3 118 0
 1826 037a 1A43     		orrs	r2, r2, r3
 1827 037c FB68     		ldr	r3, [r7, #12]
 1828 037e C3F81023 		str	r2, [r3, #784]
 120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Configure SCB_CTRL.RX_CTRL then verify break width */
 122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_UART_IS_RX_BREAK_WIDTH_VALID(base, config->breakWidth));
 1829              		.loc 3 122 0
 1830 0382 BB68     		ldr	r3, [r7, #8]
 1831 0384 DA6A     		ldr	r2, [r3, #44]
 1832 0386 FB68     		ldr	r3, [r7, #12]
 1833 0388 D3F80033 		ldr	r3, [r3, #768]
 1834 038c 03F00F03 		and	r3, r3, #15
 1835 0390 0333     		adds	r3, r3, #3
 1836 0392 9A42     		cmp	r2, r3
 1837 0394 03D3     		bcc	.L129
 1838              		.loc 3 122 0 is_stmt 0 discriminator 2
 1839 0396 BB68     		ldr	r3, [r7, #8]
 1840 0398 DB6A     		ldr	r3, [r3, #44]
 1841 039a 102B     		cmp	r3, #16
 1842 039c 03D9     		bls	.L130
 1843              	.L129:
 1844              		.loc 3 122 0 discriminator 3
 1845 039e 7A21     		movs	r1, #122
 1846 03a0 4D48     		ldr	r0, .L148
 1847 03a2 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 1848              	.L130:
 123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Configure the TX direction */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 94


 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_UART_TX_CTRL(base) = _BOOL2FLD(SCB_UART_TX_CTRL_RETRY_ON_NACK, ((config->smartCardRetryOnNa
 1849              		.loc 3 125 0 is_stmt 1
 1850 03a6 BB68     		ldr	r3, [r7, #8]
 1851 03a8 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 1852 03aa 002B     		cmp	r3, #0
 1853 03ac 05D0     		beq	.L131
 1854              		.loc 3 125 0 is_stmt 0 discriminator 1
 1855 03ae BB68     		ldr	r3, [r7, #8]
 1856 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1857 03b2 012B     		cmp	r3, #1
 1858 03b4 01D1     		bne	.L131
 1859              		.loc 3 125 0 discriminator 3
 1860 03b6 0123     		movs	r3, #1
 1861 03b8 00E0     		b	.L132
 1862              	.L131:
 1863              		.loc 3 125 0 discriminator 4
 1864 03ba 0023     		movs	r3, #0
 1865              	.L132:
 1866              		.loc 3 125 0 discriminator 6
 1867 03bc 002B     		cmp	r3, #0
 1868 03be 02D0     		beq	.L133
 1869              		.loc 3 125 0 discriminator 7
 1870 03c0 4FF48072 		mov	r2, #256
 1871 03c4 00E0     		b	.L134
 1872              	.L133:
 1873              		.loc 3 125 0 discriminator 8
 1874 03c6 0022     		movs	r2, #0
 1875              	.L134:
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                                               (config->uartMode == CY_SCB_UART_SMAR
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _VAL2FLD(SCB_UART_TX_CTRL_STOP_BITS, ((uint32_t) config->stopBits) - 1UL) 
 1876              		.loc 3 127 0 is_stmt 1
 1877 03c8 BB68     		ldr	r3, [r7, #8]
 1878 03ca 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1879 03cc 013B     		subs	r3, r3, #1
 1880 03ce 03F00703 		and	r3, r3, #7
 126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                                               (config->uartMode == CY_SCB_UART_SMAR
 1881              		.loc 3 126 0
 1882 03d2 1A43     		orrs	r2, r2, r3
 128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _VAL2FLD(CY_SCB_UART_TX_CTRL_SET_PARITY, (uint32_t) config->parity);
 1883              		.loc 3 128 0
 1884 03d4 BB68     		ldr	r3, [r7, #8]
 1885 03d6 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1886 03d8 1B01     		lsls	r3, r3, #4
 1887 03da 03F03003 		and	r3, r3, #48
 127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                          _VAL2FLD(CY_SCB_UART_TX_CTRL_SET_PARITY, (uint32_t) config->parity);
 1888              		.loc 3 127 0
 1889 03de 1A43     		orrs	r2, r2, r3
 125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                                               (config->uartMode == CY_SCB_UART_SMAR
 1890              		.loc 3 125 0
 1891 03e0 FB68     		ldr	r3, [r7, #12]
 1892 03e2 5A64     		str	r2, [r3, #68]
 129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_TX_CTRL(base)  = _BOOL2FLD(SCB_TX_CTRL_MSB_FIRST,  config->enableMsbFirst)    |
 1893              		.loc 3 130 0
 1894 03e4 BB68     		ldr	r3, [r7, #8]
 1895 03e6 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1896 03e8 002B     		cmp	r3, #0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 95


 1897 03ea 02D0     		beq	.L135
 1898              		.loc 3 130 0 is_stmt 0 discriminator 1
 1899 03ec 4FF48072 		mov	r2, #256
 1900 03f0 00E0     		b	.L136
 1901              	.L135:
 1902              		.loc 3 130 0 discriminator 2
 1903 03f2 0022     		movs	r2, #0
 1904              	.L136:
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                      _VAL2FLD(SCB_TX_CTRL_DATA_WIDTH,  (config->dataWidth - 1UL)) |
 1905              		.loc 3 131 0 is_stmt 1
 1906 03f4 BB68     		ldr	r3, [r7, #8]
 1907 03f6 9B68     		ldr	r3, [r3, #8]
 1908 03f8 013B     		subs	r3, r3, #1
 1909 03fa 03F00F03 		and	r3, r3, #15
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                      _VAL2FLD(SCB_TX_CTRL_DATA_WIDTH,  (config->dataWidth - 1UL)) |
 1910              		.loc 3 130 0
 1911 03fe 1A43     		orrs	r2, r2, r3
 132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                      _BOOL2FLD(SCB_TX_CTRL_OPEN_DRAIN, (config->uartMode == CY_SCB_UART_SMARTCARD))
 1912              		.loc 3 132 0
 1913 0400 BB68     		ldr	r3, [r7, #8]
 1914 0402 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1915 0404 012B     		cmp	r3, #1
 1916 0406 02D1     		bne	.L137
 1917              		.loc 3 132 0 is_stmt 0 discriminator 1
 1918 0408 4FF48033 		mov	r3, #65536
 1919 040c 00E0     		b	.L138
 1920              	.L137:
 1921              		.loc 3 132 0 discriminator 2
 1922 040e 0023     		movs	r3, #0
 1923              	.L138:
 131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                      _VAL2FLD(SCB_TX_CTRL_DATA_WIDTH,  (config->dataWidth - 1UL)) |
 1924              		.loc 3 131 0 is_stmt 1
 1925 0410 1A43     		orrs	r2, r2, r3
 130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                      _VAL2FLD(SCB_TX_CTRL_DATA_WIDTH,  (config->dataWidth - 1UL)) |
 1926              		.loc 3 130 0
 1927 0412 FB68     		ldr	r3, [r7, #12]
 1928 0414 C3F80022 		str	r2, [r3, #512]
 133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_RX_FIFO_CTRL(base) = _VAL2FLD(SCB_RX_FIFO_CTRL_TRIGGER_LEVEL, config->rxFifoTriggerLevel);
 1929              		.loc 3 134 0
 1930 0418 BB68     		ldr	r3, [r7, #8]
 1931 041a 1B6B     		ldr	r3, [r3, #48]
 1932 041c DAB2     		uxtb	r2, r3
 1933 041e FB68     		ldr	r3, [r7, #12]
 1934 0420 C3F80423 		str	r2, [r3, #772]
 135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Configure the flow control */
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_UART_FLOW_CTRL(base) = _BOOL2FLD(SCB_UART_FLOW_CTRL_CTS_ENABLED, config->enableCts) |
 1935              		.loc 3 137 0
 1936 0424 BB68     		ldr	r3, [r7, #8]
 1937 0426 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1938 042a 002B     		cmp	r3, #0
 1939 042c 02D0     		beq	.L139
 1940              		.loc 3 137 0 is_stmt 0 discriminator 1
 1941 042e 4FF00072 		mov	r2, #33554432
 1942 0432 00E0     		b	.L140
 1943              	.L139:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 96


 1944              		.loc 3 137 0 discriminator 2
 1945 0434 0022     		movs	r2, #0
 1946              	.L140:
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                            _BOOL2FLD(SCB_UART_FLOW_CTRL_CTS_POLARITY, (CY_SCB_UART_ACTIVE_HIGH == c
 1947              		.loc 3 138 0 is_stmt 1
 1948 0436 BB68     		ldr	r3, [r7, #8]
 1949 0438 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 1950 043c 012B     		cmp	r3, #1
 1951 043e 02D1     		bne	.L141
 1952              		.loc 3 138 0 is_stmt 0 discriminator 1
 1953 0440 4FF08073 		mov	r3, #16777216
 1954 0444 00E0     		b	.L142
 1955              	.L141:
 1956              		.loc 3 138 0 discriminator 2
 1957 0446 0023     		movs	r3, #0
 1958              	.L142:
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                            _BOOL2FLD(SCB_UART_FLOW_CTRL_CTS_POLARITY, (CY_SCB_UART_ACTIVE_HIGH == c
 1959              		.loc 3 137 0 is_stmt 1
 1960 0448 1A43     		orrs	r2, r2, r3
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                            _BOOL2FLD(SCB_UART_FLOW_CTRL_RTS_POLARITY, (CY_SCB_UART_ACTIVE_HIGH == c
 1961              		.loc 3 139 0
 1962 044a BB68     		ldr	r3, [r7, #8]
 1963 044c 93F82830 		ldrb	r3, [r3, #40]	@ zero_extendqisi2
 1964 0450 012B     		cmp	r3, #1
 1965 0452 02D1     		bne	.L143
 1966              		.loc 3 139 0 is_stmt 0 discriminator 1
 1967 0454 4FF48033 		mov	r3, #65536
 1968 0458 00E0     		b	.L144
 1969              	.L143:
 1970              		.loc 3 139 0 discriminator 2
 1971 045a 0023     		movs	r3, #0
 1972              	.L144:
 138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                            _BOOL2FLD(SCB_UART_FLOW_CTRL_CTS_POLARITY, (CY_SCB_UART_ACTIVE_HIGH == c
 1973              		.loc 3 138 0 is_stmt 1
 1974 045c 1A43     		orrs	r2, r2, r3
 140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                            _VAL2FLD(SCB_UART_FLOW_CTRL_TRIGGER_LEVEL, config->rtsRxFifoLevel);
 1975              		.loc 3 140 0
 1976 045e BB68     		ldr	r3, [r7, #8]
 1977 0460 5B6A     		ldr	r3, [r3, #36]
 1978 0462 DBB2     		uxtb	r3, r3
 139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                            _BOOL2FLD(SCB_UART_FLOW_CTRL_RTS_POLARITY, (CY_SCB_UART_ACTIVE_HIGH == c
 1979              		.loc 3 139 0
 1980 0464 1A43     		orrs	r2, r2, r3
 137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                            _BOOL2FLD(SCB_UART_FLOW_CTRL_CTS_POLARITY, (CY_SCB_UART_ACTIVE_HIGH == c
 1981              		.loc 3 137 0
 1982 0466 FB68     		ldr	r3, [r7, #12]
 1983 0468 1A65     		str	r2, [r3, #80]
 141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_TX_FIFO_CTRL(base) = _VAL2FLD(SCB_TX_FIFO_CTRL_TRIGGER_LEVEL, config->txFifoTriggerLevel);
 1984              		.loc 3 142 0
 1985 046a BB68     		ldr	r3, [r7, #8]
 1986 046c 9B6B     		ldr	r3, [r3, #56]
 1987 046e DAB2     		uxtb	r2, r3
 1988 0470 FB68     		ldr	r3, [r7, #12]
 1989 0472 C3F80422 		str	r2, [r3, #516]
 143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Set up interrupt sources */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 97


 145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_INTR_RX_MASK(base) = (config->rxFifoIntEnableMask & CY_SCB_UART_RX_INTR_MASK);
 1990              		.loc 3 145 0
 1991 0476 BB68     		ldr	r3, [r7, #8]
 1992 0478 5A6B     		ldr	r2, [r3, #52]
 1993 047a 40F66D33 		movw	r3, #2925
 1994 047e 1340     		ands	r3, r3, r2
 1995 0480 FA68     		ldr	r2, [r7, #12]
 1996 0482 C2F8C83F 		str	r3, [r2, #4040]
 146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_INTR_TX_MASK(base) = (config->txFifoIntEnableMask & CY_SCB_UART_TX_INTR_MASK);
 1997              		.loc 3 146 0
 1998 0486 BB68     		ldr	r3, [r7, #8]
 1999 0488 DA6B     		ldr	r2, [r3, #60]
 2000 048a 40F27373 		movw	r3, #1907
 2001 048e 1340     		ands	r3, r3, r2
 2002 0490 FA68     		ldr	r2, [r7, #12]
 2003 0492 C2F8883F 		str	r3, [r2, #3976]
 147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Initialize context */
 149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (NULL != context)
 2004              		.loc 3 149 0
 2005 0496 7B68     		ldr	r3, [r7, #4]
 2006 0498 002B     		cmp	r3, #0
 2007 049a 17D0     		beq	.L145
 150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxStatus  = 0UL;
 2008              		.loc 3 151 0
 2009 049c 7B68     		ldr	r3, [r7, #4]
 2010 049e 0022     		movs	r2, #0
 2011 04a0 5A60     		str	r2, [r3, #4]
 152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txStatus  = 0UL;
 2012              		.loc 3 152 0
 2013 04a2 7B68     		ldr	r3, [r7, #4]
 2014 04a4 0022     		movs	r2, #0
 2015 04a6 1A60     		str	r2, [r3]
 153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxRingBuf = NULL;
 2016              		.loc 3 154 0
 2017 04a8 7B68     		ldr	r3, [r7, #4]
 2018 04aa 0022     		movs	r2, #0
 2019 04ac 9A60     		str	r2, [r3, #8]
 155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxRingBufSize = 0UL;
 2020              		.loc 3 155 0
 2021 04ae 7B68     		ldr	r3, [r7, #4]
 2022 04b0 0022     		movs	r2, #0
 2023 04b2 DA60     		str	r2, [r3, #12]
 156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxBufIdx  = 0UL;
 2024              		.loc 3 157 0
 2025 04b4 7B68     		ldr	r3, [r7, #4]
 2026 04b6 0022     		movs	r2, #0
 2027 04b8 1A62     		str	r2, [r3, #32]
 158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txLeftToTransmit = 0UL;
 2028              		.loc 3 158 0
 2029 04ba 7B68     		ldr	r3, [r7, #4]
 2030 04bc 0022     		movs	r2, #0
 2031 04be DA62     		str	r2, [r3, #44]
 159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 98


 160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->cbEvents = NULL;
 2032              		.loc 3 160 0
 2033 04c0 7B68     		ldr	r3, [r7, #4]
 2034 04c2 0022     		movs	r2, #0
 2035 04c4 1A63     		str	r2, [r3, #48]
 161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     #if !defined(NDEBUG)
 163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Put an initialization key into the initKey variable to verify
 164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         * context initialization in the transfer API.
 165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         */
 166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->initKey = CY_SCB_UART_INIT_KEY;
 2036              		.loc 3 166 0
 2037 04c6 7B68     		ldr	r3, [r7, #4]
 2038 04c8 044A     		ldr	r2, .L148+4
 2039 04ca 5A63     		str	r2, [r3, #52]
 2040              	.L145:
 167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     #endif /* !(NDEBUG) */
 168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
 169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return CY_SCB_UART_SUCCESS;
 2041              		.loc 3 170 0
 2042 04cc 0023     		movs	r3, #0
 2043              	.L76:
 171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2044              		.loc 3 171 0
 2045 04ce 1846     		mov	r0, r3
 2046 04d0 1C37     		adds	r7, r7, #28
 2047              		.cfi_def_cfa_offset 12
 2048 04d2 BD46     		mov	sp, r7
 2049              		.cfi_def_cfa_register 13
 2050              		@ sp needed
 2051 04d4 90BD     		pop	{r4, r7, pc}
 2052              	.L149:
 2053 04d6 00BF     		.align	2
 2054              	.L148:
 2055 04d8 84000000 		.word	.LC2
 2056 04dc EFCDAB00 		.word	11259375
 2057              		.cfi_endproc
 2058              	.LFE242:
 2059              		.size	Cy_SCB_UART_Init, .-Cy_SCB_UART_Init
 2060              		.section	.text.Cy_SCB_UART_DeInit,"ax",%progbits
 2061              		.align	2
 2062              		.global	Cy_SCB_UART_DeInit
 2063              		.thumb
 2064              		.thumb_func
 2065              		.type	Cy_SCB_UART_DeInit, %function
 2066              	Cy_SCB_UART_DeInit:
 2067              	.LFB243:
 172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_DeInit
 176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * De-initializes the SCB block. Returns the register values to default.
 179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 99


 181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Ensure that the SCB block is disabled before calling this function.
 185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_DeInit(CySCB_Type *base)
 188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2068              		.loc 3 188 0
 2069              		.cfi_startproc
 2070              		@ args = 0, pretend = 0, frame = 8
 2071              		@ frame_needed = 1, uses_anonymous_args = 0
 2072              		@ link register save eliminated.
 2073 0000 80B4     		push	{r7}
 2074              		.cfi_def_cfa_offset 4
 2075              		.cfi_offset 7, -4
 2076 0002 83B0     		sub	sp, sp, #12
 2077              		.cfi_def_cfa_offset 16
 2078 0004 00AF     		add	r7, sp, #0
 2079              		.cfi_def_cfa_register 7
 2080 0006 7860     		str	r0, [r7, #4]
 189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* De-initialize the UART interface */
 190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_CTRL(base)      = CY_SCB_CTRL_DEF_VAL;
 2081              		.loc 3 190 0
 2082 0008 7B68     		ldr	r3, [r7, #4]
 2083 000a 214A     		ldr	r2, .L151
 2084 000c 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_UART_CTRL(base) = CY_SCB_UART_CTRL_DEF_VAL;
 2085              		.loc 3 191 0
 2086 000e 7B68     		ldr	r3, [r7, #4]
 2087 0010 4FF04072 		mov	r2, #50331648
 2088 0014 1A64     		str	r2, [r3, #64]
 192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* De-initialize the RX direction */
 194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_UART_RX_CTRL(base) = 0UL;
 2089              		.loc 3 194 0
 2090 0016 7B68     		ldr	r3, [r7, #4]
 2091 0018 0022     		movs	r2, #0
 2092 001a 9A64     		str	r2, [r3, #72]
 195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_RX_CTRL(base)      = CY_SCB_RX_CTRL_DEF_VAL;
 2093              		.loc 3 195 0
 2094 001c 7B68     		ldr	r3, [r7, #4]
 2095 001e 40F20712 		movw	r2, #263
 2096 0022 C3F80023 		str	r2, [r3, #768]
 196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_RX_FIFO_CTRL(base) = 0UL;
 2097              		.loc 3 196 0
 2098 0026 7B68     		ldr	r3, [r7, #4]
 2099 0028 0022     		movs	r2, #0
 2100 002a C3F80423 		str	r2, [r3, #772]
 197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_RX_MATCH(base)     = 0UL;
 2101              		.loc 3 197 0
 2102 002e 7B68     		ldr	r3, [r7, #4]
 2103 0030 0022     		movs	r2, #0
 2104 0032 C3F81023 		str	r2, [r3, #784]
 198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* De-initialize the TX direction */
 200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_UART_TX_CTRL(base) = 0UL;
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 100


 2105              		.loc 3 200 0
 2106 0036 7B68     		ldr	r3, [r7, #4]
 2107 0038 0022     		movs	r2, #0
 2108 003a 5A64     		str	r2, [r3, #68]
 201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_TX_CTRL(base)      = CY_SCB_TX_CTRL_DEF_VAL;
 2109              		.loc 3 201 0
 2110 003c 7B68     		ldr	r3, [r7, #4]
 2111 003e 40F20712 		movw	r2, #263
 2112 0042 C3F80022 		str	r2, [r3, #512]
 202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_TX_FIFO_CTRL(base) = 0UL;
 2113              		.loc 3 202 0
 2114 0046 7B68     		ldr	r3, [r7, #4]
 2115 0048 0022     		movs	r2, #0
 2116 004a C3F80422 		str	r2, [r3, #516]
 203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* De-initialize the flow control */
 205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_UART_FLOW_CTRL(base) = 0UL;
 2117              		.loc 3 205 0
 2118 004e 7B68     		ldr	r3, [r7, #4]
 2119 0050 0022     		movs	r2, #0
 2120 0052 1A65     		str	r2, [r3, #80]
 206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* De-initialize the interrupt sources */
 208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_INTR_SPI_EC_MASK(base) = 0UL;
 2121              		.loc 3 208 0
 2122 0054 7B68     		ldr	r3, [r7, #4]
 2123 0056 0022     		movs	r2, #0
 2124 0058 C3F8C82E 		str	r2, [r3, #3784]
 209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_INTR_I2C_EC_MASK(base) = 0UL;
 2125              		.loc 3 209 0
 2126 005c 7B68     		ldr	r3, [r7, #4]
 2127 005e 0022     		movs	r2, #0
 2128 0060 C3F8882E 		str	r2, [r3, #3720]
 210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_INTR_RX_MASK(base)     = 0UL;
 2129              		.loc 3 210 0
 2130 0064 7B68     		ldr	r3, [r7, #4]
 2131 0066 0022     		movs	r2, #0
 2132 0068 C3F8C82F 		str	r2, [r3, #4040]
 211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_INTR_TX_MASK(base)     = 0UL;
 2133              		.loc 3 211 0
 2134 006c 7B68     		ldr	r3, [r7, #4]
 2135 006e 0022     		movs	r2, #0
 2136 0070 C3F8882F 		str	r2, [r3, #3976]
 212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_INTR_M_MASK(base)      = 0UL;
 2137              		.loc 3 212 0
 2138 0074 7B68     		ldr	r3, [r7, #4]
 2139 0076 0022     		movs	r2, #0
 2140 0078 C3F8082F 		str	r2, [r3, #3848]
 213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_INTR_S_MASK(base)      = 0UL;
 2141              		.loc 3 213 0
 2142 007c 7B68     		ldr	r3, [r7, #4]
 2143 007e 0022     		movs	r2, #0
 2144 0080 C3F8482F 		str	r2, [r3, #3912]
 214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2145              		.loc 3 214 0
 2146 0084 00BF     		nop
 2147 0086 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 101


 2148              		.cfi_def_cfa_offset 4
 2149 0088 BD46     		mov	sp, r7
 2150              		.cfi_def_cfa_register 13
 2151              		@ sp needed
 2152 008a 5DF8047B 		ldr	r7, [sp], #4
 2153              		.cfi_restore 7
 2154              		.cfi_def_cfa_offset 0
 2155 008e 7047     		bx	lr
 2156              	.L152:
 2157              		.align	2
 2158              	.L151:
 2159 0090 0F000003 		.word	50331663
 2160              		.cfi_endproc
 2161              	.LFE243:
 2162              		.size	Cy_SCB_UART_DeInit, .-Cy_SCB_UART_DeInit
 2163              		.section	.text.Cy_SCB_UART_Disable,"ax",%progbits
 2164              		.align	2
 2165              		.global	Cy_SCB_UART_Disable
 2166              		.thumb
 2167              		.thumb_func
 2168              		.type	Cy_SCB_UART_Disable, %function
 2169              	Cy_SCB_UART_Disable:
 2170              	.LFB244:
 215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_Disable
 219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Disables the SCB block and clears context statuses.
 222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Note that after the block is disabled, the TX and RX FIFOs and
 223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * hardware statuses are cleared. Also, the hardware stops driving the
 224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * output and ignores the input. Refer to section \ref group_scb_uart_lp for more 
 225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * information about UART pins when SCB disabled.
 226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * If only UART functions that do not require context will be used to pass NULL
 236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * as pointer to context.
 237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Calling this function when the UART is busy (transmitter preforms data
 240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * transfer or receiver is in the middle of data reception) may result transfer
 241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * corruption because the hardware stops driving the outputs and ignores
 242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * the inputs.
 243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Ensure that the UART is not busy before calling this function.
 244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_Disable(CySCB_Type *base, cy_stc_scb_uart_context_t *context)
 247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2171              		.loc 3 247 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 102


 2172              		.cfi_startproc
 2173              		@ args = 0, pretend = 0, frame = 8
 2174              		@ frame_needed = 1, uses_anonymous_args = 0
 2175              		@ link register save eliminated.
 2176 0000 80B4     		push	{r7}
 2177              		.cfi_def_cfa_offset 4
 2178              		.cfi_offset 7, -4
 2179 0002 83B0     		sub	sp, sp, #12
 2180              		.cfi_def_cfa_offset 16
 2181 0004 00AF     		add	r7, sp, #0
 2182              		.cfi_def_cfa_register 7
 2183 0006 7860     		str	r0, [r7, #4]
 2184 0008 3960     		str	r1, [r7]
 248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_CTRL(base) &= (uint32_t) ~SCB_CTRL_ENABLED_Msk;
 2185              		.loc 3 248 0
 2186 000a 7B68     		ldr	r3, [r7, #4]
 2187 000c 1B68     		ldr	r3, [r3]
 2188 000e 23F00042 		bic	r2, r3, #-2147483648
 2189 0012 7B68     		ldr	r3, [r7, #4]
 2190 0014 1A60     		str	r2, [r3]
 249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (NULL != context)
 2191              		.loc 3 250 0
 2192 0016 3B68     		ldr	r3, [r7]
 2193 0018 002B     		cmp	r3, #0
 2194 001a 0BD0     		beq	.L155
 251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxStatus  = 0UL;
 2195              		.loc 3 252 0
 2196 001c 3B68     		ldr	r3, [r7]
 2197 001e 0022     		movs	r2, #0
 2198 0020 5A60     		str	r2, [r3, #4]
 253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txStatus  = 0UL;
 2199              		.loc 3 253 0
 2200 0022 3B68     		ldr	r3, [r7]
 2201 0024 0022     		movs	r2, #0
 2202 0026 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxBufIdx  = 0UL;
 2203              		.loc 3 255 0
 2204 0028 3B68     		ldr	r3, [r7]
 2205 002a 0022     		movs	r2, #0
 2206 002c 1A62     		str	r2, [r3, #32]
 256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txLeftToTransmit = 0UL;
 2207              		.loc 3 256 0
 2208 002e 3B68     		ldr	r3, [r7]
 2209 0030 0022     		movs	r2, #0
 2210 0032 DA62     		str	r2, [r3, #44]
 2211              	.L155:
 257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
 258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2212              		.loc 3 258 0
 2213 0034 00BF     		nop
 2214 0036 0C37     		adds	r7, r7, #12
 2215              		.cfi_def_cfa_offset 4
 2216 0038 BD46     		mov	sp, r7
 2217              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 103


 2218              		@ sp needed
 2219 003a 5DF8047B 		ldr	r7, [sp], #4
 2220              		.cfi_restore 7
 2221              		.cfi_def_cfa_offset 0
 2222 003e 7047     		bx	lr
 2223              		.cfi_endproc
 2224              	.LFE244:
 2225              		.size	Cy_SCB_UART_Disable, .-Cy_SCB_UART_Disable
 2226              		.section	.text.Cy_SCB_UART_DeepSleepCallback,"ax",%progbits
 2227              		.align	2
 2228              		.global	Cy_SCB_UART_DeepSleepCallback
 2229              		.thumb
 2230              		.thumb_func
 2231              		.type	Cy_SCB_UART_DeepSleepCallback, %function
 2232              	Cy_SCB_UART_DeepSleepCallback:
 2233              	.LFB245:
 259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_DeepSleepCallback
 263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This function handles the transition of the SCB UART into and out of
 266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Deep Sleep mode. It prevents the device from entering Deep Sleep 
 267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * mode if the UART is transmitting data or has any data in the RX FIFO. If the
 268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * UART is ready to enter Deep Sleep mode, it is disabled. The UART is enabled
 269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * when the device fails to enter Deep Sleep mode or it is awakened from
 270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Deep Sleep mode. While the UART is disabled, it stops driving the outputs
 271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * and ignores the inputs. Any incoming data is ignored. Refer to section 
 272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref group_scb_uart_lp for more information about UART pins when SCB disabled.
 273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This function must be called during execution of \ref Cy_SysPm_CpuEnterDeepSleep,
 275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * to do it, register this function as a callback before calling
 276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref Cy_SysPm_CpuEnterDeepSleep : specify \ref CY_SYSPM_DEEPSLEEP as the callback
 277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * type and call \ref Cy_SysPm_RegisterCallback.
 278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param callbackParams
 280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the callback parameters structure
 281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref cy_stc_syspm_callback_params_t.
 282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param mode
 284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
 285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
 287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref cy_en_syspm_status_t
 288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** cy_en_syspm_status_t Cy_SCB_UART_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, 
 291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2234              		.loc 3 291 0
 2235              		.cfi_startproc
 2236              		@ args = 0, pretend = 0, frame = 24
 2237              		@ frame_needed = 1, uses_anonymous_args = 0
 2238 0000 80B5     		push	{r7, lr}
 2239              		.cfi_def_cfa_offset 8
 2240              		.cfi_offset 7, -8
 2241              		.cfi_offset 14, -4
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 104


 2242 0002 86B0     		sub	sp, sp, #24
 2243              		.cfi_def_cfa_offset 32
 2244 0004 00AF     		add	r7, sp, #0
 2245              		.cfi_def_cfa_register 7
 2246 0006 7860     		str	r0, [r7, #4]
 2247 0008 0B46     		mov	r3, r1
 2248 000a FB70     		strb	r3, [r7, #3]
 292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     cy_en_syspm_status_t retStatus = CY_SYSPM_FAIL;
 2249              		.loc 3 292 0
 2250 000c 2C4B     		ldr	r3, .L168
 2251 000e 7B61     		str	r3, [r7, #20]
 293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CySCB_Type *locBase = (CySCB_Type *) callbackParams->base;
 2252              		.loc 3 294 0
 2253 0010 7B68     		ldr	r3, [r7, #4]
 2254 0012 1B68     		ldr	r3, [r3]
 2255 0014 3B61     		str	r3, [r7, #16]
 295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     cy_stc_scb_uart_context_t *locContext = (cy_stc_scb_uart_context_t *) callbackParams->context;
 2256              		.loc 3 295 0
 2257 0016 7B68     		ldr	r3, [r7, #4]
 2258 0018 5B68     		ldr	r3, [r3, #4]
 2259 001a FB60     		str	r3, [r7, #12]
 296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     switch(mode)
 2260              		.loc 3 297 0
 2261 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2262 001e 013B     		subs	r3, r3, #1
 2263 0020 072B     		cmp	r3, #7
 2264 0022 44D8     		bhi	.L166
 2265 0024 01A2     		adr	r2, .L159
 2266 0026 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2267 002a 00BF     		.p2align 2
 2268              	.L159:
 2269 002c 4D000000 		.word	.L158+1
 2270 0030 97000000 		.word	.L160+1
 2271 0034 AF000000 		.word	.L166+1
 2272 0038 AF000000 		.word	.L166+1
 2273 003c AF000000 		.word	.L166+1
 2274 0040 AF000000 		.word	.L166+1
 2275 0044 AF000000 		.word	.L166+1
 2276 0048 A3000000 		.word	.L162+1
 2277              		.p2align 1
 2278              	.L158:
 298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         case CY_SYSPM_CHECK_READY:
 300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
 301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Check whether the High-level API is not busy executing the transmit
 302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             * or receive operation.
 303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             */
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             if ((0UL == (CY_SCB_UART_TRANSMIT_ACTIVE & Cy_SCB_UART_GetTransmitStatus(locBase, locCo
 2279              		.loc 3 304 0
 2280 004c F968     		ldr	r1, [r7, #12]
 2281 004e 3869     		ldr	r0, [r7, #16]
 2282 0050 FFF7FEFF 		bl	Cy_SCB_UART_GetTransmitStatus
 2283 0054 0346     		mov	r3, r0
 2284 0056 03F00103 		and	r3, r3, #1
 2285 005a 002B     		cmp	r3, #0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 105


 2286 005c 29D1     		bne	.L167
 305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 (0UL == (CY_SCB_UART_RECEIVE_ACTIVE  & Cy_SCB_UART_GetReceiveStatus (locBase, locCo
 2287              		.loc 3 305 0 discriminator 1
 2288 005e F968     		ldr	r1, [r7, #12]
 2289 0060 3869     		ldr	r0, [r7, #16]
 2290 0062 FFF7FEFF 		bl	Cy_SCB_UART_GetReceiveStatus
 2291 0066 0346     		mov	r3, r0
 2292 0068 03F00103 		and	r3, r3, #1
 304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 (0UL == (CY_SCB_UART_RECEIVE_ACTIVE  & Cy_SCB_UART_GetReceiveStatus (locBase, locCo
 2293              		.loc 3 304 0 discriminator 1
 2294 006c 002B     		cmp	r3, #0
 2295 006e 20D1     		bne	.L167
 306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
 307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 /* If all data elements are transmitted from the TX FIFO and
 308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 * shifter and the RX FIFO is empty: the UART is ready to enter
 309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 * Deep Sleep mode.
 310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 */
 311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 if (Cy_SCB_UART_IsTxComplete(locBase))
 2296              		.loc 3 311 0
 2297 0070 3869     		ldr	r0, [r7, #16]
 2298 0072 FFF7FEFF 		bl	Cy_SCB_UART_IsTxComplete
 2299 0076 0346     		mov	r3, r0
 2300 0078 002B     		cmp	r3, #0
 2301 007a 1AD0     		beq	.L167
 312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 {
 313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     if (0UL == Cy_SCB_UART_GetNumInRxFifo(locBase))
 2302              		.loc 3 313 0
 2303 007c 3869     		ldr	r0, [r7, #16]
 2304 007e FFF7FEFF 		bl	Cy_SCB_UART_GetNumInRxFifo
 2305 0082 0346     		mov	r3, r0
 2306 0084 002B     		cmp	r3, #0
 2307 0086 14D1     		bne	.L167
 314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     {
 315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         /* Disable the UART. The transmitter stops driving the
 316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         * lines and the receiver stops receiving data until
 317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         * the UART is enabled.
 318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         * This happens when the device failed to enter Deep
 319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         * Sleep or it is awaken from Deep Sleep mode.
 320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         */
 321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         Cy_SCB_UART_Disable(locBase, locContext);
 2308              		.loc 3 321 0
 2309 0088 F968     		ldr	r1, [r7, #12]
 2310 008a 3869     		ldr	r0, [r7, #16]
 2311 008c FFF7FEFF 		bl	Cy_SCB_UART_Disable
 322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         retStatus = CY_SYSPM_SUCCESS;
 2312              		.loc 3 323 0
 2313 0090 0023     		movs	r3, #0
 2314 0092 7B61     		str	r3, [r7, #20]
 324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     }
 325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 }
 326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
 327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         break;
 2315              		.loc 3 328 0
 2316 0094 0DE0     		b	.L167
 2317              	.L160:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 106


 329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         case CY_SYSPM_CHECK_FAIL:
 331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
 332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* The other driver is not ready for Deep Sleep mode. Restore the
 333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             * Active mode configuration.
 334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             */
 335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Enable the UART to operate */
 337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_UART_Enable(locBase);
 2318              		.loc 3 337 0
 2319 0096 3869     		ldr	r0, [r7, #16]
 2320 0098 FFF7FEFF 		bl	Cy_SCB_UART_Enable
 338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             retStatus = CY_SYSPM_SUCCESS;
 2321              		.loc 3 339 0
 2322 009c 0023     		movs	r3, #0
 2323 009e 7B61     		str	r3, [r7, #20]
 340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
 341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         break;
 2324              		.loc 3 341 0
 2325 00a0 08E0     		b	.L164
 2326              	.L162:
 342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         case CY_SYSPM_BEFORE_TRANSITION:
 344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Do noting: the UART is not capable of waking up from
 345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             * Deep Sleep mode.
 346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             */
 347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         break;
 348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         case CY_SYSPM_AFTER_TRANSITION:
 350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
 351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Enable the UART to operate */
 352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_UART_Enable(locBase);
 2327              		.loc 3 352 0
 2328 00a2 3869     		ldr	r0, [r7, #16]
 2329 00a4 FFF7FEFF 		bl	Cy_SCB_UART_Enable
 353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             retStatus = CY_SYSPM_SUCCESS;
 2330              		.loc 3 354 0
 2331 00a8 0023     		movs	r3, #0
 2332 00aa 7B61     		str	r3, [r7, #20]
 355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
 356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         break;
 2333              		.loc 3 356 0
 2334 00ac 02E0     		b	.L164
 2335              	.L166:
 357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         default:
 359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             break;
 2336              		.loc 3 359 0
 2337 00ae 00BF     		nop
 2338 00b0 00E0     		b	.L164
 2339              	.L167:
 328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 2340              		.loc 3 328 0
 2341 00b2 00BF     		nop
 2342              	.L164:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 107


 360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
 361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return (retStatus);
 2343              		.loc 3 362 0
 2344 00b4 7B69     		ldr	r3, [r7, #20]
 363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2345              		.loc 3 363 0
 2346 00b6 1846     		mov	r0, r3
 2347 00b8 1837     		adds	r7, r7, #24
 2348              		.cfi_def_cfa_offset 8
 2349 00ba BD46     		mov	sp, r7
 2350              		.cfi_def_cfa_register 13
 2351              		@ sp needed
 2352 00bc 80BD     		pop	{r7, pc}
 2353              	.L169:
 2354 00be 00BF     		.align	2
 2355              	.L168:
 2356 00c0 FF004200 		.word	4325631
 2357              		.cfi_endproc
 2358              	.LFE245:
 2359              		.size	Cy_SCB_UART_DeepSleepCallback, .-Cy_SCB_UART_DeepSleepCallback
 2360              		.section	.text.Cy_SCB_UART_HibernateCallback,"ax",%progbits
 2361              		.align	2
 2362              		.global	Cy_SCB_UART_HibernateCallback
 2363              		.thumb
 2364              		.thumb_func
 2365              		.type	Cy_SCB_UART_HibernateCallback, %function
 2366              	Cy_SCB_UART_HibernateCallback:
 2367              	.LFB246:
 364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_HibernateCallback
 368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This function handles the transition of the SCB UART into Hibernate mode. 
 371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * It prevents the device from entering Hibernate mode if the UART is
 372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * transmitting data or has any data in the RX FIFO. If the UART is ready
 373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * to enter Hibernate mode, it is disabled. If the device fails to enter
 374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Hibernate mode, the UART is enabled. While the UART is disabled, it stops
 375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * driving the outputs and ignores the inputs. Any incoming data is ignored.
 376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Refer to section \ref group_scb_uart_lp for more information about UART pins 
 377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * when SCB disabled.
 378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This function must be called during execution of \ref Cy_SysPm_SystemEnterHibernate.
 380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * To do it, register this function as a callback before calling
 381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref Cy_SysPm_SystemEnterHibernate : specify \ref CY_SYSPM_HIBERNATE as the callback type
 382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * and call \ref Cy_SysPm_RegisterCallback.
 383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param callbackParams
 385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the callback parameters structure
 386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref cy_stc_syspm_callback_params_t.
 387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param mode
 389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Callback mode, see \ref cy_en_syspm_callback_mode_t
 390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 108


 392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref cy_en_syspm_status_t
 393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 394:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 395:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** cy_en_syspm_status_t Cy_SCB_UART_HibernateCallback(cy_stc_syspm_callback_params_t *callbackParams, 
 396:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2368              		.loc 3 396 0
 2369              		.cfi_startproc
 2370              		@ args = 0, pretend = 0, frame = 8
 2371              		@ frame_needed = 1, uses_anonymous_args = 0
 2372 0000 80B5     		push	{r7, lr}
 2373              		.cfi_def_cfa_offset 8
 2374              		.cfi_offset 7, -8
 2375              		.cfi_offset 14, -4
 2376 0002 82B0     		sub	sp, sp, #8
 2377              		.cfi_def_cfa_offset 16
 2378 0004 00AF     		add	r7, sp, #0
 2379              		.cfi_def_cfa_register 7
 2380 0006 7860     		str	r0, [r7, #4]
 2381 0008 0B46     		mov	r3, r1
 2382 000a FB70     		strb	r3, [r7, #3]
 397:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return Cy_SCB_UART_DeepSleepCallback(callbackParams, mode);
 2383              		.loc 3 397 0
 2384 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2385 000e 1946     		mov	r1, r3
 2386 0010 7868     		ldr	r0, [r7, #4]
 2387 0012 FFF7FEFF 		bl	Cy_SCB_UART_DeepSleepCallback
 2388 0016 0346     		mov	r3, r0
 398:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2389              		.loc 3 398 0
 2390 0018 1846     		mov	r0, r3
 2391 001a 0837     		adds	r7, r7, #8
 2392              		.cfi_def_cfa_offset 8
 2393 001c BD46     		mov	sp, r7
 2394              		.cfi_def_cfa_register 13
 2395              		@ sp needed
 2396 001e 80BD     		pop	{r7, pc}
 2397              		.cfi_endproc
 2398              	.LFE246:
 2399              		.size	Cy_SCB_UART_HibernateCallback, .-Cy_SCB_UART_HibernateCallback
 2400              		.section	.text.Cy_SCB_UART_StartRingBuffer,"ax",%progbits
 2401              		.align	2
 2402              		.global	Cy_SCB_UART_StartRingBuffer
 2403              		.thumb
 2404              		.thumb_func
 2405              		.type	Cy_SCB_UART_StartRingBuffer, %function
 2406              	Cy_SCB_UART_StartRingBuffer:
 2407              	.LFB247:
 399:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 400:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 401:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /************************* High-Level Functions ********************************
 402:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The following functions are considered high-level. They provide the layer of
 403:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * intelligence to the SCB. These functions require interrupts.
 404:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Low-level and high-level functions must not be mixed because low-level API
 405:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * can adversely affect the operation of high-level functions.
 406:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 407:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 408:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 109


 409:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 410:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_StartRingBuffer
 411:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 412:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 413:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Starts the receive ring buffer operation.
 414:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The RX interrupt source is configured to get data from the RX
 415:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * FIFO and put into the ring buffer. 
 416:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 417:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 418:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 419:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 420:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param buffer
 421:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Pointer to the user defined ring buffer.
 422:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The element size is defined by the data type, which depends on the configured
 423:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * data width.
 424:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 425:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param size
 426:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The size of the receive ring buffer.
 427:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Note that one data element is used for internal use, so if the size is 32,
 428:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * then only 31 data elements are used for data storage.
 429:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 430:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 431:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 432:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 433:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 434:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 435:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 436:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 437:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * The buffer must not be modified and stay allocated while the ring buffer
 438:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   operates.
 439:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * This function overrides the RX interrupt sources and changes the
 440:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   RX FIFO level.
 441:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 442:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 443:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_StartRingBuffer(CySCB_Type *base, void *buffer, uint32_t size, cy_stc_scb_uart_con
 444:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2408              		.loc 3 444 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 24
 2411              		@ frame_needed = 1, uses_anonymous_args = 0
 2412 0000 80B5     		push	{r7, lr}
 2413              		.cfi_def_cfa_offset 8
 2414              		.cfi_offset 7, -8
 2415              		.cfi_offset 14, -4
 2416 0002 86B0     		sub	sp, sp, #24
 2417              		.cfi_def_cfa_offset 32
 2418 0004 00AF     		add	r7, sp, #0
 2419              		.cfi_def_cfa_register 7
 2420 0006 F860     		str	r0, [r7, #12]
 2421 0008 B960     		str	r1, [r7, #8]
 2422 000a 7A60     		str	r2, [r7, #4]
 2423 000c 3B60     		str	r3, [r7]
 445:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(NULL != context);
 2424              		.loc 3 445 0
 2425 000e 3B68     		ldr	r3, [r7]
 2426 0010 002B     		cmp	r3, #0
 2427 0012 04D1     		bne	.L173
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 110


 2428              		.loc 3 445 0 is_stmt 0 discriminator 1
 2429 0014 40F2BD11 		movw	r1, #445
 2430 0018 2248     		ldr	r0, .L181
 2431 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2432              	.L173:
 446:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(CY_SCB_UART_INIT_KEY == context->initKey);
 2433              		.loc 3 446 0 is_stmt 1
 2434 001e 3B68     		ldr	r3, [r7]
 2435 0020 5B6B     		ldr	r3, [r3, #52]
 2436 0022 214A     		ldr	r2, .L181+4
 2437 0024 9342     		cmp	r3, r2
 2438 0026 04D0     		beq	.L174
 2439              		.loc 3 446 0 is_stmt 0 discriminator 1
 2440 0028 4FF4DF71 		mov	r1, #446
 2441 002c 1D48     		ldr	r0, .L181
 2442 002e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2443              	.L174:
 447:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
 2444              		.loc 3 447 0 is_stmt 1
 2445 0032 BB68     		ldr	r3, [r7, #8]
 2446 0034 002B     		cmp	r3, #0
 2447 0036 02D0     		beq	.L175
 2448              		.loc 3 447 0 is_stmt 0 discriminator 2
 2449 0038 7B68     		ldr	r3, [r7, #4]
 2450 003a 002B     		cmp	r3, #0
 2451 003c 04D1     		bne	.L176
 2452              	.L175:
 2453              		.loc 3 447 0 discriminator 3
 2454 003e 40F2BF11 		movw	r1, #447
 2455 0042 1848     		ldr	r0, .L181
 2456 0044 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2457              	.L176:
 448:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 449:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if ((NULL != buffer) && (size > 0UL))
 2458              		.loc 3 449 0 is_stmt 1
 2459 0048 BB68     		ldr	r3, [r7, #8]
 2460 004a 002B     		cmp	r3, #0
 2461 004c 25D0     		beq	.L180
 2462              		.loc 3 449 0 is_stmt 0 discriminator 1
 2463 004e 7B68     		ldr	r3, [r7, #4]
 2464 0050 002B     		cmp	r3, #0
 2465 0052 22D0     		beq	.L180
 2466              	.LBB2:
 450:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 451:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint32_t halfFifoSize =  (Cy_SCB_GetFifoSize(base) / 2UL);
 2467              		.loc 3 451 0 is_stmt 1
 2468 0054 F868     		ldr	r0, [r7, #12]
 2469 0056 FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 2470 005a 0346     		mov	r3, r0
 2471 005c 5B08     		lsrs	r3, r3, #1
 2472 005e 7B61     		str	r3, [r7, #20]
 452:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 453:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxRingBuf     = buffer;
 2473              		.loc 3 453 0
 2474 0060 3B68     		ldr	r3, [r7]
 2475 0062 BA68     		ldr	r2, [r7, #8]
 2476 0064 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 111


 454:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxRingBufSize = size;
 2477              		.loc 3 454 0
 2478 0066 3B68     		ldr	r3, [r7]
 2479 0068 7A68     		ldr	r2, [r7, #4]
 2480 006a DA60     		str	r2, [r3, #12]
 455:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxRingBufHead = 0UL;
 2481              		.loc 3 455 0
 2482 006c 3B68     		ldr	r3, [r7]
 2483 006e 0022     		movs	r2, #0
 2484 0070 1A61     		str	r2, [r3, #16]
 456:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxRingBufTail = 0UL;
 2485              		.loc 3 456 0
 2486 0072 3B68     		ldr	r3, [r7]
 2487 0074 0022     		movs	r2, #0
 2488 0076 5A61     		str	r2, [r3, #20]
 457:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 458:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Set up an RX interrupt to handle the ring buffer */
 459:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_SetRxFifoLevel(base, (size >= halfFifoSize) ? (halfFifoSize - 1UL) : (size - 1UL));
 2489              		.loc 3 459 0
 2490 0078 7A68     		ldr	r2, [r7, #4]
 2491 007a 7B69     		ldr	r3, [r7, #20]
 2492 007c 9A42     		cmp	r2, r3
 2493 007e 02D3     		bcc	.L178
 2494              		.loc 3 459 0 is_stmt 0 discriminator 1
 2495 0080 7B69     		ldr	r3, [r7, #20]
 2496 0082 013B     		subs	r3, r3, #1
 2497 0084 01E0     		b	.L179
 2498              	.L178:
 2499              		.loc 3 459 0 discriminator 2
 2500 0086 7B68     		ldr	r3, [r7, #4]
 2501 0088 013B     		subs	r3, r3, #1
 2502              	.L179:
 2503              		.loc 3 459 0 discriminator 4
 2504 008a 1946     		mov	r1, r3
 2505 008c F868     		ldr	r0, [r7, #12]
 2506 008e FFF7FEFF 		bl	Cy_SCB_SetRxFifoLevel
 460:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 461:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_SetRxInterruptMask(base, CY_SCB_RX_INTR_LEVEL);
 2507              		.loc 3 461 0 is_stmt 1 discriminator 4
 2508 0092 0121     		movs	r1, #1
 2509 0094 F868     		ldr	r0, [r7, #12]
 2510 0096 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 2511              	.L180:
 2512              	.LBE2:
 462:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
 463:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2513              		.loc 3 463 0
 2514 009a 00BF     		nop
 2515 009c 1837     		adds	r7, r7, #24
 2516              		.cfi_def_cfa_offset 8
 2517 009e BD46     		mov	sp, r7
 2518              		.cfi_def_cfa_register 13
 2519              		@ sp needed
 2520 00a0 80BD     		pop	{r7, pc}
 2521              	.L182:
 2522 00a2 00BF     		.align	2
 2523              	.L181:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 112


 2524 00a4 84000000 		.word	.LC2
 2525 00a8 EFCDAB00 		.word	11259375
 2526              		.cfi_endproc
 2527              	.LFE247:
 2528              		.size	Cy_SCB_UART_StartRingBuffer, .-Cy_SCB_UART_StartRingBuffer
 2529              		.section	.text.Cy_SCB_UART_StopRingBuffer,"ax",%progbits
 2530              		.align	2
 2531              		.global	Cy_SCB_UART_StopRingBuffer
 2532              		.thumb
 2533              		.thumb_func
 2534              		.type	Cy_SCB_UART_StopRingBuffer, %function
 2535              	Cy_SCB_UART_StopRingBuffer:
 2536              	.LFB248:
 464:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 465:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 466:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 467:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_StopRingBuffer
 468:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 469:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 470:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Stops receiving data into the ring buffer and clears the ring buffer.
 471:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 472:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 473:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 474:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 475:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 476:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 477:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 478:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 479:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 480:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 481:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 482:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_StopRingBuffer(CySCB_Type *base, cy_stc_scb_uart_context_t *context)
 483:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2537              		.loc 3 483 0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 8
 2540              		@ frame_needed = 1, uses_anonymous_args = 0
 2541 0000 80B5     		push	{r7, lr}
 2542              		.cfi_def_cfa_offset 8
 2543              		.cfi_offset 7, -8
 2544              		.cfi_offset 14, -4
 2545 0002 82B0     		sub	sp, sp, #8
 2546              		.cfi_def_cfa_offset 16
 2547 0004 00AF     		add	r7, sp, #0
 2548              		.cfi_def_cfa_register 7
 2549 0006 7860     		str	r0, [r7, #4]
 2550 0008 3960     		str	r1, [r7]
 484:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_SetRxInterruptMask  (base, CY_SCB_CLEAR_ALL_INTR_SRC);
 2551              		.loc 3 484 0
 2552 000a 0021     		movs	r1, #0
 2553 000c 7868     		ldr	r0, [r7, #4]
 2554 000e FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 485:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_UART_ClearRingBuffer(base, context);
 2555              		.loc 3 485 0
 2556 0012 3968     		ldr	r1, [r7]
 2557 0014 7868     		ldr	r0, [r7, #4]
 2558 0016 FFF7FEFF 		bl	Cy_SCB_UART_ClearRingBuffer
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 113


 486:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 487:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxRingBuf     = NULL;
 2559              		.loc 3 487 0
 2560 001a 3B68     		ldr	r3, [r7]
 2561 001c 0022     		movs	r2, #0
 2562 001e 9A60     		str	r2, [r3, #8]
 488:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxRingBufSize = 0UL;
 2563              		.loc 3 488 0
 2564 0020 3B68     		ldr	r3, [r7]
 2565 0022 0022     		movs	r2, #0
 2566 0024 DA60     		str	r2, [r3, #12]
 489:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2567              		.loc 3 489 0
 2568 0026 00BF     		nop
 2569 0028 0837     		adds	r7, r7, #8
 2570              		.cfi_def_cfa_offset 8
 2571 002a BD46     		mov	sp, r7
 2572              		.cfi_def_cfa_register 13
 2573              		@ sp needed
 2574 002c 80BD     		pop	{r7, pc}
 2575              		.cfi_endproc
 2576              	.LFE248:
 2577              		.size	Cy_SCB_UART_StopRingBuffer, .-Cy_SCB_UART_StopRingBuffer
 2578 002e 00BF     		.section	.text.Cy_SCB_UART_GetNumInRingBuffer,"ax",%progbits
 2579              		.align	2
 2580              		.global	Cy_SCB_UART_GetNumInRingBuffer
 2581              		.thumb
 2582              		.thumb_func
 2583              		.type	Cy_SCB_UART_GetNumInRingBuffer, %function
 2584              	Cy_SCB_UART_GetNumInRingBuffer:
 2585              	.LFB249:
 490:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 491:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 492:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 493:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_GetNumInRingBuffer
 494:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 495:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 496:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Returns the number of data elements in the ring buffer.
 497:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 498:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 499:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 500:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 501:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 502:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 503:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 504:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 505:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 506:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 507:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
 508:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The number of data elements in the receive ring buffer.
 509:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 510:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 511:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * One data element is used for internal use, so when the buffer is full,
 512:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * this function returns (Ring Buffer size - 1).
 513:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 514:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 515:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** uint32_t Cy_SCB_UART_GetNumInRingBuffer(CySCB_Type const *base, cy_stc_scb_uart_context_t const *co
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 114


 516:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2586              		.loc 3 516 0
 2587              		.cfi_startproc
 2588              		@ args = 0, pretend = 0, frame = 16
 2589              		@ frame_needed = 1, uses_anonymous_args = 0
 2590              		@ link register save eliminated.
 2591 0000 80B4     		push	{r7}
 2592              		.cfi_def_cfa_offset 4
 2593              		.cfi_offset 7, -4
 2594 0002 85B0     		sub	sp, sp, #20
 2595              		.cfi_def_cfa_offset 24
 2596 0004 00AF     		add	r7, sp, #0
 2597              		.cfi_def_cfa_register 7
 2598 0006 7860     		str	r0, [r7, #4]
 2599 0008 3960     		str	r1, [r7]
 517:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t size;
 518:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t locHead = context->rxRingBufHead;
 2600              		.loc 3 518 0
 2601 000a 3B68     		ldr	r3, [r7]
 2602 000c 1B69     		ldr	r3, [r3, #16]
 2603 000e BB60     		str	r3, [r7, #8]
 519:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 520:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Suppress a compiler warning about unused variables */
 521:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     (void) base;
 522:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 523:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (locHead >= context->rxRingBufTail)
 2604              		.loc 3 523 0
 2605 0010 3B68     		ldr	r3, [r7]
 2606 0012 5A69     		ldr	r2, [r3, #20]
 2607 0014 BB68     		ldr	r3, [r7, #8]
 2608 0016 9A42     		cmp	r2, r3
 2609 0018 05D8     		bhi	.L185
 524:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 525:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         size = (locHead - context->rxRingBufTail);
 2610              		.loc 3 525 0
 2611 001a 3B68     		ldr	r3, [r7]
 2612 001c 5B69     		ldr	r3, [r3, #20]
 2613 001e BA68     		ldr	r2, [r7, #8]
 2614 0020 D31A     		subs	r3, r2, r3
 2615 0022 FB60     		str	r3, [r7, #12]
 2616 0024 07E0     		b	.L186
 2617              	.L185:
 526:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
 527:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     else
 528:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 529:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         size = (locHead + (context->rxBufSize - context->rxRingBufTail));
 2618              		.loc 3 529 0
 2619 0026 3B68     		ldr	r3, [r7]
 2620 0028 DA69     		ldr	r2, [r3, #28]
 2621 002a 3B68     		ldr	r3, [r7]
 2622 002c 5B69     		ldr	r3, [r3, #20]
 2623 002e D21A     		subs	r2, r2, r3
 2624 0030 BB68     		ldr	r3, [r7, #8]
 2625 0032 1344     		add	r3, r3, r2
 2626 0034 FB60     		str	r3, [r7, #12]
 2627              	.L186:
 530:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 115


 531:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 532:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return (size);
 2628              		.loc 3 532 0
 2629 0036 FB68     		ldr	r3, [r7, #12]
 533:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2630              		.loc 3 533 0
 2631 0038 1846     		mov	r0, r3
 2632 003a 1437     		adds	r7, r7, #20
 2633              		.cfi_def_cfa_offset 4
 2634 003c BD46     		mov	sp, r7
 2635              		.cfi_def_cfa_register 13
 2636              		@ sp needed
 2637 003e 5DF8047B 		ldr	r7, [sp], #4
 2638              		.cfi_restore 7
 2639              		.cfi_def_cfa_offset 0
 2640 0042 7047     		bx	lr
 2641              		.cfi_endproc
 2642              	.LFE249:
 2643              		.size	Cy_SCB_UART_GetNumInRingBuffer, .-Cy_SCB_UART_GetNumInRingBuffer
 2644              		.section	.text.Cy_SCB_UART_ClearRingBuffer,"ax",%progbits
 2645              		.align	2
 2646              		.global	Cy_SCB_UART_ClearRingBuffer
 2647              		.thumb
 2648              		.thumb_func
 2649              		.type	Cy_SCB_UART_ClearRingBuffer, %function
 2650              	Cy_SCB_UART_ClearRingBuffer:
 2651              	.LFB250:
 534:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 535:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 536:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 537:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_ClearRingBuffer
 538:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 539:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 540:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Clears the ring buffer.
 541:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 542:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 543:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 544:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 545:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 546:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 547:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 548:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 549:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 550:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 551:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 552:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_ClearRingBuffer(CySCB_Type const *base, cy_stc_scb_uart_context_t *context)
 553:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2652              		.loc 3 553 0
 2653              		.cfi_startproc
 2654              		@ args = 0, pretend = 0, frame = 8
 2655              		@ frame_needed = 1, uses_anonymous_args = 0
 2656              		@ link register save eliminated.
 2657 0000 80B4     		push	{r7}
 2658              		.cfi_def_cfa_offset 4
 2659              		.cfi_offset 7, -4
 2660 0002 83B0     		sub	sp, sp, #12
 2661              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 116


 2662 0004 00AF     		add	r7, sp, #0
 2663              		.cfi_def_cfa_register 7
 2664 0006 7860     		str	r0, [r7, #4]
 2665 0008 3960     		str	r1, [r7]
 554:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Suppress a compiler warning about unused variables */
 555:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     (void) base;
 556:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 557:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxRingBufHead = context->rxRingBufTail;
 2666              		.loc 3 557 0
 2667 000a 3B68     		ldr	r3, [r7]
 2668 000c 5A69     		ldr	r2, [r3, #20]
 2669 000e 3B68     		ldr	r3, [r7]
 2670 0010 1A61     		str	r2, [r3, #16]
 558:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2671              		.loc 3 558 0
 2672 0012 00BF     		nop
 2673 0014 0C37     		adds	r7, r7, #12
 2674              		.cfi_def_cfa_offset 4
 2675 0016 BD46     		mov	sp, r7
 2676              		.cfi_def_cfa_register 13
 2677              		@ sp needed
 2678 0018 5DF8047B 		ldr	r7, [sp], #4
 2679              		.cfi_restore 7
 2680              		.cfi_def_cfa_offset 0
 2681 001c 7047     		bx	lr
 2682              		.cfi_endproc
 2683              	.LFE250:
 2684              		.size	Cy_SCB_UART_ClearRingBuffer, .-Cy_SCB_UART_ClearRingBuffer
 2685 001e 00BF     		.section	.text.Cy_SCB_UART_Receive,"ax",%progbits
 2686              		.align	2
 2687              		.global	Cy_SCB_UART_Receive
 2688              		.thumb
 2689              		.thumb_func
 2690              		.type	Cy_SCB_UART_Receive, %function
 2691              	Cy_SCB_UART_Receive:
 2692              	.LFB251:
 559:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 560:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 561:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 562:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_Receive
 563:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 564:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 565:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This function starts a UART receive operation.
 566:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * It configures the receive interrupt sources to get data available in the
 567:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * receive FIFO and returns. The \ref Cy_SCB_UART_Interrupt manages the further
 568:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * data transfer.
 569:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 570:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * If the ring buffer is enabled, this function first reads data from the ring
 571:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * buffer. If there is more data to receive, it configures the receive interrupt
 572:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * sources to copy the remaining bytes from the RX FIFO when they arrive.
 573:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 574:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * When the receive operation is completed (requested number of data elements
 575:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * received) the \ref CY_SCB_UART_RECEIVE_ACTIVE status is cleared and
 576:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * the \ref CY_SCB_UART_RECEIVE_DONE_EVENT event is generated.
 577:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 578:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 579:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 117


 580:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 581:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param buffer
 582:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Pointer to buffer to store received data.
 583:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The element size is defined by the data type, which depends on the configured
 584:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * data width.
 585:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 586:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param size
 587:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The number of data elements to receive.
 588:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 589:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 590:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 591:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 592:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 593:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 594:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 595:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
 596:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref cy_en_scb_uart_status_t
 597:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 598:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 599:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * The buffer must not be modified and stay allocated until end of the
 600:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   receive operation.
 601:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * This function overrides the RX interrupt sources and changes the
 602:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   RX FIFO level.
 603:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 604:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 605:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** cy_en_scb_uart_status_t Cy_SCB_UART_Receive(CySCB_Type *base, void *buffer, uint32_t size, cy_stc_s
 606:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 2693              		.loc 3 606 0
 2694              		.cfi_startproc
 2695              		@ args = 0, pretend = 0, frame = 56
 2696              		@ frame_needed = 1, uses_anonymous_args = 0
 2697 0000 80B5     		push	{r7, lr}
 2698              		.cfi_def_cfa_offset 8
 2699              		.cfi_offset 7, -8
 2700              		.cfi_offset 14, -4
 2701 0002 8EB0     		sub	sp, sp, #56
 2702              		.cfi_def_cfa_offset 64
 2703 0004 00AF     		add	r7, sp, #0
 2704              		.cfi_def_cfa_register 7
 2705 0006 F860     		str	r0, [r7, #12]
 2706 0008 B960     		str	r1, [r7, #8]
 2707 000a 7A60     		str	r2, [r7, #4]
 2708 000c 3B60     		str	r3, [r7]
 607:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(NULL != context);
 2709              		.loc 3 607 0
 2710 000e 3B68     		ldr	r3, [r7]
 2711 0010 002B     		cmp	r3, #0
 2712 0012 04D1     		bne	.L190
 2713              		.loc 3 607 0 is_stmt 0 discriminator 1
 2714 0014 40F25F21 		movw	r1, #607
 2715 0018 6848     		ldr	r0, .L210
 2716 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2717              	.L190:
 608:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(CY_SCB_UART_INIT_KEY == context->initKey);
 2718              		.loc 3 608 0 is_stmt 1
 2719 001e 3B68     		ldr	r3, [r7]
 2720 0020 5B6B     		ldr	r3, [r3, #52]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 118


 2721 0022 674A     		ldr	r2, .L210+4
 2722 0024 9342     		cmp	r3, r2
 2723 0026 04D0     		beq	.L191
 2724              		.loc 3 608 0 is_stmt 0 discriminator 1
 2725 0028 4FF41871 		mov	r1, #608
 2726 002c 6348     		ldr	r0, .L210
 2727 002e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2728              	.L191:
 609:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
 2729              		.loc 3 609 0 is_stmt 1
 2730 0032 BB68     		ldr	r3, [r7, #8]
 2731 0034 002B     		cmp	r3, #0
 2732 0036 02D0     		beq	.L192
 2733              		.loc 3 609 0 is_stmt 0 discriminator 2
 2734 0038 7B68     		ldr	r3, [r7, #4]
 2735 003a 002B     		cmp	r3, #0
 2736 003c 04D1     		bne	.L193
 2737              	.L192:
 2738              		.loc 3 609 0 discriminator 3
 2739 003e 40F26121 		movw	r1, #609
 2740 0042 5E48     		ldr	r0, .L210
 2741 0044 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 2742              	.L193:
 610:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 611:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     cy_en_scb_uart_status_t retStatus = CY_SCB_UART_RECEIVE_BUSY;
 2743              		.loc 3 611 0 is_stmt 1
 2744 0048 5E4B     		ldr	r3, .L210+8
 2745 004a 7B63     		str	r3, [r7, #52]
 612:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 613:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* check whether there are no active transfer requests */
 614:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (0UL == (context->rxStatus & CY_SCB_UART_RECEIVE_ACTIVE))
 2746              		.loc 3 614 0
 2747 004c 3B68     		ldr	r3, [r7]
 2748 004e 5B68     		ldr	r3, [r3, #4]
 2749 0050 03F00103 		and	r3, r3, #1
 2750 0054 002B     		cmp	r3, #0
 2751 0056 40F0AB80 		bne	.L194
 2752              	.LBB3:
 615:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 616:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint8_t  *tmpBuf = (uint8_t *) buffer;
 2753              		.loc 3 616 0
 2754 005a BB68     		ldr	r3, [r7, #8]
 2755 005c 3B63     		str	r3, [r7, #48]
 617:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint32_t numToCopy = 0UL;
 2756              		.loc 3 617 0
 2757 005e 0023     		movs	r3, #0
 2758 0060 FB62     		str	r3, [r7, #44]
 618:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 619:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Disable the RX interrupt source to stop the ring buffer update */
 620:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_SetRxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 2759              		.loc 3 620 0
 2760 0062 0021     		movs	r1, #0
 2761 0064 F868     		ldr	r0, [r7, #12]
 2762 0066 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 621:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 622:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (NULL != context->rxRingBuf)
 2763              		.loc 3 622 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 119


 2764 006a 3B68     		ldr	r3, [r7]
 2765 006c 9B68     		ldr	r3, [r3, #8]
 2766 006e 002B     		cmp	r3, #0
 2767 0070 75D0     		beq	.L195
 623:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
 624:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Get the items available in the ring buffer */
 625:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             numToCopy = Cy_SCB_UART_GetNumInRingBuffer(base, context);
 2768              		.loc 3 625 0
 2769 0072 3968     		ldr	r1, [r7]
 2770 0074 F868     		ldr	r0, [r7, #12]
 2771 0076 FFF7FEFF 		bl	Cy_SCB_UART_GetNumInRingBuffer
 2772 007a F862     		str	r0, [r7, #44]
 626:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 627:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             if (numToCopy > 0UL)
 2773              		.loc 3 627 0
 2774 007c FB6A     		ldr	r3, [r7, #44]
 2775 007e 002B     		cmp	r3, #0
 2776 0080 6DD0     		beq	.L195
 2777              	.LBB4:
 628:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
 629:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 uint32_t idx;
 630:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 uint32_t locTail = context->rxRingBufTail;
 2778              		.loc 3 630 0
 2779 0082 3B68     		ldr	r3, [r7]
 2780 0084 5B69     		ldr	r3, [r3, #20]
 2781 0086 7B62     		str	r3, [r7, #36]
 631:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 bool     byteMode = Cy_SCB_IsRxDataWidthByte(base);
 2782              		.loc 3 631 0
 2783 0088 F868     		ldr	r0, [r7, #12]
 2784 008a FFF7FEFF 		bl	Cy_SCB_IsRxDataWidthByte
 2785 008e 0346     		mov	r3, r0
 2786 0090 87F82330 		strb	r3, [r7, #35]
 632:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 633:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 /* Adjust the number of items to be read */
 634:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 if (numToCopy > size)
 2787              		.loc 3 634 0
 2788 0094 FA6A     		ldr	r2, [r7, #44]
 2789 0096 7B68     		ldr	r3, [r7, #4]
 2790 0098 9A42     		cmp	r2, r3
 2791 009a 01D9     		bls	.L196
 635:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 {
 636:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     numToCopy = size;
 2792              		.loc 3 636 0
 2793 009c 7B68     		ldr	r3, [r7, #4]
 2794 009e FB62     		str	r3, [r7, #44]
 2795              	.L196:
 637:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 }
 638:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 639:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 /* Copy the data elements from the ring buffer */
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 for (idx = 0UL; idx < numToCopy; ++idx)
 2796              		.loc 3 640 0
 2797 00a0 0023     		movs	r3, #0
 2798 00a2 BB62     		str	r3, [r7, #40]
 2799 00a4 29E0     		b	.L197
 2800              	.L201:
 641:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 {
 642:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     ++locTail;
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 120


 2801              		.loc 3 642 0
 2802 00a6 7B6A     		ldr	r3, [r7, #36]
 2803 00a8 0133     		adds	r3, r3, #1
 2804 00aa 7B62     		str	r3, [r7, #36]
 643:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 644:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     if (locTail == context->rxRingBufSize)
 2805              		.loc 3 644 0
 2806 00ac 3B68     		ldr	r3, [r7]
 2807 00ae DA68     		ldr	r2, [r3, #12]
 2808 00b0 7B6A     		ldr	r3, [r7, #36]
 2809 00b2 9A42     		cmp	r2, r3
 2810 00b4 01D1     		bne	.L198
 645:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     {
 646:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         locTail = 0UL;
 2811              		.loc 3 646 0
 2812 00b6 0023     		movs	r3, #0
 2813 00b8 7B62     		str	r3, [r7, #36]
 2814              	.L198:
 647:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     }
 648:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 649:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     if (byteMode)
 2815              		.loc 3 649 0
 2816 00ba 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2817 00be 002B     		cmp	r3, #0
 2818 00c0 0BD0     		beq	.L199
 2819              	.LBB5:
 650:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     {
 651:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         uint8_t *buf = (uint8_t *) buffer;
 2820              		.loc 3 651 0
 2821 00c2 BB68     		ldr	r3, [r7, #8]
 2822 00c4 FB61     		str	r3, [r7, #28]
 652:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         buf[idx] = ((uint8_t *) context->rxRingBuf)[locTail];
 2823              		.loc 3 652 0
 2824 00c6 FA69     		ldr	r2, [r7, #28]
 2825 00c8 BB6A     		ldr	r3, [r7, #40]
 2826 00ca 1344     		add	r3, r3, r2
 2827 00cc 3A68     		ldr	r2, [r7]
 2828 00ce 9168     		ldr	r1, [r2, #8]
 2829 00d0 7A6A     		ldr	r2, [r7, #36]
 2830 00d2 0A44     		add	r2, r2, r1
 2831 00d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2832 00d6 1A70     		strb	r2, [r3]
 2833              	.LBE5:
 2834 00d8 0CE0     		b	.L200
 2835              	.L199:
 2836              	.LBB6:
 653:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     }
 654:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     else
 655:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     {
 656:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         uint16_t *buf = (uint16_t *) buffer;
 2837              		.loc 3 656 0
 2838 00da BB68     		ldr	r3, [r7, #8]
 2839 00dc BB61     		str	r3, [r7, #24]
 657:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         buf[idx] = ((uint16_t *) context->rxRingBuf)[locTail];
 2840              		.loc 3 657 0
 2841 00de BB6A     		ldr	r3, [r7, #40]
 2842 00e0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 121


 2843 00e2 BA69     		ldr	r2, [r7, #24]
 2844 00e4 1344     		add	r3, r3, r2
 2845 00e6 3A68     		ldr	r2, [r7]
 2846 00e8 9168     		ldr	r1, [r2, #8]
 2847 00ea 7A6A     		ldr	r2, [r7, #36]
 2848 00ec 5200     		lsls	r2, r2, #1
 2849 00ee 0A44     		add	r2, r2, r1
 2850 00f0 1288     		ldrh	r2, [r2]
 2851 00f2 1A80     		strh	r2, [r3]	@ movhi
 2852              	.L200:
 2853              	.LBE6:
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 {
 2854              		.loc 3 640 0 discriminator 2
 2855 00f4 BB6A     		ldr	r3, [r7, #40]
 2856 00f6 0133     		adds	r3, r3, #1
 2857 00f8 BB62     		str	r3, [r7, #40]
 2858              	.L197:
 640:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 {
 2859              		.loc 3 640 0 is_stmt 0 discriminator 1
 2860 00fa BA6A     		ldr	r2, [r7, #40]
 2861 00fc FB6A     		ldr	r3, [r7, #44]
 2862 00fe 9A42     		cmp	r2, r3
 2863 0100 D1D3     		bcc	.L201
 658:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     }
 659:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 }
 660:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 661:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 /* Update the ring buffer tail after data has been copied */
 662:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 context->rxRingBufTail = locTail;
 2864              		.loc 3 662 0 is_stmt 1
 2865 0102 3B68     		ldr	r3, [r7]
 2866 0104 7A6A     		ldr	r2, [r7, #36]
 2867 0106 5A61     		str	r2, [r3, #20]
 663:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 664:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 /* Update with the copied bytes */
 665:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 size -= numToCopy;
 2868              		.loc 3 665 0
 2869 0108 7A68     		ldr	r2, [r7, #4]
 2870 010a FB6A     		ldr	r3, [r7, #44]
 2871 010c D31A     		subs	r3, r2, r3
 2872 010e 7B60     		str	r3, [r7, #4]
 666:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 context->rxBufIdx = numToCopy;
 2873              		.loc 3 666 0
 2874 0110 3B68     		ldr	r3, [r7]
 2875 0112 FA6A     		ldr	r2, [r7, #44]
 2876 0114 1A62     		str	r2, [r3, #32]
 667:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 668:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 /* Check whether all requested data has been read from the ring buffer */
 669:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 if (0UL == size)
 2877              		.loc 3 669 0
 2878 0116 7B68     		ldr	r3, [r7, #4]
 2879 0118 002B     		cmp	r3, #0
 2880 011a 15D1     		bne	.L202
 670:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 {
 671:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     /* Enable the RX-error interrupt sources to update the error status */
 672:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     Cy_SCB_SetRxInterruptMask(base, CY_SCB_UART_RECEIVE_ERR);
 2881              		.loc 3 672 0
 2882 011c 4FF44871 		mov	r1, #800
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 122


 2883 0120 F868     		ldr	r0, [r7, #12]
 2884 0122 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 673:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 674:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     /* Call a completion callback if there was no abort receive called
 675:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     * in the interrupt. The abort clears the number of the received bytes.
 676:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     */
 677:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     if (context->rxBufIdx > 0UL)
 2885              		.loc 3 677 0
 2886 0126 3B68     		ldr	r3, [r7]
 2887 0128 1B6A     		ldr	r3, [r3, #32]
 2888 012a 002B     		cmp	r3, #0
 2889 012c 07D0     		beq	.L203
 678:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     {
 679:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         if (NULL != context->cbEvents)
 2890              		.loc 3 679 0
 2891 012e 3B68     		ldr	r3, [r7]
 2892 0130 1B6B     		ldr	r3, [r3, #48]
 2893 0132 002B     		cmp	r3, #0
 2894 0134 03D0     		beq	.L203
 680:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         {
 681:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                             context->cbEvents(CY_SCB_UART_RECEIVE_DONE_EVENT);
 2895              		.loc 3 681 0
 2896 0136 3B68     		ldr	r3, [r7]
 2897 0138 1B6B     		ldr	r3, [r3, #48]
 2898 013a 0420     		movs	r0, #4
 2899 013c 9847     		blx	r3
 2900              	.L203:
 682:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                         }
 683:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     }
 684:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 685:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     /* Continue receiving data in the ring buffer */
 686:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     Cy_SCB_SetRxInterruptMask(base, CY_SCB_RX_INTR_LEVEL);
 2901              		.loc 3 686 0
 2902 013e 0121     		movs	r1, #1
 2903 0140 F868     		ldr	r0, [r7, #12]
 2904 0142 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 2905 0146 0AE0     		b	.L195
 2906              	.L202:
 687:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 }
 688:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 else
 689:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 {
 690:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     tmpBuf = &tmpBuf[(byteMode) ? (numToCopy) : (2UL * numToCopy)];
 2907              		.loc 3 690 0
 2908 0148 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2909 014c 002B     		cmp	r3, #0
 2910 014e 01D0     		beq	.L204
 2911              		.loc 3 690 0 is_stmt 0 discriminator 1
 2912 0150 FB6A     		ldr	r3, [r7, #44]
 2913 0152 01E0     		b	.L205
 2914              	.L204:
 2915              		.loc 3 690 0 discriminator 2
 2916 0154 FB6A     		ldr	r3, [r7, #44]
 2917 0156 5B00     		lsls	r3, r3, #1
 2918              	.L205:
 2919              		.loc 3 690 0 discriminator 4
 2920 0158 3A6B     		ldr	r2, [r7, #48]
 2921 015a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 123


 2922 015c 3B63     		str	r3, [r7, #48]
 2923              	.L195:
 2924              	.LBE4:
 691:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 }
 692:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
 693:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
 694:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 695:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Set up a direct RX FIFO receive */
 696:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (size > 0UL)
 2925              		.loc 3 696 0 is_stmt 1
 2926 015e 7B68     		ldr	r3, [r7, #4]
 2927 0160 002B     		cmp	r3, #0
 2928 0162 23D0     		beq	.L206
 2929              	.LBB7:
 697:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
 698:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             uint32_t halfFifoSize = Cy_SCB_GetFifoSize(base) / 2UL;
 2930              		.loc 3 698 0
 2931 0164 F868     		ldr	r0, [r7, #12]
 2932 0166 FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 2933 016a 0346     		mov	r3, r0
 2934 016c 5B08     		lsrs	r3, r3, #1
 2935 016e 7B61     		str	r3, [r7, #20]
 699:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 700:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Set up context */
 701:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->rxStatus  = CY_SCB_UART_RECEIVE_ACTIVE;
 2936              		.loc 3 701 0
 2937 0170 3B68     		ldr	r3, [r7]
 2938 0172 0122     		movs	r2, #1
 2939 0174 5A60     		str	r2, [r3, #4]
 702:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 703:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->rxBuf     = (void *) tmpBuf;
 2940              		.loc 3 703 0
 2941 0176 3B68     		ldr	r3, [r7]
 2942 0178 3A6B     		ldr	r2, [r7, #48]
 2943 017a 9A61     		str	r2, [r3, #24]
 704:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->rxBufSize = size;
 2944              		.loc 3 704 0
 2945 017c 3B68     		ldr	r3, [r7]
 2946 017e 7A68     		ldr	r2, [r7, #4]
 2947 0180 DA61     		str	r2, [r3, #28]
 705:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->rxBufIdx =  numToCopy;
 2948              		.loc 3 705 0
 2949 0182 3B68     		ldr	r3, [r7]
 2950 0184 FA6A     		ldr	r2, [r7, #44]
 2951 0186 1A62     		str	r2, [r3, #32]
 706:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 707:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Set the RX FIFO level to the trigger interrupt */
 708:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetRxFifoLevel(base, (size > halfFifoSize) ? (halfFifoSize - 1UL) : (size - 1UL)
 2952              		.loc 3 708 0
 2953 0188 7A68     		ldr	r2, [r7, #4]
 2954 018a 7B69     		ldr	r3, [r7, #20]
 2955 018c 9A42     		cmp	r2, r3
 2956 018e 02D9     		bls	.L207
 2957              		.loc 3 708 0 is_stmt 0 discriminator 1
 2958 0190 7B69     		ldr	r3, [r7, #20]
 2959 0192 013B     		subs	r3, r3, #1
 2960 0194 01E0     		b	.L208
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 124


 2961              	.L207:
 2962              		.loc 3 708 0 discriminator 2
 2963 0196 7B68     		ldr	r3, [r7, #4]
 2964 0198 013B     		subs	r3, r3, #1
 2965              	.L208:
 2966              		.loc 3 708 0 discriminator 4
 2967 019a 1946     		mov	r1, r3
 2968 019c F868     		ldr	r0, [r7, #12]
 2969 019e FFF7FEFF 		bl	Cy_SCB_SetRxFifoLevel
 709:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 710:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Enable the RX interrupt sources to continue data reading */
 711:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetRxInterruptMask(base, CY_SCB_UART_RX_INTR);
 2970              		.loc 3 711 0 is_stmt 1 discriminator 4
 2971 01a2 40F62131 		movw	r1, #2849
 2972 01a6 F868     		ldr	r0, [r7, #12]
 2973 01a8 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 2974              	.L206:
 2975              	.LBE7:
 712:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
 713:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 714:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         retStatus = CY_SCB_UART_SUCCESS;
 2976              		.loc 3 714 0
 2977 01ac 0023     		movs	r3, #0
 2978 01ae 7B63     		str	r3, [r7, #52]
 2979              	.L194:
 2980              	.LBE3:
 715:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
 716:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 717:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return (retStatus);
 2981              		.loc 3 717 0
 2982 01b0 7B6B     		ldr	r3, [r7, #52]
 718:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 2983              		.loc 3 718 0
 2984 01b2 1846     		mov	r0, r3
 2985 01b4 3837     		adds	r7, r7, #56
 2986              		.cfi_def_cfa_offset 8
 2987 01b6 BD46     		mov	sp, r7
 2988              		.cfi_def_cfa_register 13
 2989              		@ sp needed
 2990 01b8 80BD     		pop	{r7, pc}
 2991              	.L211:
 2992 01ba 00BF     		.align	2
 2993              	.L210:
 2994 01bc 84000000 		.word	.LC2
 2995 01c0 EFCDAB00 		.word	11259375
 2996 01c4 0260AA00 		.word	11165698
 2997              		.cfi_endproc
 2998              	.LFE251:
 2999              		.size	Cy_SCB_UART_Receive, .-Cy_SCB_UART_Receive
 3000              		.section	.text.Cy_SCB_UART_AbortReceive,"ax",%progbits
 3001              		.align	2
 3002              		.global	Cy_SCB_UART_AbortReceive
 3003              		.thumb
 3004              		.thumb_func
 3005              		.type	Cy_SCB_UART_AbortReceive, %function
 3006              	Cy_SCB_UART_AbortReceive:
 3007              	.LFB252:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 125


 719:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 720:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 721:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 722:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_AbortReceive
 723:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 724:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 725:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Abort the current receive operation by clearing the receive status.
 726:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * If the ring buffer is disabled, the receive interrupt sources are disabled.
 727:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * If the ring buffer is enabled, the receive interrupt source is configured
 728:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   to get data from the receive FIFO and put it into the ring buffer.
 729:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 730:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 731:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 732:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 733:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 734:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 735:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 736:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 737:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 738:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 739:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 740:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * The RX FIFO and ring buffer are not cleared after abort of receive
 741:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   operation.
 742:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * If after the abort of the receive operation the transmitter continues
 743:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   sending data, it gets into the RX FIFO. To drop this data, the RX FIFO
 744:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   and ring buffer (if enabled) must be cleared when the transmitter
 745:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   stops sending data. Otherwise, received data will be kept and copied
 746:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   to the buffer when \ref Cy_SCB_UART_Receive is called.
 747:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 748:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_AbortReceive(CySCB_Type *base, cy_stc_scb_uart_context_t *context)
 750:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3008              		.loc 3 750 0
 3009              		.cfi_startproc
 3010              		@ args = 0, pretend = 0, frame = 8
 3011              		@ frame_needed = 1, uses_anonymous_args = 0
 3012 0000 80B5     		push	{r7, lr}
 3013              		.cfi_def_cfa_offset 8
 3014              		.cfi_offset 7, -8
 3015              		.cfi_offset 14, -4
 3016 0002 82B0     		sub	sp, sp, #8
 3017              		.cfi_def_cfa_offset 16
 3018 0004 00AF     		add	r7, sp, #0
 3019              		.cfi_def_cfa_register 7
 3020 0006 7860     		str	r0, [r7, #4]
 3021 0008 3960     		str	r1, [r7]
 751:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (NULL == context->rxRingBuf)
 3022              		.loc 3 751 0
 3023 000a 3B68     		ldr	r3, [r7]
 3024 000c 9B68     		ldr	r3, [r3, #8]
 3025 000e 002B     		cmp	r3, #0
 3026 0010 03D1     		bne	.L213
 752:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 753:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_SetRxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 3027              		.loc 3 753 0
 3028 0012 0021     		movs	r1, #0
 3029 0014 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 126


 3030 0016 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 3031              	.L213:
 754:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
 755:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 756:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxBufSize = 0UL;
 3032              		.loc 3 756 0
 3033 001a 3B68     		ldr	r3, [r7]
 3034 001c 0022     		movs	r2, #0
 3035 001e DA61     		str	r2, [r3, #28]
 757:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxBufIdx  = 0UL;
 3036              		.loc 3 757 0
 3037 0020 3B68     		ldr	r3, [r7]
 3038 0022 0022     		movs	r2, #0
 3039 0024 1A62     		str	r2, [r3, #32]
 758:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 759:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxStatus  = 0UL;
 3040              		.loc 3 759 0
 3041 0026 3B68     		ldr	r3, [r7]
 3042 0028 0022     		movs	r2, #0
 3043 002a 5A60     		str	r2, [r3, #4]
 760:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3044              		.loc 3 760 0
 3045 002c 00BF     		nop
 3046 002e 0837     		adds	r7, r7, #8
 3047              		.cfi_def_cfa_offset 8
 3048 0030 BD46     		mov	sp, r7
 3049              		.cfi_def_cfa_register 13
 3050              		@ sp needed
 3051 0032 80BD     		pop	{r7, pc}
 3052              		.cfi_endproc
 3053              	.LFE252:
 3054              		.size	Cy_SCB_UART_AbortReceive, .-Cy_SCB_UART_AbortReceive
 3055              		.section	.text.Cy_SCB_UART_GetNumReceived,"ax",%progbits
 3056              		.align	2
 3057              		.global	Cy_SCB_UART_GetNumReceived
 3058              		.thumb
 3059              		.thumb_func
 3060              		.type	Cy_SCB_UART_GetNumReceived, %function
 3061              	Cy_SCB_UART_GetNumReceived:
 3062              	.LFB253:
 761:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 762:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 763:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 764:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_GetNumReceived
 765:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 766:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 767:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Returns the number of data elements received since the last call to \ref
 768:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Cy_SCB_UART_Receive.
 769:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 770:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 771:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 772:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 773:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 774:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 775:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 776:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 777:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 127


 778:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 779:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
 780:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The number of data elements received.
 781:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 782:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 783:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** uint32_t Cy_SCB_UART_GetNumReceived(CySCB_Type const *base, cy_stc_scb_uart_context_t const *contex
 784:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3063              		.loc 3 784 0
 3064              		.cfi_startproc
 3065              		@ args = 0, pretend = 0, frame = 8
 3066              		@ frame_needed = 1, uses_anonymous_args = 0
 3067              		@ link register save eliminated.
 3068 0000 80B4     		push	{r7}
 3069              		.cfi_def_cfa_offset 4
 3070              		.cfi_offset 7, -4
 3071 0002 83B0     		sub	sp, sp, #12
 3072              		.cfi_def_cfa_offset 16
 3073 0004 00AF     		add	r7, sp, #0
 3074              		.cfi_def_cfa_register 7
 3075 0006 7860     		str	r0, [r7, #4]
 3076 0008 3960     		str	r1, [r7]
 785:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Suppress a compiler warning about unused variables */
 786:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     (void) base;
 787:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 788:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return (context->rxBufIdx);
 3077              		.loc 3 788 0
 3078 000a 3B68     		ldr	r3, [r7]
 3079 000c 1B6A     		ldr	r3, [r3, #32]
 789:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3080              		.loc 3 789 0
 3081 000e 1846     		mov	r0, r3
 3082 0010 0C37     		adds	r7, r7, #12
 3083              		.cfi_def_cfa_offset 4
 3084 0012 BD46     		mov	sp, r7
 3085              		.cfi_def_cfa_register 13
 3086              		@ sp needed
 3087 0014 5DF8047B 		ldr	r7, [sp], #4
 3088              		.cfi_restore 7
 3089              		.cfi_def_cfa_offset 0
 3090 0018 7047     		bx	lr
 3091              		.cfi_endproc
 3092              	.LFE253:
 3093              		.size	Cy_SCB_UART_GetNumReceived, .-Cy_SCB_UART_GetNumReceived
 3094 001a 00BF     		.section	.text.Cy_SCB_UART_GetReceiveStatus,"ax",%progbits
 3095              		.align	2
 3096              		.global	Cy_SCB_UART_GetReceiveStatus
 3097              		.thumb
 3098              		.thumb_func
 3099              		.type	Cy_SCB_UART_GetReceiveStatus, %function
 3100              	Cy_SCB_UART_GetReceiveStatus:
 3101              	.LFB254:
 790:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 791:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 792:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 793:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_GetReceiveStatus
 794:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 795:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 128


 796:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Returns the status of the receive operation.
 797:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This status is a bit mask and the value returned may have multiple bits set.
 798:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 799:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 800:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 801:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 802:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 803:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 804:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 805:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 806:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 807:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 808:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
 809:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref group_scb_uart_macros_receive_status.
 810:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 811:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 812:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The status is only cleared by calling \ref Cy_SCB_UART_Receive again.
 813:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 814:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 815:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** uint32_t Cy_SCB_UART_GetReceiveStatus(CySCB_Type const *base, cy_stc_scb_uart_context_t const *cont
 816:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3102              		.loc 3 816 0
 3103              		.cfi_startproc
 3104              		@ args = 0, pretend = 0, frame = 8
 3105              		@ frame_needed = 1, uses_anonymous_args = 0
 3106              		@ link register save eliminated.
 3107 0000 80B4     		push	{r7}
 3108              		.cfi_def_cfa_offset 4
 3109              		.cfi_offset 7, -4
 3110 0002 83B0     		sub	sp, sp, #12
 3111              		.cfi_def_cfa_offset 16
 3112 0004 00AF     		add	r7, sp, #0
 3113              		.cfi_def_cfa_register 7
 3114 0006 7860     		str	r0, [r7, #4]
 3115 0008 3960     		str	r1, [r7]
 817:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Suppress a compiler warning about unused variables */
 818:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     (void) base;
 819:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 820:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return (context->rxStatus);
 3116              		.loc 3 820 0
 3117 000a 3B68     		ldr	r3, [r7]
 3118 000c 5B68     		ldr	r3, [r3, #4]
 821:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3119              		.loc 3 821 0
 3120 000e 1846     		mov	r0, r3
 3121 0010 0C37     		adds	r7, r7, #12
 3122              		.cfi_def_cfa_offset 4
 3123 0012 BD46     		mov	sp, r7
 3124              		.cfi_def_cfa_register 13
 3125              		@ sp needed
 3126 0014 5DF8047B 		ldr	r7, [sp], #4
 3127              		.cfi_restore 7
 3128              		.cfi_def_cfa_offset 0
 3129 0018 7047     		bx	lr
 3130              		.cfi_endproc
 3131              	.LFE254:
 3132              		.size	Cy_SCB_UART_GetReceiveStatus, .-Cy_SCB_UART_GetReceiveStatus
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 129


 3133 001a 00BF     		.section	.text.Cy_SCB_UART_Transmit,"ax",%progbits
 3134              		.align	2
 3135              		.global	Cy_SCB_UART_Transmit
 3136              		.thumb
 3137              		.thumb_func
 3138              		.type	Cy_SCB_UART_Transmit, %function
 3139              	Cy_SCB_UART_Transmit:
 3140              	.LFB255:
 822:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 823:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 824:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 825:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_Transmit
 826:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 827:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 828:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This function starts a UART transmit operation.
 829:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * It configures the transmit interrupt sources and returns.
 830:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The \ref Cy_SCB_UART_Interrupt manages the further data transfer.
 831:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 832:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * When the transmit operation is completed (requested number of data elements
 833:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * sent on the bus), the \ref CY_SCB_UART_TRANSMIT_ACTIVE status is cleared and
 834:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * the \ref CY_SCB_UART_TRANSMIT_DONE_EVENT event is generated.
 835:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 836:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 837:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 838:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 839:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param buffer
 840:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Pointer to user data to place in transmit buffer.
 841:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The element size is defined by the data type, which depends on the configured
 842:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * data width.
 843:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 844:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param size
 845:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The number of data elements to transmit.
 846:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 847:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 848:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 849:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 850:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 851:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 852:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 853:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
 854:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref cy_en_scb_uart_status_t
 855:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 856:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 857:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * The buffer must not be modified and must stay allocated until its content is
 858:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   copied into the TX FIFO.
 859:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * * This function overrides the TX FIFO interrupt sources and changes the
 860:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *   TX FIFO level.
 861:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 862:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 863:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** cy_en_scb_uart_status_t Cy_SCB_UART_Transmit(CySCB_Type *base, void *buffer, uint32_t size, cy_stc_
 864:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3141              		.loc 3 864 0
 3142              		.cfi_startproc
 3143              		@ args = 0, pretend = 0, frame = 24
 3144              		@ frame_needed = 1, uses_anonymous_args = 0
 3145 0000 80B5     		push	{r7, lr}
 3146              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 130


 3147              		.cfi_offset 7, -8
 3148              		.cfi_offset 14, -4
 3149 0002 86B0     		sub	sp, sp, #24
 3150              		.cfi_def_cfa_offset 32
 3151 0004 00AF     		add	r7, sp, #0
 3152              		.cfi_def_cfa_register 7
 3153 0006 F860     		str	r0, [r7, #12]
 3154 0008 B960     		str	r1, [r7, #8]
 3155 000a 7A60     		str	r2, [r7, #4]
 3156 000c 3B60     		str	r3, [r7]
 865:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(NULL != context);
 3157              		.loc 3 865 0
 3158 000e 3B68     		ldr	r3, [r7]
 3159 0010 002B     		cmp	r3, #0
 3160 0012 04D1     		bne	.L219
 3161              		.loc 3 865 0 is_stmt 0 discriminator 1
 3162 0014 40F26131 		movw	r1, #865
 3163 0018 2448     		ldr	r0, .L227
 3164 001a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 3165              	.L219:
 866:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(CY_SCB_UART_INIT_KEY == context->initKey);
 3166              		.loc 3 866 0 is_stmt 1
 3167 001e 3B68     		ldr	r3, [r7]
 3168 0020 5B6B     		ldr	r3, [r3, #52]
 3169 0022 234A     		ldr	r2, .L227+4
 3170 0024 9342     		cmp	r3, r2
 3171 0026 04D0     		beq	.L220
 3172              		.loc 3 866 0 is_stmt 0 discriminator 1
 3173 0028 40F26231 		movw	r1, #866
 3174 002c 1F48     		ldr	r0, .L227
 3175 002e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 3176              	.L220:
 867:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L1(CY_SCB_IS_BUFFER_VALID(buffer, size));
 3177              		.loc 3 867 0 is_stmt 1
 3178 0032 BB68     		ldr	r3, [r7, #8]
 3179 0034 002B     		cmp	r3, #0
 3180 0036 02D0     		beq	.L221
 3181              		.loc 3 867 0 is_stmt 0 discriminator 2
 3182 0038 7B68     		ldr	r3, [r7, #4]
 3183 003a 002B     		cmp	r3, #0
 3184 003c 04D1     		bne	.L222
 3185              	.L221:
 3186              		.loc 3 867 0 discriminator 3
 3187 003e 40F26331 		movw	r1, #867
 3188 0042 1A48     		ldr	r0, .L227
 3189 0044 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 3190              	.L222:
 868:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 869:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     cy_en_scb_uart_status_t retStatus = CY_SCB_UART_TRANSMIT_BUSY;
 3191              		.loc 3 869 0 is_stmt 1
 3192 0048 1A4B     		ldr	r3, .L227+8
 3193 004a 7B61     		str	r3, [r7, #20]
 870:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 871:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Check whether there are no active transfer requests */
 872:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (0UL == (CY_SCB_UART_TRANSMIT_ACTIVE & context->txStatus))
 3194              		.loc 3 872 0
 3195 004c 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 131


 3196 004e 1B68     		ldr	r3, [r3]
 3197 0050 03F00103 		and	r3, r3, #1
 3198 0054 002B     		cmp	r3, #0
 3199 0056 24D1     		bne	.L223
 873:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 874:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Set up context */
 875:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txStatus  = CY_SCB_UART_TRANSMIT_ACTIVE;
 3200              		.loc 3 875 0
 3201 0058 3B68     		ldr	r3, [r7]
 3202 005a 0122     		movs	r2, #1
 3203 005c 1A60     		str	r2, [r3]
 876:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 877:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txBuf     = buffer;
 3204              		.loc 3 877 0
 3205 005e 3B68     		ldr	r3, [r7]
 3206 0060 BA68     		ldr	r2, [r7, #8]
 3207 0062 5A62     		str	r2, [r3, #36]
 878:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txBufSize = size;
 3208              		.loc 3 878 0
 3209 0064 3B68     		ldr	r3, [r7]
 3210 0066 7A68     		ldr	r2, [r7, #4]
 3211 0068 9A62     		str	r2, [r3, #40]
 879:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 880:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Set the level in TX FIFO to start a transfer */
 881:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_SetTxFifoLevel(base, (Cy_SCB_GetFifoSize(base) / 2UL));
 3212              		.loc 3 881 0
 3213 006a F868     		ldr	r0, [r7, #12]
 3214 006c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 3215 0070 0346     		mov	r3, r0
 3216 0072 5B08     		lsrs	r3, r3, #1
 3217 0074 1946     		mov	r1, r3
 3218 0076 F868     		ldr	r0, [r7, #12]
 3219 0078 FFF7FEFF 		bl	Cy_SCB_SetTxFifoLevel
 882:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 883:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Enable the interrupt sources */
 884:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (((uint32_t) CY_SCB_UART_SMARTCARD) == _FLD2VAL(SCB_UART_CTRL_MODE, SCB_UART_CTRL(base))
 3220              		.loc 3 884 0
 3221 007c FB68     		ldr	r3, [r7, #12]
 3222 007e 1B6C     		ldr	r3, [r3, #64]
 3223 0080 03F04073 		and	r3, r3, #50331648
 3224 0084 1B0E     		lsrs	r3, r3, #24
 3225 0086 012B     		cmp	r3, #1
 3226 0088 05D1     		bne	.L224
 885:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
 886:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Transfer data into TX FIFO and track SmartCard-specific errors */
 887:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetTxInterruptMask(base, CY_SCB_UART_TX_INTR);
 3227              		.loc 3 887 0
 3228 008a 40F20151 		movw	r1, #1281
 3229 008e F868     		ldr	r0, [r7, #12]
 3230 0090 FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
 3231 0094 03E0     		b	.L225
 3232              	.L224:
 888:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
 889:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         else
 890:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
 891:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Transfer data into TX FIFO */
 892:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetTxInterruptMask(base, CY_SCB_TX_INTR_LEVEL);
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 132


 3233              		.loc 3 892 0
 3234 0096 0121     		movs	r1, #1
 3235 0098 F868     		ldr	r0, [r7, #12]
 3236 009a FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
 3237              	.L225:
 893:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
 894:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 895:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         retStatus = CY_SCB_UART_SUCCESS;
 3238              		.loc 3 895 0
 3239 009e 0023     		movs	r3, #0
 3240 00a0 7B61     		str	r3, [r7, #20]
 3241              	.L223:
 896:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
 897:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 898:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return (retStatus);
 3242              		.loc 3 898 0
 3243 00a2 7B69     		ldr	r3, [r7, #20]
 899:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3244              		.loc 3 899 0
 3245 00a4 1846     		mov	r0, r3
 3246 00a6 1837     		adds	r7, r7, #24
 3247              		.cfi_def_cfa_offset 8
 3248 00a8 BD46     		mov	sp, r7
 3249              		.cfi_def_cfa_register 13
 3250              		@ sp needed
 3251 00aa 80BD     		pop	{r7, pc}
 3252              	.L228:
 3253              		.align	2
 3254              	.L227:
 3255 00ac 84000000 		.word	.LC2
 3256 00b0 EFCDAB00 		.word	11259375
 3257 00b4 0360AA00 		.word	11165699
 3258              		.cfi_endproc
 3259              	.LFE255:
 3260              		.size	Cy_SCB_UART_Transmit, .-Cy_SCB_UART_Transmit
 3261              		.section	.text.Cy_SCB_UART_AbortTransmit,"ax",%progbits
 3262              		.align	2
 3263              		.global	Cy_SCB_UART_AbortTransmit
 3264              		.thumb
 3265              		.thumb_func
 3266              		.type	Cy_SCB_UART_AbortTransmit, %function
 3267              	Cy_SCB_UART_AbortTransmit:
 3268              	.LFB256:
 900:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 901:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 902:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 903:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_AbortTransmit
 904:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 905:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 906:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Aborts the current transmit operation.
 907:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * It disables the transmit interrupt sources and clears the transmit FIFO
 908:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * and status.
 909:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 910:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 911:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 912:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 913:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 133


 914:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 915:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 916:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 917:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 918:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 919:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \sideeffect
 920:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The transmit FIFO clear operation also clears the shift register, so that
 921:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * the shifter can be cleared in the middle of a data element transfer,
 922:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * corrupting it. The data element corruption means that all bits that have
 923:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * not been transmitted are transmitted as "ones" on the bus.
 924:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 925:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 926:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_AbortTransmit(CySCB_Type *base, cy_stc_scb_uart_context_t *context)
 927:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3269              		.loc 3 927 0
 3270              		.cfi_startproc
 3271              		@ args = 0, pretend = 0, frame = 8
 3272              		@ frame_needed = 1, uses_anonymous_args = 0
 3273 0000 80B5     		push	{r7, lr}
 3274              		.cfi_def_cfa_offset 8
 3275              		.cfi_offset 7, -8
 3276              		.cfi_offset 14, -4
 3277 0002 82B0     		sub	sp, sp, #8
 3278              		.cfi_def_cfa_offset 16
 3279 0004 00AF     		add	r7, sp, #0
 3280              		.cfi_def_cfa_register 7
 3281 0006 7860     		str	r0, [r7, #4]
 3282 0008 3960     		str	r1, [r7]
 928:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_SetTxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 3283              		.loc 3 928 0
 3284 000a 0021     		movs	r1, #0
 3285 000c 7868     		ldr	r0, [r7, #4]
 3286 000e FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
 929:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 930:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_UART_ClearTxFifo(base);
 3287              		.loc 3 930 0
 3288 0012 7868     		ldr	r0, [r7, #4]
 3289 0014 FFF7FEFF 		bl	Cy_SCB_UART_ClearTxFifo
 931:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 932:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->txBufSize = 0UL;
 3290              		.loc 3 932 0
 3291 0018 3B68     		ldr	r3, [r7]
 3292 001a 0022     		movs	r2, #0
 3293 001c 9A62     		str	r2, [r3, #40]
 933:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->txLeftToTransmit = 0UL;
 3294              		.loc 3 933 0
 3295 001e 3B68     		ldr	r3, [r7]
 3296 0020 0022     		movs	r2, #0
 3297 0022 DA62     		str	r2, [r3, #44]
 934:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 935:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->txStatus  = 0UL;
 3298              		.loc 3 935 0
 3299 0024 3B68     		ldr	r3, [r7]
 3300 0026 0022     		movs	r2, #0
 3301 0028 1A60     		str	r2, [r3]
 936:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3302              		.loc 3 936 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 134


 3303 002a 00BF     		nop
 3304 002c 0837     		adds	r7, r7, #8
 3305              		.cfi_def_cfa_offset 8
 3306 002e BD46     		mov	sp, r7
 3307              		.cfi_def_cfa_register 13
 3308              		@ sp needed
 3309 0030 80BD     		pop	{r7, pc}
 3310              		.cfi_endproc
 3311              	.LFE256:
 3312              		.size	Cy_SCB_UART_AbortTransmit, .-Cy_SCB_UART_AbortTransmit
 3313 0032 00BF     		.section	.text.Cy_SCB_UART_GetNumLeftToTransmit,"ax",%progbits
 3314              		.align	2
 3315              		.global	Cy_SCB_UART_GetNumLeftToTransmit
 3316              		.thumb
 3317              		.thumb_func
 3318              		.type	Cy_SCB_UART_GetNumLeftToTransmit, %function
 3319              	Cy_SCB_UART_GetNumLeftToTransmit:
 3320              	.LFB257:
 937:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 938:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 939:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 940:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_GetNumLeftToTransmit
 941:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 942:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 943:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Returns the number of data elements left to transmit since the last call to
 944:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref Cy_SCB_UART_Transmit.
 945:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 946:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 947:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 948:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 949:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 950:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 951:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 952:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 953:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 954:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 955:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
 956:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The number of data elements left to transmit.
 957:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 958:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 959:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** uint32_t Cy_SCB_UART_GetNumLeftToTransmit(CySCB_Type const *base, cy_stc_scb_uart_context_t const *
 960:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3321              		.loc 3 960 0
 3322              		.cfi_startproc
 3323              		@ args = 0, pretend = 0, frame = 8
 3324              		@ frame_needed = 1, uses_anonymous_args = 0
 3325              		@ link register save eliminated.
 3326 0000 80B4     		push	{r7}
 3327              		.cfi_def_cfa_offset 4
 3328              		.cfi_offset 7, -4
 3329 0002 83B0     		sub	sp, sp, #12
 3330              		.cfi_def_cfa_offset 16
 3331 0004 00AF     		add	r7, sp, #0
 3332              		.cfi_def_cfa_register 7
 3333 0006 7860     		str	r0, [r7, #4]
 3334 0008 3960     		str	r1, [r7]
 961:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Suppress a compiler warning about unused variables */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 135


 962:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     (void) base;
 963:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 964:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return (context->txLeftToTransmit);
 3335              		.loc 3 964 0
 3336 000a 3B68     		ldr	r3, [r7]
 3337 000c DB6A     		ldr	r3, [r3, #44]
 965:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3338              		.loc 3 965 0
 3339 000e 1846     		mov	r0, r3
 3340 0010 0C37     		adds	r7, r7, #12
 3341              		.cfi_def_cfa_offset 4
 3342 0012 BD46     		mov	sp, r7
 3343              		.cfi_def_cfa_register 13
 3344              		@ sp needed
 3345 0014 5DF8047B 		ldr	r7, [sp], #4
 3346              		.cfi_restore 7
 3347              		.cfi_def_cfa_offset 0
 3348 0018 7047     		bx	lr
 3349              		.cfi_endproc
 3350              	.LFE257:
 3351              		.size	Cy_SCB_UART_GetNumLeftToTransmit, .-Cy_SCB_UART_GetNumLeftToTransmit
 3352 001a 00BF     		.section	.text.Cy_SCB_UART_GetTransmitStatus,"ax",%progbits
 3353              		.align	2
 3354              		.global	Cy_SCB_UART_GetTransmitStatus
 3355              		.thumb
 3356              		.thumb_func
 3357              		.type	Cy_SCB_UART_GetTransmitStatus, %function
 3358              	Cy_SCB_UART_GetTransmitStatus:
 3359              	.LFB258:
 966:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 967:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 968:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
 969:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_GetTransmitStatus
 970:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
 971:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 972:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Returns the status of the transmit operation.
 973:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This status is a bit mask and the value returned may have multiple bits set.
 974:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 975:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
 976:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
 977:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 978:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
 979:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
 980:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
 981:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
 982:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
 983:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 984:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \return
 985:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref group_scb_uart_macros_transmit_status.
 986:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 987:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
 988:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The status is only cleared by calling \ref Cy_SCB_UART_Transmit or
 989:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref Cy_SCB_UART_AbortTransmit.
 990:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
 991:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
 992:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** uint32_t Cy_SCB_UART_GetTransmitStatus(CySCB_Type const *base, cy_stc_scb_uart_context_t const *con
 993:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 136


 3360              		.loc 3 993 0
 3361              		.cfi_startproc
 3362              		@ args = 0, pretend = 0, frame = 8
 3363              		@ frame_needed = 1, uses_anonymous_args = 0
 3364              		@ link register save eliminated.
 3365 0000 80B4     		push	{r7}
 3366              		.cfi_def_cfa_offset 4
 3367              		.cfi_offset 7, -4
 3368 0002 83B0     		sub	sp, sp, #12
 3369              		.cfi_def_cfa_offset 16
 3370 0004 00AF     		add	r7, sp, #0
 3371              		.cfi_def_cfa_register 7
 3372 0006 7860     		str	r0, [r7, #4]
 3373 0008 3960     		str	r1, [r7]
 994:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Suppress a compiler warning about unused variables */
 995:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     (void) base;
 996:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 997:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     return (context->txStatus);
 3374              		.loc 3 997 0
 3375 000a 3B68     		ldr	r3, [r7]
 3376 000c 1B68     		ldr	r3, [r3]
 998:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3377              		.loc 3 998 0
 3378 000e 1846     		mov	r0, r3
 3379 0010 0C37     		adds	r7, r7, #12
 3380              		.cfi_def_cfa_offset 4
 3381 0012 BD46     		mov	sp, r7
 3382              		.cfi_def_cfa_register 13
 3383              		@ sp needed
 3384 0014 5DF8047B 		ldr	r7, [sp], #4
 3385              		.cfi_restore 7
 3386              		.cfi_def_cfa_offset 0
 3387 0018 7047     		bx	lr
 3388              		.cfi_endproc
 3389              	.LFE258:
 3390              		.size	Cy_SCB_UART_GetTransmitStatus, .-Cy_SCB_UART_GetTransmitStatus
 3391 001a 00BF     		.section	.text.Cy_SCB_UART_SendBreakBlocking,"ax",%progbits
 3392              		.align	2
 3393              		.global	Cy_SCB_UART_SendBreakBlocking
 3394              		.thumb
 3395              		.thumb_func
 3396              		.type	Cy_SCB_UART_SendBreakBlocking, %function
 3397              	Cy_SCB_UART_SendBreakBlocking:
 3398              	.LFB259:
 999:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1000:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1001:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
1002:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_SendBreakBlocking
1003:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
1004:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1005:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Sends a break condition (logic low) of specified width on UART TX line.
1006:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Blocks until break is completed. Only call this function when UART TX FIFO
1007:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * and shifter are empty.
1008:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1009:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
1010:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
1011:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 137


1012:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param breakWidth
1013:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Width of break condition. Valid range is the TX data width (4 to 16 bits)
1014:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1015:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \note
1016:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Before sending break all UART TX interrupt sources are disabled. The state
1017:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * of UART TX interrupt sources is restored before function returns.
1018:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1019:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \sideeffect
1020:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * If this function is called while there is data in the TX FIFO or shifter that
1021:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * data will be shifted out in packets the size of breakWidth.
1022:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1023:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
1024:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_SendBreakBlocking(CySCB_Type *base, uint32_t breakWidth)
1025:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3399              		.loc 3 1025 0
 3400              		.cfi_startproc
 3401              		@ args = 0, pretend = 0, frame = 16
 3402              		@ frame_needed = 1, uses_anonymous_args = 0
 3403 0000 80B5     		push	{r7, lr}
 3404              		.cfi_def_cfa_offset 8
 3405              		.cfi_offset 7, -8
 3406              		.cfi_offset 14, -4
 3407 0002 84B0     		sub	sp, sp, #16
 3408              		.cfi_def_cfa_offset 24
 3409 0004 00AF     		add	r7, sp, #0
 3410              		.cfi_def_cfa_register 7
 3411 0006 7860     		str	r0, [r7, #4]
 3412 0008 3960     		str	r1, [r7]
1026:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t txCtrlReg;
1027:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t txIntrReg;
1028:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1029:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_ASSERT_L2(CY_SCB_UART_IS_TX_BREAK_WIDTH_VALID(breakWidth));
 3413              		.loc 3 1029 0
 3414 000a 3B68     		ldr	r3, [r7]
 3415 000c 032B     		cmp	r3, #3
 3416 000e 02D9     		bls	.L235
 3417              		.loc 3 1029 0 is_stmt 0 discriminator 2
 3418 0010 3B68     		ldr	r3, [r7]
 3419 0012 102B     		cmp	r3, #16
 3420 0014 04D9     		bls	.L236
 3421              	.L235:
 3422              		.loc 3 1029 0 discriminator 3
 3423 0016 40F20541 		movw	r1, #1029
 3424 001a 1F48     		ldr	r0, .L238
 3425 001c FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 3426              	.L236:
1030:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1031:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Disable all UART TX interrupt sources and clear UART TX Done history */
1032:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     txIntrReg = Cy_SCB_GetTxInterruptMask(base);
 3427              		.loc 3 1032 0 is_stmt 1
 3428 0020 7868     		ldr	r0, [r7, #4]
 3429 0022 FFF7FEFF 		bl	Cy_SCB_GetTxInterruptMask
 3430 0026 F860     		str	r0, [r7, #12]
1033:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_SetTxInterruptMask(base, 0UL);
 3431              		.loc 3 1033 0
 3432 0028 0021     		movs	r1, #0
 3433 002a 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 138


 3434 002c FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
1034:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_ClearTxInterrupt(base, CY_SCB_TX_INTR_UART_DONE);
 3435              		.loc 3 1034 0
 3436 0030 4FF40071 		mov	r1, #512
 3437 0034 7868     		ldr	r0, [r7, #4]
 3438 0036 FFF7FEFF 		bl	Cy_SCB_ClearTxInterrupt
1035:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1036:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Store TX_CTRL configuration */
1037:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     txCtrlReg = SCB_TX_CTRL(base);
 3439              		.loc 3 1037 0
 3440 003a 7B68     		ldr	r3, [r7, #4]
 3441 003c D3F80032 		ldr	r3, [r3, #512]
 3442 0040 BB60     		str	r3, [r7, #8]
1038:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1039:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Set break width: start bit adds one 0 bit */
1040:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     CY_REG32_CLR_SET(SCB_TX_CTRL(base), SCB_TX_CTRL_DATA_WIDTH, (breakWidth - 1UL));
 3443              		.loc 3 1040 0
 3444 0042 7B68     		ldr	r3, [r7, #4]
 3445 0044 D3F80032 		ldr	r3, [r3, #512]
 3446 0048 23F00F02 		bic	r2, r3, #15
 3447 004c 3B68     		ldr	r3, [r7]
 3448 004e 013B     		subs	r3, r3, #1
 3449 0050 03F00F03 		and	r3, r3, #15
 3450 0054 1A43     		orrs	r2, r2, r3
 3451 0056 7B68     		ldr	r3, [r7, #4]
 3452 0058 C3F80022 		str	r2, [r3, #512]
1041:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1042:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Generate break */
1043:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_WriteTxFifo(base, 0UL);
 3453              		.loc 3 1043 0
 3454 005c 0021     		movs	r1, #0
 3455 005e 7868     		ldr	r0, [r7, #4]
 3456 0060 FFF7FEFF 		bl	Cy_SCB_WriteTxFifo
1044:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1045:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Wait for break completion */
1046:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     while (0UL == (Cy_SCB_GetTxInterruptStatus(base) & CY_SCB_TX_INTR_UART_DONE))
 3457              		.loc 3 1046 0
 3458 0064 00BF     		nop
 3459              	.L237:
 3460              		.loc 3 1046 0 is_stmt 0 discriminator 1
 3461 0066 7868     		ldr	r0, [r7, #4]
 3462 0068 FFF7FEFF 		bl	Cy_SCB_GetTxInterruptStatus
 3463 006c 0346     		mov	r3, r0
 3464 006e 03F40073 		and	r3, r3, #512
 3465 0072 002B     		cmp	r3, #0
 3466 0074 F7D0     		beq	.L237
1047:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1048:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
1049:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1050:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Clear all UART TX interrupt sources */
1051:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_ClearTxInterrupt(base, CY_SCB_TX_INTR_MASK);
 3467              		.loc 3 1051 0 is_stmt 1
 3468 0076 40F27371 		movw	r1, #1907
 3469 007a 7868     		ldr	r0, [r7, #4]
 3470 007c FFF7FEFF 		bl	Cy_SCB_ClearTxInterrupt
1052:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1053:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Restore TX data width and interrupt sources */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 139


1054:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     SCB_TX_CTRL(base) = txCtrlReg;
 3471              		.loc 3 1054 0
 3472 0080 7B68     		ldr	r3, [r7, #4]
 3473 0082 BA68     		ldr	r2, [r7, #8]
 3474 0084 C3F80022 		str	r2, [r3, #512]
1055:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     Cy_SCB_SetTxInterruptMask(base, txIntrReg);
 3475              		.loc 3 1055 0
 3476 0088 F968     		ldr	r1, [r7, #12]
 3477 008a 7868     		ldr	r0, [r7, #4]
 3478 008c FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
1056:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3479              		.loc 3 1056 0
 3480 0090 00BF     		nop
 3481 0092 1037     		adds	r7, r7, #16
 3482              		.cfi_def_cfa_offset 8
 3483 0094 BD46     		mov	sp, r7
 3484              		.cfi_def_cfa_register 13
 3485              		@ sp needed
 3486 0096 80BD     		pop	{r7, pc}
 3487              	.L239:
 3488              		.align	2
 3489              	.L238:
 3490 0098 84000000 		.word	.LC2
 3491              		.cfi_endproc
 3492              	.LFE259:
 3493              		.size	Cy_SCB_UART_SendBreakBlocking, .-Cy_SCB_UART_SendBreakBlocking
 3494              		.section	.text.Cy_SCB_UART_Interrupt,"ax",%progbits
 3495              		.align	2
 3496              		.global	Cy_SCB_UART_Interrupt
 3497              		.thumb
 3498              		.thumb_func
 3499              		.type	Cy_SCB_UART_Interrupt, %function
 3500              	Cy_SCB_UART_Interrupt:
 3501              	.LFB260:
1057:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1058:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1059:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
1060:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: Cy_SCB_UART_Interrupt
1061:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
1062:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1063:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This is the interrupt function for the SCB configured in the UART mode.
1064:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * This function must be called inside a user-defined interrupt service
1065:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * routine to make \ref Cy_SCB_UART_Transmit and \ref Cy_SCB_UART_Receive
1066:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * work. The ring buffer operation that enabled by calling \ref Cy_SCB_UART_StartRingBuffer 
1067:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * also requires interrupt processing.
1068:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1069:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
1070:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
1071:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1072:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
1073:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
1074:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
1075:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
1076:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
1077:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1078:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
1079:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** void Cy_SCB_UART_Interrupt(CySCB_Type *base, cy_stc_scb_uart_context_t *context)
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 140


1080:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3502              		.loc 3 1080 0
 3503              		.cfi_startproc
 3504              		@ args = 0, pretend = 0, frame = 16
 3505              		@ frame_needed = 1, uses_anonymous_args = 0
 3506 0000 80B5     		push	{r7, lr}
 3507              		.cfi_def_cfa_offset 8
 3508              		.cfi_offset 7, -8
 3509              		.cfi_offset 14, -4
 3510 0002 84B0     		sub	sp, sp, #16
 3511              		.cfi_def_cfa_offset 24
 3512 0004 00AF     		add	r7, sp, #0
 3513              		.cfi_def_cfa_register 7
 3514 0006 7860     		str	r0, [r7, #4]
 3515 0008 3960     		str	r1, [r7]
1081:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (0UL != (CY_SCB_RX_INTR & Cy_SCB_GetInterruptCause(base)))
 3516              		.loc 3 1081 0
 3517 000a 7868     		ldr	r0, [r7, #4]
 3518 000c FFF7FEFF 		bl	Cy_SCB_GetInterruptCause
 3519 0010 0346     		mov	r3, r0
 3520 0012 03F00803 		and	r3, r3, #8
 3521 0016 002B     		cmp	r3, #0
 3522 0018 4BD0     		beq	.L241
 3523              	.LBB8:
1082:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1083:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Get RX error events: a frame error, parity error, and overflow */
1084:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint32_t locRxErr = (CY_SCB_UART_RECEIVE_ERR & Cy_SCB_GetRxInterruptStatusMasked(base));
 3524              		.loc 3 1084 0
 3525 001a 7868     		ldr	r0, [r7, #4]
 3526 001c FFF7FEFF 		bl	Cy_SCB_GetRxInterruptStatusMasked
 3527 0020 0346     		mov	r3, r0
 3528 0022 03F44873 		and	r3, r3, #800
 3529 0026 FB60     		str	r3, [r7, #12]
1085:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1086:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Handle the error conditions */
1087:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (0UL != locRxErr)
 3530              		.loc 3 1087 0
 3531 0028 FB68     		ldr	r3, [r7, #12]
 3532 002a 002B     		cmp	r3, #0
 3533 002c 11D0     		beq	.L242
1088:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1089:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->rxStatus |= locRxErr;
 3534              		.loc 3 1089 0
 3535 002e 3B68     		ldr	r3, [r7]
 3536 0030 5A68     		ldr	r2, [r3, #4]
 3537 0032 FB68     		ldr	r3, [r7, #12]
 3538 0034 1A43     		orrs	r2, r2, r3
 3539 0036 3B68     		ldr	r3, [r7]
 3540 0038 5A60     		str	r2, [r3, #4]
1090:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1091:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_ClearRxInterrupt(base, locRxErr);
 3541              		.loc 3 1091 0
 3542 003a F968     		ldr	r1, [r7, #12]
 3543 003c 7868     		ldr	r0, [r7, #4]
 3544 003e FFF7FEFF 		bl	Cy_SCB_ClearRxInterrupt
1092:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1093:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             if (NULL != context->cbEvents)
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 141


 3545              		.loc 3 1093 0
 3546 0042 3B68     		ldr	r3, [r7]
 3547 0044 1B6B     		ldr	r3, [r3, #48]
 3548 0046 002B     		cmp	r3, #0
 3549 0048 03D0     		beq	.L242
1094:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
1095:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 context->cbEvents(CY_SCB_UART_RECEIVE_ERR_EVENT);
 3550              		.loc 3 1095 0
 3551 004a 3B68     		ldr	r3, [r7]
 3552 004c 1B6B     		ldr	r3, [r3, #48]
 3553 004e 1020     		movs	r0, #16
 3554 0050 9847     		blx	r3
 3555              	.L242:
1096:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
1097:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1098:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1099:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Break the detect */
1100:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (0UL != (CY_SCB_RX_INTR_UART_BREAK_DETECT & Cy_SCB_GetRxInterruptStatusMasked(base)))
 3556              		.loc 3 1100 0
 3557 0052 7868     		ldr	r0, [r7, #4]
 3558 0054 FFF7FEFF 		bl	Cy_SCB_GetRxInterruptStatusMasked
 3559 0058 0346     		mov	r3, r0
 3560 005a 03F40063 		and	r3, r3, #2048
 3561 005e 002B     		cmp	r3, #0
 3562 0060 0AD0     		beq	.L243
1101:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1102:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->rxStatus |= CY_SCB_UART_RECEIVE_BREAK_DETECT;
 3563              		.loc 3 1102 0
 3564 0062 3B68     		ldr	r3, [r7]
 3565 0064 5B68     		ldr	r3, [r3, #4]
 3566 0066 43F40062 		orr	r2, r3, #2048
 3567 006a 3B68     		ldr	r3, [r7]
 3568 006c 5A60     		str	r2, [r3, #4]
1103:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1104:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_ClearRxInterrupt(base, CY_SCB_RX_INTR_UART_BREAK_DETECT);
 3569              		.loc 3 1104 0
 3570 006e 4FF40061 		mov	r1, #2048
 3571 0072 7868     		ldr	r0, [r7, #4]
 3572 0074 FFF7FEFF 		bl	Cy_SCB_ClearRxInterrupt
 3573              	.L243:
1105:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1106:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1107:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Copy the received data */
1108:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (0UL != (CY_SCB_RX_INTR_LEVEL & Cy_SCB_GetRxInterruptStatusMasked(base)))
 3574              		.loc 3 1108 0
 3575 0078 7868     		ldr	r0, [r7, #4]
 3576 007a FFF7FEFF 		bl	Cy_SCB_GetRxInterruptStatusMasked
 3577 007e 0346     		mov	r3, r0
 3578 0080 03F00103 		and	r3, r3, #1
 3579 0084 002B     		cmp	r3, #0
 3580 0086 14D0     		beq	.L241
1109:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1110:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             if (context->rxBufSize > 0UL)
 3581              		.loc 3 1110 0
 3582 0088 3B68     		ldr	r3, [r7]
 3583 008a DB69     		ldr	r3, [r3, #28]
 3584 008c 002B     		cmp	r3, #0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 142


 3585 008e 04D0     		beq	.L244
1111:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
1112:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 HandleDataReceive(base, context);
 3586              		.loc 3 1112 0
 3587 0090 3968     		ldr	r1, [r7]
 3588 0092 7868     		ldr	r0, [r7, #4]
 3589 0094 FFF7FEFF 		bl	HandleDataReceive
 3590 0098 07E0     		b	.L245
 3591              	.L244:
1113:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
1114:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             else
1115:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
1116:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 if (NULL != context->rxRingBuf)
 3592              		.loc 3 1116 0
 3593 009a 3B68     		ldr	r3, [r7]
 3594 009c 9B68     		ldr	r3, [r3, #8]
 3595 009e 002B     		cmp	r3, #0
 3596 00a0 03D0     		beq	.L245
1117:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 {
1118:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     HandleRingBuffer(base, context);
 3597              		.loc 3 1118 0
 3598 00a2 3968     		ldr	r1, [r7]
 3599 00a4 7868     		ldr	r0, [r7, #4]
 3600 00a6 FFF7FEFF 		bl	HandleRingBuffer
 3601              	.L245:
1119:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 }
1120:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
1121:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1122:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_ClearRxInterrupt(base, CY_SCB_RX_INTR_LEVEL);
 3602              		.loc 3 1122 0
 3603 00aa 0121     		movs	r1, #1
 3604 00ac 7868     		ldr	r0, [r7, #4]
 3605 00ae FFF7FEFF 		bl	Cy_SCB_ClearRxInterrupt
 3606              	.L241:
 3607              	.LBE8:
1123:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1124:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
1125:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1126:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (0UL != (CY_SCB_TX_INTR & Cy_SCB_GetInterruptCause(base)))
 3608              		.loc 3 1126 0
 3609 00b2 7868     		ldr	r0, [r7, #4]
 3610 00b4 FFF7FEFF 		bl	Cy_SCB_GetInterruptCause
 3611 00b8 0346     		mov	r3, r0
 3612 00ba 03F00403 		and	r3, r3, #4
 3613 00be 002B     		cmp	r3, #0
 3614 00c0 48D0     		beq	.L249
 3615              	.LBB9:
1127:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1128:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint32_t locTxErr = (CY_SCB_UART_TRANSMIT_ERR & Cy_SCB_GetTxInterruptStatusMasked(base));
 3616              		.loc 3 1128 0
 3617 00c2 7868     		ldr	r0, [r7, #4]
 3618 00c4 FFF7FEFF 		bl	Cy_SCB_GetTxInterruptStatusMasked
 3619 00c8 0346     		mov	r3, r0
 3620 00ca 03F4A063 		and	r3, r3, #1280
 3621 00ce BB60     		str	r3, [r7, #8]
1129:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1130:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Handle the TX error conditions */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 143


1131:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (0UL != locTxErr)
 3622              		.loc 3 1131 0
 3623 00d0 BB68     		ldr	r3, [r7, #8]
 3624 00d2 002B     		cmp	r3, #0
 3625 00d4 11D0     		beq	.L247
1132:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1133:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->txStatus |= locTxErr;
 3626              		.loc 3 1133 0
 3627 00d6 3B68     		ldr	r3, [r7]
 3628 00d8 1A68     		ldr	r2, [r3]
 3629 00da BB68     		ldr	r3, [r7, #8]
 3630 00dc 1A43     		orrs	r2, r2, r3
 3631 00de 3B68     		ldr	r3, [r7]
 3632 00e0 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_ClearTxInterrupt(base, locTxErr);
 3633              		.loc 3 1134 0
 3634 00e2 B968     		ldr	r1, [r7, #8]
 3635 00e4 7868     		ldr	r0, [r7, #4]
 3636 00e6 FFF7FEFF 		bl	Cy_SCB_ClearTxInterrupt
1135:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1136:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             if (NULL != context->cbEvents)
 3637              		.loc 3 1136 0
 3638 00ea 3B68     		ldr	r3, [r7]
 3639 00ec 1B6B     		ldr	r3, [r3, #48]
 3640 00ee 002B     		cmp	r3, #0
 3641 00f0 03D0     		beq	.L247
1137:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
1138:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 context->cbEvents(CY_SCB_UART_TRANSMIT_ERR_EVENT);
 3642              		.loc 3 1138 0
 3643 00f2 3B68     		ldr	r3, [r7]
 3644 00f4 1B6B     		ldr	r3, [r3, #48]
 3645 00f6 2020     		movs	r0, #32
 3646 00f8 9847     		blx	r3
 3647              	.L247:
1139:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
1140:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1141:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1142:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Load data to transmit */
1143:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (0UL != (CY_SCB_TX_INTR_LEVEL & Cy_SCB_GetTxInterruptStatusMasked(base)))
 3648              		.loc 3 1143 0
 3649 00fa 7868     		ldr	r0, [r7, #4]
 3650 00fc FFF7FEFF 		bl	Cy_SCB_GetTxInterruptStatusMasked
 3651 0100 0346     		mov	r3, r0
 3652 0102 03F00103 		and	r3, r3, #1
 3653 0106 002B     		cmp	r3, #0
 3654 0108 07D0     		beq	.L248
1144:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1145:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             HandleDataTransmit(base, context);
 3655              		.loc 3 1145 0
 3656 010a 3968     		ldr	r1, [r7]
 3657 010c 7868     		ldr	r0, [r7, #4]
 3658 010e FFF7FEFF 		bl	HandleDataTransmit
1146:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1147:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_ClearTxInterrupt(base, CY_SCB_TX_INTR_LEVEL);
 3659              		.loc 3 1147 0
 3660 0112 0121     		movs	r1, #1
 3661 0114 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 144


 3662 0116 FFF7FEFF 		bl	Cy_SCB_ClearTxInterrupt
 3663              	.L248:
1148:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1149:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1150:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Handle the TX complete */
1151:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (0UL != (CY_SCB_TX_INTR_UART_DONE & Cy_SCB_GetTxInterruptStatusMasked(base)))
 3664              		.loc 3 1151 0
 3665 011a 7868     		ldr	r0, [r7, #4]
 3666 011c FFF7FEFF 		bl	Cy_SCB_GetTxInterruptStatusMasked
 3667 0120 0346     		mov	r3, r0
 3668 0122 03F40073 		and	r3, r3, #512
 3669 0126 002B     		cmp	r3, #0
 3670 0128 14D0     		beq	.L249
1152:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1153:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Disable all TX interrupt sources */
1154:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetTxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 3671              		.loc 3 1154 0
 3672 012a 0021     		movs	r1, #0
 3673 012c 7868     		ldr	r0, [r7, #4]
 3674 012e FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
1155:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1156:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->txStatus &= (uint32_t) ~CY_SCB_UART_TRANSMIT_ACTIVE;
 3675              		.loc 3 1156 0
 3676 0132 3B68     		ldr	r3, [r7]
 3677 0134 1B68     		ldr	r3, [r3]
 3678 0136 23F00102 		bic	r2, r3, #1
 3679 013a 3B68     		ldr	r3, [r7]
 3680 013c 1A60     		str	r2, [r3]
1157:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->txLeftToTransmit = 0UL;
 3681              		.loc 3 1157 0
 3682 013e 3B68     		ldr	r3, [r7]
 3683 0140 0022     		movs	r2, #0
 3684 0142 DA62     		str	r2, [r3, #44]
1158:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1159:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             if (NULL != context->cbEvents)
 3685              		.loc 3 1159 0
 3686 0144 3B68     		ldr	r3, [r7]
 3687 0146 1B6B     		ldr	r3, [r3, #48]
 3688 0148 002B     		cmp	r3, #0
 3689 014a 03D0     		beq	.L249
1160:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
1161:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 context->cbEvents(CY_SCB_UART_TRANSMIT_DONE_EVENT);
 3690              		.loc 3 1161 0
 3691 014c 3B68     		ldr	r3, [r7]
 3692 014e 1B6B     		ldr	r3, [r3, #48]
 3693 0150 0220     		movs	r0, #2
 3694 0152 9847     		blx	r3
 3695              	.L249:
 3696              	.LBE9:
1162:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
1163:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1164:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
1165:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3697              		.loc 3 1165 0
 3698 0154 00BF     		nop
 3699 0156 1037     		adds	r7, r7, #16
 3700              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 145


 3701 0158 BD46     		mov	sp, r7
 3702              		.cfi_def_cfa_register 13
 3703              		@ sp needed
 3704 015a 80BD     		pop	{r7, pc}
 3705              		.cfi_endproc
 3706              	.LFE260:
 3707              		.size	Cy_SCB_UART_Interrupt, .-Cy_SCB_UART_Interrupt
 3708              		.section	.text.HandleDataReceive,"ax",%progbits
 3709              		.align	2
 3710              		.thumb
 3711              		.thumb_func
 3712              		.type	HandleDataReceive, %function
 3713              	HandleDataReceive:
 3714              	.LFB261:
1166:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1167:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1168:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1169:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
1170:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: HandleDataReceive
1171:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
1172:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1173:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Reads data from the receive FIFO into the buffer provided by
1174:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \ref Cy_SCB_UART_Receive.
1175:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1176:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
1177:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
1178:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1179:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
1180:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
1181:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
1182:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
1183:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
1184:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1185:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
1186:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** static void HandleDataReceive(CySCB_Type *base, cy_stc_scb_uart_context_t *context)
1187:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3715              		.loc 3 1187 0
 3716              		.cfi_startproc
 3717              		@ args = 0, pretend = 0, frame = 24
 3718              		@ frame_needed = 1, uses_anonymous_args = 0
 3719 0000 80B5     		push	{r7, lr}
 3720              		.cfi_def_cfa_offset 8
 3721              		.cfi_offset 7, -8
 3722              		.cfi_offset 14, -4
 3723 0002 86B0     		sub	sp, sp, #24
 3724              		.cfi_def_cfa_offset 32
 3725 0004 00AF     		add	r7, sp, #0
 3726              		.cfi_def_cfa_register 7
 3727 0006 7860     		str	r0, [r7, #4]
 3728 0008 3960     		str	r1, [r7]
1188:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t numCopied;
1189:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t halfFifoSize = Cy_SCB_GetFifoSize(base) / 2UL;
 3729              		.loc 3 1189 0
 3730 000a 7868     		ldr	r0, [r7, #4]
 3731 000c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 3732 0010 0346     		mov	r3, r0
 3733 0012 5B08     		lsrs	r3, r3, #1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 146


 3734 0014 7B61     		str	r3, [r7, #20]
1190:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1191:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Get data from RX FIFO */
1192:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     numCopied = Cy_SCB_UART_GetArray(base, context->rxBuf, context->rxBufSize);
 3735              		.loc 3 1192 0
 3736 0016 3B68     		ldr	r3, [r7]
 3737 0018 9969     		ldr	r1, [r3, #24]
 3738 001a 3B68     		ldr	r3, [r7]
 3739 001c DB69     		ldr	r3, [r3, #28]
 3740 001e 1A46     		mov	r2, r3
 3741 0020 7868     		ldr	r0, [r7, #4]
 3742 0022 FFF7FEFF 		bl	Cy_SCB_UART_GetArray
 3743 0026 3861     		str	r0, [r7, #16]
1193:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1194:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Move the buffer */
1195:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxBufIdx  += numCopied;
 3744              		.loc 3 1195 0
 3745 0028 3B68     		ldr	r3, [r7]
 3746 002a 1A6A     		ldr	r2, [r3, #32]
 3747 002c 3B69     		ldr	r3, [r7, #16]
 3748 002e 1A44     		add	r2, r2, r3
 3749 0030 3B68     		ldr	r3, [r7]
 3750 0032 1A62     		str	r2, [r3, #32]
1196:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxBufSize -= numCopied;
 3751              		.loc 3 1196 0
 3752 0034 3B68     		ldr	r3, [r7]
 3753 0036 DA69     		ldr	r2, [r3, #28]
 3754 0038 3B69     		ldr	r3, [r7, #16]
 3755 003a D21A     		subs	r2, r2, r3
 3756 003c 3B68     		ldr	r3, [r7]
 3757 003e DA61     		str	r2, [r3, #28]
1197:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1198:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (0UL == context->rxBufSize)
 3758              		.loc 3 1198 0
 3759 0040 3B68     		ldr	r3, [r7]
 3760 0042 DB69     		ldr	r3, [r3, #28]
 3761 0044 002B     		cmp	r3, #0
 3762 0046 2AD1     		bne	.L251
1199:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1200:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (NULL != context->rxRingBuf)
 3763              		.loc 3 1200 0
 3764 0048 3B68     		ldr	r3, [r7]
 3765 004a 9B68     		ldr	r3, [r3, #8]
 3766 004c 002B     		cmp	r3, #0
 3767 004e 13D0     		beq	.L252
1201:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1202:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Adjust the level to proceed with the ring buffer */
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetRxFifoLevel(base, (context->rxRingBufSize >= halfFifoSize) ?
 3768              		.loc 3 1203 0
 3769 0050 3B68     		ldr	r3, [r7]
 3770 0052 DA68     		ldr	r2, [r3, #12]
 3771 0054 7B69     		ldr	r3, [r7, #20]
 3772 0056 9A42     		cmp	r2, r3
 3773 0058 02D3     		bcc	.L253
 3774              		.loc 3 1203 0 is_stmt 0 discriminator 1
 3775 005a 7B69     		ldr	r3, [r7, #20]
 3776 005c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 147


 3777 005e 02E0     		b	.L254
 3778              	.L253:
1204:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                             (halfFifoSize - 1UL) : (context->rxRingBufSize - 1UL));
 3779              		.loc 3 1204 0 is_stmt 1 discriminator 2
 3780 0060 3B68     		ldr	r3, [r7]
 3781 0062 DB68     		ldr	r3, [r3, #12]
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                             (halfFifoSize - 1UL) : (context->rxRingBufSize - 1UL));
 3782              		.loc 3 1203 0 discriminator 2
 3783 0064 013B     		subs	r3, r3, #1
 3784              	.L254:
1203:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                             (halfFifoSize - 1UL) : (context->rxRingBufSize - 1UL));
 3785              		.loc 3 1203 0 is_stmt 0 discriminator 4
 3786 0066 1946     		mov	r1, r3
 3787 0068 7868     		ldr	r0, [r7, #4]
 3788 006a FFF7FEFF 		bl	Cy_SCB_SetRxFifoLevel
1205:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1206:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetRxInterruptMask(base, CY_SCB_RX_INTR_LEVEL);
 3789              		.loc 3 1206 0 is_stmt 1 discriminator 4
 3790 006e 0121     		movs	r1, #1
 3791 0070 7868     		ldr	r0, [r7, #4]
 3792 0072 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 3793 0076 03E0     		b	.L255
 3794              	.L252:
1207:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1208:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         else
1209:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1210:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetRxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 3795              		.loc 3 1210 0
 3796 0078 0021     		movs	r1, #0
 3797 007a 7868     		ldr	r0, [r7, #4]
 3798 007c FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
 3799              	.L255:
1211:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1212:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1213:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Update the status */
1214:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxStatus &= (uint32_t) ~CY_SCB_UART_RECEIVE_ACTIVE;
 3800              		.loc 3 1214 0
 3801 0080 3B68     		ldr	r3, [r7]
 3802 0082 5B68     		ldr	r3, [r3, #4]
 3803 0084 23F00102 		bic	r2, r3, #1
 3804 0088 3B68     		ldr	r3, [r7]
 3805 008a 5A60     		str	r2, [r3, #4]
1215:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1216:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Notify that receive is done in a callback */
1217:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (NULL != context->cbEvents)
 3806              		.loc 3 1217 0
 3807 008c 3B68     		ldr	r3, [r7]
 3808 008e 1B6B     		ldr	r3, [r3, #48]
 3809 0090 002B     		cmp	r3, #0
 3810 0092 23D0     		beq	.L260
1218:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1219:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->cbEvents(CY_SCB_UART_RECEIVE_DONE_EVENT);
 3811              		.loc 3 1219 0
 3812 0094 3B68     		ldr	r3, [r7]
 3813 0096 1B6B     		ldr	r3, [r3, #48]
 3814 0098 0420     		movs	r0, #4
 3815 009a 9847     		blx	r3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 148


1220:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1221:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
1222:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     else
1223:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint8_t *buf = (uint8_t *) context->rxBuf;
1225:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         buf = &buf[(Cy_SCB_IsRxDataWidthByte(base) ? (numCopied) : (2UL * numCopied))];
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxBuf = (void *) buf;
1228:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (context->rxBufSize < halfFifoSize)
1230:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1231:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* Set the RX FIFO level to trigger an interrupt */
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             Cy_SCB_SetRxFifoLevel(base, (context->rxBufSize - 1UL));
1233:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1234:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
1235:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 3816              		.loc 3 1235 0
 3817 009c 1EE0     		b	.L260
 3818              	.L251:
 3819              	.LBB10:
1224:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 3820              		.loc 3 1224 0
 3821 009e 3B68     		ldr	r3, [r7]
 3822 00a0 9B69     		ldr	r3, [r3, #24]
 3823 00a2 FB60     		str	r3, [r7, #12]
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxBuf = (void *) buf;
 3824              		.loc 3 1226 0
 3825 00a4 7868     		ldr	r0, [r7, #4]
 3826 00a6 FFF7FEFF 		bl	Cy_SCB_IsRxDataWidthByte
 3827 00aa 0346     		mov	r3, r0
 3828 00ac 002B     		cmp	r3, #0
 3829 00ae 01D0     		beq	.L258
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxBuf = (void *) buf;
 3830              		.loc 3 1226 0 is_stmt 0 discriminator 1
 3831 00b0 3B69     		ldr	r3, [r7, #16]
 3832 00b2 01E0     		b	.L259
 3833              	.L258:
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxBuf = (void *) buf;
 3834              		.loc 3 1226 0 discriminator 2
 3835 00b4 3B69     		ldr	r3, [r7, #16]
 3836 00b6 5B00     		lsls	r3, r3, #1
 3837              	.L259:
1226:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->rxBuf = (void *) buf;
 3838              		.loc 3 1226 0 discriminator 4
 3839 00b8 FA68     		ldr	r2, [r7, #12]
 3840 00ba 1344     		add	r3, r3, r2
 3841 00bc FB60     		str	r3, [r7, #12]
1227:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
 3842              		.loc 3 1227 0 is_stmt 1 discriminator 4
 3843 00be 3B68     		ldr	r3, [r7]
 3844 00c0 FA68     		ldr	r2, [r7, #12]
 3845 00c2 9A61     		str	r2, [r3, #24]
1229:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
 3846              		.loc 3 1229 0 discriminator 4
 3847 00c4 3B68     		ldr	r3, [r7]
 3848 00c6 DA69     		ldr	r2, [r3, #28]
 3849 00c8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 149


 3850 00ca 9A42     		cmp	r2, r3
 3851 00cc 06D2     		bcs	.L260
1232:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
 3852              		.loc 3 1232 0
 3853 00ce 3B68     		ldr	r3, [r7]
 3854 00d0 DB69     		ldr	r3, [r3, #28]
 3855 00d2 013B     		subs	r3, r3, #1
 3856 00d4 1946     		mov	r1, r3
 3857 00d6 7868     		ldr	r0, [r7, #4]
 3858 00d8 FFF7FEFF 		bl	Cy_SCB_SetRxFifoLevel
 3859              	.L260:
 3860              	.LBE10:
 3861              		.loc 3 1235 0
 3862 00dc 00BF     		nop
 3863 00de 1837     		adds	r7, r7, #24
 3864              		.cfi_def_cfa_offset 8
 3865 00e0 BD46     		mov	sp, r7
 3866              		.cfi_def_cfa_register 13
 3867              		@ sp needed
 3868 00e2 80BD     		pop	{r7, pc}
 3869              		.cfi_endproc
 3870              	.LFE261:
 3871              		.size	HandleDataReceive, .-HandleDataReceive
 3872              		.section	.text.HandleRingBuffer,"ax",%progbits
 3873              		.align	2
 3874              		.thumb
 3875              		.thumb_func
 3876              		.type	HandleRingBuffer, %function
 3877              	HandleRingBuffer:
 3878              	.LFB262:
1236:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1237:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1238:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
1239:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: HandleRingBuffer
1240:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
1241:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1242:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Reads data from the receive FIFO into the receive ring buffer.
1243:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1244:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
1245:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
1246:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1247:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
1248:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
1249:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
1250:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
1251:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
1252:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1253:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
1254:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** static void HandleRingBuffer(CySCB_Type *base, cy_stc_scb_uart_context_t *context)
1255:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 3879              		.loc 3 1255 0
 3880              		.cfi_startproc
 3881              		@ args = 0, pretend = 0, frame = 32
 3882              		@ frame_needed = 1, uses_anonymous_args = 0
 3883 0000 90B5     		push	{r4, r7, lr}
 3884              		.cfi_def_cfa_offset 12
 3885              		.cfi_offset 4, -12
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 150


 3886              		.cfi_offset 7, -8
 3887              		.cfi_offset 14, -4
 3888 0002 89B0     		sub	sp, sp, #36
 3889              		.cfi_def_cfa_offset 48
 3890 0004 00AF     		add	r7, sp, #0
 3891              		.cfi_def_cfa_register 7
 3892 0006 7860     		str	r0, [r7, #4]
 3893 0008 3960     		str	r1, [r7]
1256:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t halfFifoSize = Cy_SCB_GetFifoSize(base) / 2UL;
 3894              		.loc 3 1256 0
 3895 000a 7868     		ldr	r0, [r7, #4]
 3896 000c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 3897 0010 0346     		mov	r3, r0
 3898 0012 5B08     		lsrs	r3, r3, #1
 3899 0014 7B61     		str	r3, [r7, #20]
1257:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t numToCopy = Cy_SCB_GetNumInRxFifo(base);
 3900              		.loc 3 1257 0
 3901 0016 7868     		ldr	r0, [r7, #4]
 3902 0018 FFF7FEFF 		bl	Cy_SCB_GetNumInRxFifo
 3903 001c F861     		str	r0, [r7, #28]
1258:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t locHead = context->rxRingBufHead;
 3904              		.loc 3 1258 0
 3905 001e 3B68     		ldr	r3, [r7]
 3906 0020 1B69     		ldr	r3, [r3, #16]
 3907 0022 BB61     		str	r3, [r7, #24]
1259:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t rxData;
1260:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1261:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Get data into the ring buffer */
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     while (numToCopy > 0UL)
 3908              		.loc 3 1262 0
 3909 0024 47E0     		b	.L262
 3910              	.L271:
1263:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1264:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         ++locHead;
 3911              		.loc 3 1264 0
 3912 0026 BB69     		ldr	r3, [r7, #24]
 3913 0028 0133     		adds	r3, r3, #1
 3914 002a BB61     		str	r3, [r7, #24]
1265:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1266:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (locHead == context->rxRingBufSize)
 3915              		.loc 3 1266 0
 3916 002c 3B68     		ldr	r3, [r7]
 3917 002e DA68     		ldr	r2, [r3, #12]
 3918 0030 BB69     		ldr	r3, [r7, #24]
 3919 0032 9A42     		cmp	r2, r3
 3920 0034 01D1     		bne	.L263
1267:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1268:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             locHead = 0UL;
 3921              		.loc 3 1268 0
 3922 0036 0023     		movs	r3, #0
 3923 0038 BB61     		str	r3, [r7, #24]
 3924              	.L263:
1269:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1270:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1271:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (locHead == context->rxRingBufTail)
 3925              		.loc 3 1271 0
 3926 003a 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 151


 3927 003c 5A69     		ldr	r2, [r3, #20]
 3928 003e BB69     		ldr	r3, [r7, #24]
 3929 0040 9A42     		cmp	r2, r3
 3930 0042 1BD1     		bne	.L264
1272:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1273:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* The ring buffer is full, trigger a callback */
1274:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             if (NULL != context->cbEvents)
 3931              		.loc 3 1274 0
 3932 0044 3B68     		ldr	r3, [r7]
 3933 0046 1B6B     		ldr	r3, [r3, #48]
 3934 0048 002B     		cmp	r3, #0
 3935 004a 03D0     		beq	.L265
1275:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
1276:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 context->cbEvents(CY_SCB_UART_RB_FULL_EVENT);
 3936              		.loc 3 1276 0
 3937 004c 3B68     		ldr	r3, [r7]
 3938 004e 1B6B     		ldr	r3, [r3, #48]
 3939 0050 0820     		movs	r0, #8
 3940 0052 9847     		blx	r3
 3941              	.L265:
1277:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
1278:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1279:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             /* The ring buffer is still full. Disable the RX interrupt not to put data into the rin
1280:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             * The data is stored in the RX FIFO until it overflows. Revert the head index.
1281:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             */
1282:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             if (locHead == context->rxRingBufTail)
 3942              		.loc 3 1282 0
 3943 0054 3B68     		ldr	r3, [r7]
 3944 0056 5A69     		ldr	r2, [r3, #20]
 3945 0058 BB69     		ldr	r3, [r7, #24]
 3946 005a 9A42     		cmp	r2, r3
 3947 005c 0ED1     		bne	.L264
1283:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             {
1284:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 Cy_SCB_SetRxInterruptMask(base, CY_SCB_CLEAR_ALL_INTR_SRC);
 3948              		.loc 3 1284 0
 3949 005e 0021     		movs	r1, #0
 3950 0060 7868     		ldr	r0, [r7, #4]
 3951 0062 FFF7FEFF 		bl	Cy_SCB_SetRxInterruptMask
1285:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1286:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 locHead = (locHead > 0UL) ? (locHead - 1UL) : (context->rxRingBufSize - 1UL);
 3952              		.loc 3 1286 0
 3953 0066 BB69     		ldr	r3, [r7, #24]
 3954 0068 002B     		cmp	r3, #0
 3955 006a 02D0     		beq	.L266
 3956              		.loc 3 1286 0 is_stmt 0 discriminator 1
 3957 006c BB69     		ldr	r3, [r7, #24]
 3958 006e 013B     		subs	r3, r3, #1
 3959 0070 02E0     		b	.L267
 3960              	.L266:
 3961              		.loc 3 1286 0 discriminator 2
 3962 0072 3B68     		ldr	r3, [r7]
 3963 0074 DB68     		ldr	r3, [r3, #12]
 3964 0076 013B     		subs	r3, r3, #1
 3965              	.L267:
 3966              		.loc 3 1286 0 discriminator 4
 3967 0078 BB61     		str	r3, [r7, #24]
1287:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                 break;
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 152


 3968              		.loc 3 1287 0 is_stmt 1 discriminator 4
 3969 007a 1FE0     		b	.L268
 3970              	.L264:
1288:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             }
1289:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1290:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1291:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Get data from RX FIFO. */
1292:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         rxData = Cy_SCB_ReadRxFifo(base);
 3971              		.loc 3 1292 0
 3972 007c 7868     		ldr	r0, [r7, #4]
 3973 007e FFF7FEFF 		bl	Cy_SCB_ReadRxFifo
 3974 0082 3861     		str	r0, [r7, #16]
1293:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1294:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Put a data item in the ring buffer */
1295:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (Cy_SCB_IsRxDataWidthByte(base))
 3975              		.loc 3 1295 0
 3976 0084 7868     		ldr	r0, [r7, #4]
 3977 0086 FFF7FEFF 		bl	Cy_SCB_IsRxDataWidthByte
 3978 008a 0346     		mov	r3, r0
 3979 008c 002B     		cmp	r3, #0
 3980 008e 07D0     		beq	.L269
1296:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1297:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             ((uint8_t *) context->rxRingBuf)[locHead] = (uint8_t) rxData;
 3981              		.loc 3 1297 0
 3982 0090 3B68     		ldr	r3, [r7]
 3983 0092 9A68     		ldr	r2, [r3, #8]
 3984 0094 BB69     		ldr	r3, [r7, #24]
 3985 0096 1344     		add	r3, r3, r2
 3986 0098 3A69     		ldr	r2, [r7, #16]
 3987 009a D2B2     		uxtb	r2, r2
 3988 009c 1A70     		strb	r2, [r3]
 3989 009e 07E0     		b	.L270
 3990              	.L269:
1298:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1299:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         else
1300:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1301:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             ((uint16_t *) context->rxRingBuf)[locHead] = (uint16_t) rxData;
 3991              		.loc 3 1301 0
 3992 00a0 3B68     		ldr	r3, [r7]
 3993 00a2 9A68     		ldr	r2, [r3, #8]
 3994 00a4 BB69     		ldr	r3, [r7, #24]
 3995 00a6 5B00     		lsls	r3, r3, #1
 3996 00a8 1344     		add	r3, r3, r2
 3997 00aa 3A69     		ldr	r2, [r7, #16]
 3998 00ac 92B2     		uxth	r2, r2
 3999 00ae 1A80     		strh	r2, [r3]	@ movhi
 4000              	.L270:
1302:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1303:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1304:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         --numToCopy;
 4001              		.loc 3 1304 0
 4002 00b0 FB69     		ldr	r3, [r7, #28]
 4003 00b2 013B     		subs	r3, r3, #1
 4004 00b4 FB61     		str	r3, [r7, #28]
 4005              	.L262:
1262:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
 4006              		.loc 3 1262 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 153


 4007 00b6 FB69     		ldr	r3, [r7, #28]
 4008 00b8 002B     		cmp	r3, #0
 4009 00ba B4D1     		bne	.L271
 4010              	.L268:
1305:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
1306:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1307:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Update the head index */
1308:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     context->rxRingBufHead = locHead;
 4011              		.loc 3 1308 0
 4012 00bc 3B68     		ldr	r3, [r7]
 4013 00be BA69     		ldr	r2, [r7, #24]
 4014 00c0 1A61     		str	r2, [r3, #16]
1309:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1310:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Get free entries in the ring buffer */
1311:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     numToCopy = context->rxRingBufSize - Cy_SCB_UART_GetNumInRingBuffer(base, context);
 4015              		.loc 3 1311 0
 4016 00c2 3B68     		ldr	r3, [r7]
 4017 00c4 DC68     		ldr	r4, [r3, #12]
 4018 00c6 3968     		ldr	r1, [r7]
 4019 00c8 7868     		ldr	r0, [r7, #4]
 4020 00ca FFF7FEFF 		bl	Cy_SCB_UART_GetNumInRingBuffer
 4021 00ce 0346     		mov	r3, r0
 4022 00d0 E31A     		subs	r3, r4, r3
 4023 00d2 FB61     		str	r3, [r7, #28]
1312:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1313:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (numToCopy < halfFifoSize)
 4024              		.loc 3 1313 0
 4025 00d4 FA69     		ldr	r2, [r7, #28]
 4026 00d6 7B69     		ldr	r3, [r7, #20]
 4027 00d8 9A42     		cmp	r2, r3
 4028 00da 0BD2     		bcs	.L275
 4029              	.LBB11:
1314:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1315:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Adjust the level to copy to the ring buffer */
1316:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint32_t level = (numToCopy > 0UL) ? (numToCopy - 1UL) : 0UL;
 4030              		.loc 3 1316 0
 4031 00dc FB69     		ldr	r3, [r7, #28]
 4032 00de 002B     		cmp	r3, #0
 4033 00e0 02D0     		beq	.L273
 4034              		.loc 3 1316 0 is_stmt 0 discriminator 1
 4035 00e2 FB69     		ldr	r3, [r7, #28]
 4036 00e4 013B     		subs	r3, r3, #1
 4037 00e6 00E0     		b	.L274
 4038              	.L273:
 4039              		.loc 3 1316 0 discriminator 2
 4040 00e8 0023     		movs	r3, #0
 4041              	.L274:
 4042              		.loc 3 1316 0 discriminator 4
 4043 00ea FB60     		str	r3, [r7, #12]
1317:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_SetRxFifoLevel(base, level);
 4044              		.loc 3 1317 0 is_stmt 1 discriminator 4
 4045 00ec F968     		ldr	r1, [r7, #12]
 4046 00ee 7868     		ldr	r0, [r7, #4]
 4047 00f0 FFF7FEFF 		bl	Cy_SCB_SetRxFifoLevel
 4048              	.L275:
 4049              	.LBE11:
1318:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 154


1319:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 4050              		.loc 3 1319 0
 4051 00f4 00BF     		nop
 4052 00f6 2437     		adds	r7, r7, #36
 4053              		.cfi_def_cfa_offset 12
 4054 00f8 BD46     		mov	sp, r7
 4055              		.cfi_def_cfa_register 13
 4056              		@ sp needed
 4057 00fa 90BD     		pop	{r4, r7, pc}
 4058              		.cfi_endproc
 4059              	.LFE262:
 4060              		.size	HandleRingBuffer, .-HandleRingBuffer
 4061              		.section	.text.HandleDataTransmit,"ax",%progbits
 4062              		.align	2
 4063              		.thumb
 4064              		.thumb_func
 4065              		.type	HandleDataTransmit, %function
 4066              	HandleDataTransmit:
 4067              	.LFB263:
1320:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1321:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1322:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** /*******************************************************************************
1323:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Function Name: HandleDataTransmit
1324:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** ****************************************************************************//**
1325:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1326:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * Loads the transmit FIFO with data provided by \ref Cy_SCB_UART_Transmit.
1327:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1328:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param base
1329:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the UART SCB instance.
1330:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1331:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * \param context
1332:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * The pointer to the context structure \ref cy_stc_scb_uart_context_t allocated
1333:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * by the user. The structure is used during the UART operation for internal
1334:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * configuration and data retention. The user must not modify anything
1335:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** * in this structure.
1336:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *
1337:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** *******************************************************************************/
1338:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** static void HandleDataTransmit(CySCB_Type *base, cy_stc_scb_uart_context_t *context)
1339:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** {
 4068              		.loc 3 1339 0
 4069              		.cfi_startproc
 4070              		@ args = 0, pretend = 0, frame = 32
 4071              		@ frame_needed = 1, uses_anonymous_args = 0
 4072 0000 80B5     		push	{r7, lr}
 4073              		.cfi_def_cfa_offset 8
 4074              		.cfi_offset 7, -8
 4075              		.cfi_offset 14, -4
 4076 0002 88B0     		sub	sp, sp, #32
 4077              		.cfi_def_cfa_offset 40
 4078 0004 00AF     		add	r7, sp, #0
 4079              		.cfi_def_cfa_register 7
 4080 0006 7860     		str	r0, [r7, #4]
 4081 0008 3960     		str	r1, [r7]
1340:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t numToCopy;
1341:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     uint32_t fifoSize = Cy_SCB_GetFifoSize(base);
 4082              		.loc 3 1341 0
 4083 000a 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 155


 4084 000c FFF7FEFF 		bl	Cy_SCB_GetFifoSize
 4085 0010 F861     		str	r0, [r7, #28]
1342:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     bool     byteMode = Cy_SCB_IsTxDataWidthByte(base);
 4086              		.loc 3 1342 0
 4087 0012 7868     		ldr	r0, [r7, #4]
 4088 0014 FFF7FEFF 		bl	Cy_SCB_IsTxDataWidthByte
 4089 0018 0346     		mov	r3, r0
 4090 001a FB76     		strb	r3, [r7, #27]
1343:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1344:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if (context->txBufSize > 1UL)
 4091              		.loc 3 1344 0
 4092 001c 3B68     		ldr	r3, [r7]
 4093 001e 9B6A     		ldr	r3, [r3, #40]
 4094 0020 012B     		cmp	r3, #1
 4095 0022 23D9     		bls	.L277
 4096              	.LBB12:
1345:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1346:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint8_t *buf = (uint8_t *) context->txBuf;
 4097              		.loc 3 1346 0
 4098 0024 3B68     		ldr	r3, [r7]
 4099 0026 5B6A     		ldr	r3, [r3, #36]
 4100 0028 7B61     		str	r3, [r7, #20]
1347:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1348:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Get the number of items left for transmission */
1349:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txLeftToTransmit = context->txBufSize;
 4101              		.loc 3 1349 0
 4102 002a 3B68     		ldr	r3, [r7]
 4103 002c 9A6A     		ldr	r2, [r3, #40]
 4104 002e 3B68     		ldr	r3, [r7]
 4105 0030 DA62     		str	r2, [r3, #44]
1350:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1351:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Put data into TX FIFO */
1352:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         numToCopy = Cy_SCB_UART_PutArray(base, context->txBuf, (context->txBufSize - 1UL));
 4106              		.loc 3 1352 0
 4107 0032 3B68     		ldr	r3, [r7]
 4108 0034 596A     		ldr	r1, [r3, #36]
 4109 0036 3B68     		ldr	r3, [r7]
 4110 0038 9B6A     		ldr	r3, [r3, #40]
 4111 003a 013B     		subs	r3, r3, #1
 4112 003c 1A46     		mov	r2, r3
 4113 003e 7868     		ldr	r0, [r7, #4]
 4114 0040 FFF7FEFF 		bl	Cy_SCB_UART_PutArray
 4115 0044 3861     		str	r0, [r7, #16]
1353:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1354:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Move the buffer */
1355:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txBufSize -= numToCopy;
 4116              		.loc 3 1355 0
 4117 0046 3B68     		ldr	r3, [r7]
 4118 0048 9A6A     		ldr	r2, [r3, #40]
 4119 004a 3B69     		ldr	r3, [r7, #16]
 4120 004c D21A     		subs	r2, r2, r3
 4121 004e 3B68     		ldr	r3, [r7]
 4122 0050 9A62     		str	r2, [r3, #40]
1356:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1357:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         buf = &buf[(byteMode) ? (numToCopy) : (2UL * numToCopy)];
 4123              		.loc 3 1357 0
 4124 0052 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 156


 4125 0054 002B     		cmp	r3, #0
 4126 0056 01D0     		beq	.L278
 4127              		.loc 3 1357 0 is_stmt 0 discriminator 1
 4128 0058 3B69     		ldr	r3, [r7, #16]
 4129 005a 01E0     		b	.L279
 4130              	.L278:
 4131              		.loc 3 1357 0 discriminator 2
 4132 005c 3B69     		ldr	r3, [r7, #16]
 4133 005e 5B00     		lsls	r3, r3, #1
 4134              	.L279:
 4135              		.loc 3 1357 0 discriminator 4
 4136 0060 7A69     		ldr	r2, [r7, #20]
 4137 0062 1344     		add	r3, r3, r2
 4138 0064 7B61     		str	r3, [r7, #20]
1358:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txBuf = (void *) buf;
 4139              		.loc 3 1358 0 is_stmt 1 discriminator 4
 4140 0066 3B68     		ldr	r3, [r7]
 4141 0068 7A69     		ldr	r2, [r7, #20]
 4142 006a 5A62     		str	r2, [r3, #36]
 4143              	.L277:
 4144              	.LBE12:
1359:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
1360:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1361:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     /* Put the last data item into TX FIFO */
1362:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     if ((fifoSize != Cy_SCB_GetNumInTxFifo(base)) && (1UL == context->txBufSize))
 4145              		.loc 3 1362 0
 4146 006c 7868     		ldr	r0, [r7, #4]
 4147 006e FFF7FEFF 		bl	Cy_SCB_GetNumInTxFifo
 4148 0072 0246     		mov	r2, r0
 4149 0074 FB69     		ldr	r3, [r7, #28]
 4150 0076 9A42     		cmp	r2, r3
 4151 0078 3CD0     		beq	.L283
 4152              		.loc 3 1362 0 is_stmt 0 discriminator 1
 4153 007a 3B68     		ldr	r3, [r7]
 4154 007c 9B6A     		ldr	r3, [r3, #40]
 4155 007e 012B     		cmp	r3, #1
 4156 0080 38D1     		bne	.L283
 4157              	.LBB13:
1363:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     {
1364:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint32_t txData;
1365:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         uint32_t intrStatus;
1366:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1367:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txBufSize = 0UL;
 4158              		.loc 3 1367 0 is_stmt 1
 4159 0082 3B68     		ldr	r3, [r7]
 4160 0084 0022     		movs	r2, #0
 4161 0086 9A62     		str	r2, [r3, #40]
1368:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1369:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Get the last item from the buffer */
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         txData = (uint32_t) ((byteMode) ? ((uint8_t *)  context->txBuf)[0UL] :
 4162              		.loc 3 1370 0
 4163 0088 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 4164 008a 002B     		cmp	r3, #0
 4165 008c 03D0     		beq	.L281
 4166              		.loc 3 1370 0 is_stmt 0 discriminator 1
 4167 008e 3B68     		ldr	r3, [r7]
 4168 0090 5B6A     		ldr	r3, [r3, #36]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 157


 4169 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4170 0094 02E0     		b	.L282
 4171              	.L281:
1371:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                           ((uint16_t *) context->txBuf)[0UL]);
 4172              		.loc 3 1371 0 is_stmt 1 discriminator 2
 4173 0096 3B68     		ldr	r3, [r7]
 4174 0098 5B6A     		ldr	r3, [r3, #36]
 4175 009a 1B88     		ldrh	r3, [r3]
 4176              	.L282:
1370:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                                           ((uint16_t *) context->txBuf)[0UL]);
 4177              		.loc 3 1370 0 discriminator 4
 4178 009c FB60     		str	r3, [r7, #12]
1372:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1373:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Put the last data element and make sure that "TX done" will happen for it */
1374:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         intrStatus = Cy_SysLib_EnterCriticalSection();
 4179              		.loc 3 1374 0 discriminator 4
 4180 009e FFF7FEFF 		bl	Cy_SysLib_EnterCriticalSection
 4181 00a2 B860     		str	r0, [r7, #8]
1375:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1376:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_WriteTxFifo(base, txData);
 4182              		.loc 3 1376 0 discriminator 4
 4183 00a4 F968     		ldr	r1, [r7, #12]
 4184 00a6 7868     		ldr	r0, [r7, #4]
 4185 00a8 FFF7FEFF 		bl	Cy_SCB_WriteTxFifo
1377:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_ClearTxInterrupt(base, CY_SCB_TX_INTR_UART_DONE);
 4186              		.loc 3 1377 0 discriminator 4
 4187 00ac 4FF40071 		mov	r1, #512
 4188 00b0 7868     		ldr	r0, [r7, #4]
 4189 00b2 FFF7FEFF 		bl	Cy_SCB_ClearTxInterrupt
1378:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1379:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SysLib_ExitCriticalSection(intrStatus);
 4190              		.loc 3 1379 0 discriminator 4
 4191 00b6 B868     		ldr	r0, [r7, #8]
 4192 00b8 FFF7FEFF 		bl	Cy_SysLib_ExitCriticalSection
1380:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1381:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Disable the level interrupt source and enable "transfer done" */
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         Cy_SCB_SetTxInterruptMask(base, (CY_SCB_TX_INTR_UART_DONE |
1383:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     (Cy_SCB_GetTxInterruptMask(base) & (uint32_t) ~CY_SCB_TX_INTR_LEVEL)));
 4193              		.loc 3 1383 0 discriminator 4
 4194 00bc 7868     		ldr	r0, [r7, #4]
 4195 00be FFF7FEFF 		bl	Cy_SCB_GetTxInterruptMask
 4196 00c2 0346     		mov	r3, r0
1382:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****                     (Cy_SCB_GetTxInterruptMask(base) & (uint32_t) ~CY_SCB_TX_INTR_LEVEL)));
 4197              		.loc 3 1382 0 discriminator 4
 4198 00c4 23F40073 		bic	r3, r3, #512
 4199 00c8 23F00103 		bic	r3, r3, #1
 4200 00cc 43F40073 		orr	r3, r3, #512
 4201 00d0 1946     		mov	r1, r3
 4202 00d2 7868     		ldr	r0, [r7, #4]
 4203 00d4 FFF7FEFF 		bl	Cy_SCB_SetTxInterruptMask
1384:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1385:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         /* Data is copied into TX FIFO */
1386:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         context->txStatus |= CY_SCB_UART_TRANSMIT_IN_FIFO;
 4204              		.loc 3 1386 0 discriminator 4
 4205 00d8 3B68     		ldr	r3, [r7]
 4206 00da 1B68     		ldr	r3, [r3]
 4207 00dc 43F00202 		orr	r2, r3, #2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 158


 4208 00e0 3B68     		ldr	r3, [r7]
 4209 00e2 1A60     		str	r2, [r3]
1387:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** 
1388:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         if (NULL != context->cbEvents)
 4210              		.loc 3 1388 0 discriminator 4
 4211 00e4 3B68     		ldr	r3, [r7]
 4212 00e6 1B6B     		ldr	r3, [r3, #48]
 4213 00e8 002B     		cmp	r3, #0
 4214 00ea 03D0     		beq	.L283
1389:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         {
1390:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****             context->cbEvents(CY_SCB_UART_TRANSMIT_IN_FIFO_EVENT);
 4215              		.loc 3 1390 0
 4216 00ec 3B68     		ldr	r3, [r7]
 4217 00ee 1B6B     		ldr	r3, [r3, #48]
 4218 00f0 0120     		movs	r0, #1
 4219 00f2 9847     		blx	r3
 4220              	.L283:
 4221              	.LBE13:
1391:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****         }
1392:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c ****     }
1393:Generated_Source\PSoC6\pdl\drivers\peripheral\scb/cy_scb_uart.c **** }
 4222              		.loc 3 1393 0
 4223 00f4 00BF     		nop
 4224 00f6 2037     		adds	r7, r7, #32
 4225              		.cfi_def_cfa_offset 8
 4226 00f8 BD46     		mov	sp, r7
 4227              		.cfi_def_cfa_register 13
 4228              		@ sp needed
 4229 00fa 80BD     		pop	{r7, pc}
 4230              		.cfi_endproc
 4231              	.LFE263:
 4232              		.size	HandleDataTransmit, .-HandleDataTransmit
 4233              		.text
 4234              	.Letext0:
 4235              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4236              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4237              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 4238              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_scb.h"
 4239              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 4240              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 4241              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
 4242              		.file 11 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4243              		.section	.debug_info,"",%progbits
 4244              	.Ldebug_info0:
 4245 0000 291B0000 		.4byte	0x1b29
 4246 0004 0400     		.2byte	0x4
 4247 0006 00000000 		.4byte	.Ldebug_abbrev0
 4248 000a 04       		.byte	0x4
 4249 000b 01       		.uleb128 0x1
 4250 000c D4140000 		.4byte	.LASF345
 4251 0010 0C       		.byte	0xc
 4252 0011 41080000 		.4byte	.LASF346
 4253 0015 E0000000 		.4byte	.LASF347
 4254 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4255 001d 00000000 		.4byte	0
 4256 0021 00000000 		.4byte	.Ldebug_line0
 4257 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 159


 4258 0026 01       		.byte	0x1
 4259 0027 06       		.byte	0x6
 4260 0028 91130000 		.4byte	.LASF0
 4261 002c 03       		.uleb128 0x3
 4262 002d 2A100000 		.4byte	.LASF2
 4263 0031 04       		.byte	0x4
 4264 0032 1D       		.byte	0x1d
 4265 0033 37000000 		.4byte	0x37
 4266 0037 02       		.uleb128 0x2
 4267 0038 01       		.byte	0x1
 4268 0039 08       		.byte	0x8
 4269 003a 08120000 		.4byte	.LASF1
 4270 003e 03       		.uleb128 0x3
 4271 003f F30B0000 		.4byte	.LASF3
 4272 0043 04       		.byte	0x4
 4273 0044 29       		.byte	0x29
 4274 0045 49000000 		.4byte	0x49
 4275 0049 02       		.uleb128 0x2
 4276 004a 02       		.byte	0x2
 4277 004b 05       		.byte	0x5
 4278 004c 3D0A0000 		.4byte	.LASF4
 4279 0050 03       		.uleb128 0x3
 4280 0051 39060000 		.4byte	.LASF5
 4281 0055 04       		.byte	0x4
 4282 0056 2B       		.byte	0x2b
 4283 0057 5B000000 		.4byte	0x5b
 4284 005b 02       		.uleb128 0x2
 4285 005c 02       		.byte	0x2
 4286 005d 07       		.byte	0x7
 4287 005e 630D0000 		.4byte	.LASF6
 4288 0062 03       		.uleb128 0x3
 4289 0063 65020000 		.4byte	.LASF7
 4290 0067 04       		.byte	0x4
 4291 0068 3F       		.byte	0x3f
 4292 0069 6D000000 		.4byte	0x6d
 4293 006d 02       		.uleb128 0x2
 4294 006e 04       		.byte	0x4
 4295 006f 05       		.byte	0x5
 4296 0070 240F0000 		.4byte	.LASF8
 4297 0074 03       		.uleb128 0x3
 4298 0075 44120000 		.4byte	.LASF9
 4299 0079 04       		.byte	0x4
 4300 007a 41       		.byte	0x41
 4301 007b 7F000000 		.4byte	0x7f
 4302 007f 02       		.uleb128 0x2
 4303 0080 04       		.byte	0x4
 4304 0081 07       		.byte	0x7
 4305 0082 08110000 		.4byte	.LASF10
 4306 0086 02       		.uleb128 0x2
 4307 0087 08       		.byte	0x8
 4308 0088 05       		.byte	0x5
 4309 0089 E00A0000 		.4byte	.LASF11
 4310 008d 02       		.uleb128 0x2
 4311 008e 08       		.byte	0x8
 4312 008f 07       		.byte	0x7
 4313 0090 B2050000 		.4byte	.LASF12
 4314 0094 04       		.uleb128 0x4
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 160


 4315 0095 04       		.byte	0x4
 4316 0096 05       		.byte	0x5
 4317 0097 696E7400 		.ascii	"int\000"
 4318 009b 02       		.uleb128 0x2
 4319 009c 04       		.byte	0x4
 4320 009d 07       		.byte	0x7
 4321 009e DB010000 		.4byte	.LASF13
 4322 00a2 03       		.uleb128 0x3
 4323 00a3 030A0000 		.4byte	.LASF14
 4324 00a7 05       		.byte	0x5
 4325 00a8 18       		.byte	0x18
 4326 00a9 2C000000 		.4byte	0x2c
 4327 00ad 03       		.uleb128 0x3
 4328 00ae 72050000 		.4byte	.LASF15
 4329 00b2 05       		.byte	0x5
 4330 00b3 20       		.byte	0x20
 4331 00b4 3E000000 		.4byte	0x3e
 4332 00b8 03       		.uleb128 0x3
 4333 00b9 A40D0000 		.4byte	.LASF16
 4334 00bd 05       		.byte	0x5
 4335 00be 24       		.byte	0x24
 4336 00bf 50000000 		.4byte	0x50
 4337 00c3 03       		.uleb128 0x3
 4338 00c4 3A110000 		.4byte	.LASF17
 4339 00c8 05       		.byte	0x5
 4340 00c9 2C       		.byte	0x2c
 4341 00ca 62000000 		.4byte	0x62
 4342 00ce 03       		.uleb128 0x3
 4343 00cf 7C040000 		.4byte	.LASF18
 4344 00d3 05       		.byte	0x5
 4345 00d4 30       		.byte	0x30
 4346 00d5 74000000 		.4byte	0x74
 4347 00d9 02       		.uleb128 0x2
 4348 00da 08       		.byte	0x8
 4349 00db 04       		.byte	0x4
 4350 00dc 980D0000 		.4byte	.LASF19
 4351 00e0 05       		.uleb128 0x5
 4352 00e1 CE000000 		.4byte	0xce
 4353 00e5 06       		.uleb128 0x6
 4354 00e6 E0000000 		.4byte	0xe0
 4355 00ea 07       		.uleb128 0x7
 4356 00eb E5000000 		.4byte	0xe5
 4357 00ef FA000000 		.4byte	0xfa
 4358 00f3 08       		.uleb128 0x8
 4359 00f4 FA000000 		.4byte	0xfa
 4360 00f8 02       		.byte	0x2
 4361 00f9 00       		.byte	0
 4362 00fa 02       		.uleb128 0x2
 4363 00fb 04       		.byte	0x4
 4364 00fc 07       		.byte	0x7
 4365 00fd 580E0000 		.4byte	.LASF20
 4366 0101 07       		.uleb128 0x7
 4367 0102 E5000000 		.4byte	0xe5
 4368 0106 11010000 		.4byte	0x111
 4369 010a 08       		.uleb128 0x8
 4370 010b FA000000 		.4byte	0xfa
 4371 010f 03       		.byte	0x3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 161


 4372 0110 00       		.byte	0
 4373 0111 07       		.uleb128 0x7
 4374 0112 E5000000 		.4byte	0xe5
 4375 0116 21010000 		.4byte	0x121
 4376 011a 08       		.uleb128 0x8
 4377 011b FA000000 		.4byte	0xfa
 4378 011f 3E       		.byte	0x3e
 4379 0120 00       		.byte	0
 4380 0121 07       		.uleb128 0x7
 4381 0122 E5000000 		.4byte	0xe5
 4382 0126 31010000 		.4byte	0x131
 4383 012a 08       		.uleb128 0x8
 4384 012b FA000000 		.4byte	0xfa
 4385 012f 1E       		.byte	0x1e
 4386 0130 00       		.byte	0
 4387 0131 07       		.uleb128 0x7
 4388 0132 E5000000 		.4byte	0xe5
 4389 0136 41010000 		.4byte	0x141
 4390 013a 08       		.uleb128 0x8
 4391 013b FA000000 		.4byte	0xfa
 4392 013f 0C       		.byte	0xc
 4393 0140 00       		.byte	0
 4394 0141 07       		.uleb128 0x7
 4395 0142 E5000000 		.4byte	0xe5
 4396 0146 51010000 		.4byte	0x151
 4397 014a 08       		.uleb128 0x8
 4398 014b FA000000 		.4byte	0xfa
 4399 014f 0B       		.byte	0xb
 4400 0150 00       		.byte	0
 4401 0151 07       		.uleb128 0x7
 4402 0152 E5000000 		.4byte	0xe5
 4403 0156 61010000 		.4byte	0x161
 4404 015a 08       		.uleb128 0x8
 4405 015b FA000000 		.4byte	0xfa
 4406 015f 05       		.byte	0x5
 4407 0160 00       		.byte	0
 4408 0161 07       		.uleb128 0x7
 4409 0162 E5000000 		.4byte	0xe5
 4410 0166 71010000 		.4byte	0x171
 4411 016a 08       		.uleb128 0x8
 4412 016b FA000000 		.4byte	0xfa
 4413 016f 7F       		.byte	0x7f
 4414 0170 00       		.byte	0
 4415 0171 09       		.uleb128 0x9
 4416 0172 B8       		.byte	0xb8
 4417 0173 06       		.byte	0x6
 4418 0174 34       		.byte	0x34
 4419 0175 82050000 		.4byte	0x582
 4420 0179 0A       		.uleb128 0xa
 4421 017a 89020000 		.4byte	.LASF21
 4422 017e 06       		.byte	0x6
 4423 017f 37       		.byte	0x37
 4424 0180 CE000000 		.4byte	0xce
 4425 0184 00       		.byte	0
 4426 0185 0A       		.uleb128 0xa
 4427 0186 03090000 		.4byte	.LASF22
 4428 018a 06       		.byte	0x6
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 162


 4429 018b 38       		.byte	0x38
 4430 018c CE000000 		.4byte	0xce
 4431 0190 04       		.byte	0x4
 4432 0191 0A       		.uleb128 0xa
 4433 0192 62010000 		.4byte	.LASF23
 4434 0196 06       		.byte	0x6
 4435 0197 39       		.byte	0x39
 4436 0198 CE000000 		.4byte	0xce
 4437 019c 08       		.byte	0x8
 4438 019d 0A       		.uleb128 0xa
 4439 019e D8000000 		.4byte	.LASF24
 4440 01a2 06       		.byte	0x6
 4441 01a3 3A       		.byte	0x3a
 4442 01a4 CE000000 		.4byte	0xce
 4443 01a8 0C       		.byte	0xc
 4444 01a9 0A       		.uleb128 0xa
 4445 01aa BE0D0000 		.4byte	.LASF25
 4446 01ae 06       		.byte	0x6
 4447 01af 3B       		.byte	0x3b
 4448 01b0 CE000000 		.4byte	0xce
 4449 01b4 10       		.byte	0x10
 4450 01b5 0A       		.uleb128 0xa
 4451 01b6 2E0C0000 		.4byte	.LASF26
 4452 01ba 06       		.byte	0x6
 4453 01bb 3C       		.byte	0x3c
 4454 01bc CE000000 		.4byte	0xce
 4455 01c0 14       		.byte	0x14
 4456 01c1 0A       		.uleb128 0xa
 4457 01c2 CF070000 		.4byte	.LASF27
 4458 01c6 06       		.byte	0x6
 4459 01c7 3D       		.byte	0x3d
 4460 01c8 CE000000 		.4byte	0xce
 4461 01cc 18       		.byte	0x18
 4462 01cd 0A       		.uleb128 0xa
 4463 01ce 43140000 		.4byte	.LASF28
 4464 01d2 06       		.byte	0x6
 4465 01d3 3E       		.byte	0x3e
 4466 01d4 CE000000 		.4byte	0xce
 4467 01d8 1C       		.byte	0x1c
 4468 01d9 0A       		.uleb128 0xa
 4469 01da EE0A0000 		.4byte	.LASF29
 4470 01de 06       		.byte	0x6
 4471 01df 3F       		.byte	0x3f
 4472 01e0 CE000000 		.4byte	0xce
 4473 01e4 20       		.byte	0x20
 4474 01e5 0A       		.uleb128 0xa
 4475 01e6 050B0000 		.4byte	.LASF30
 4476 01ea 06       		.byte	0x6
 4477 01eb 40       		.byte	0x40
 4478 01ec CE000000 		.4byte	0xce
 4479 01f0 24       		.byte	0x24
 4480 01f1 0A       		.uleb128 0xa
 4481 01f2 2D0F0000 		.4byte	.LASF31
 4482 01f6 06       		.byte	0x6
 4483 01f7 43       		.byte	0x43
 4484 01f8 A2000000 		.4byte	0xa2
 4485 01fc 28       		.byte	0x28
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 163


 4486 01fd 0A       		.uleb128 0xa
 4487 01fe 11050000 		.4byte	.LASF32
 4488 0202 06       		.byte	0x6
 4489 0203 44       		.byte	0x44
 4490 0204 A2000000 		.4byte	0xa2
 4491 0208 29       		.byte	0x29
 4492 0209 0A       		.uleb128 0xa
 4493 020a 1A0E0000 		.4byte	.LASF33
 4494 020e 06       		.byte	0x6
 4495 020f 45       		.byte	0x45
 4496 0210 A2000000 		.4byte	0xa2
 4497 0214 2A       		.byte	0x2a
 4498 0215 0A       		.uleb128 0xa
 4499 0216 600F0000 		.4byte	.LASF34
 4500 021a 06       		.byte	0x6
 4501 021b 46       		.byte	0x46
 4502 021c A2000000 		.4byte	0xa2
 4503 0220 2B       		.byte	0x2b
 4504 0221 0A       		.uleb128 0xa
 4505 0222 450F0000 		.4byte	.LASF35
 4506 0226 06       		.byte	0x6
 4507 0227 47       		.byte	0x47
 4508 0228 A2000000 		.4byte	0xa2
 4509 022c 2C       		.byte	0x2c
 4510 022d 0A       		.uleb128 0xa
 4511 022e FB100000 		.4byte	.LASF36
 4512 0232 06       		.byte	0x6
 4513 0233 48       		.byte	0x48
 4514 0234 A2000000 		.4byte	0xa2
 4515 0238 2D       		.byte	0x2d
 4516 0239 0A       		.uleb128 0xa
 4517 023a FB150000 		.4byte	.LASF37
 4518 023e 06       		.byte	0x6
 4519 023f 49       		.byte	0x49
 4520 0240 A2000000 		.4byte	0xa2
 4521 0244 2E       		.byte	0x2e
 4522 0245 0A       		.uleb128 0xa
 4523 0246 30140000 		.4byte	.LASF38
 4524 024a 06       		.byte	0x6
 4525 024b 4A       		.byte	0x4a
 4526 024c A2000000 		.4byte	0xa2
 4527 0250 2F       		.byte	0x2f
 4528 0251 0A       		.uleb128 0xa
 4529 0252 B7030000 		.4byte	.LASF39
 4530 0256 06       		.byte	0x6
 4531 0257 4B       		.byte	0x4b
 4532 0258 A2000000 		.4byte	0xa2
 4533 025c 30       		.byte	0x30
 4534 025d 0A       		.uleb128 0xa
 4535 025e A30C0000 		.4byte	.LASF40
 4536 0262 06       		.byte	0x6
 4537 0263 4E       		.byte	0x4e
 4538 0264 A2000000 		.4byte	0xa2
 4539 0268 31       		.byte	0x31
 4540 0269 0A       		.uleb128 0xa
 4541 026a B2130000 		.4byte	.LASF41
 4542 026e 06       		.byte	0x6
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 164


 4543 026f 4F       		.byte	0x4f
 4544 0270 A2000000 		.4byte	0xa2
 4545 0274 32       		.byte	0x32
 4546 0275 0A       		.uleb128 0xa
 4547 0276 810C0000 		.4byte	.LASF42
 4548 027a 06       		.byte	0x6
 4549 027b 50       		.byte	0x50
 4550 027c A2000000 		.4byte	0xa2
 4551 0280 33       		.byte	0x33
 4552 0281 0A       		.uleb128 0xa
 4553 0282 47020000 		.4byte	.LASF43
 4554 0286 06       		.byte	0x6
 4555 0287 51       		.byte	0x51
 4556 0288 A2000000 		.4byte	0xa2
 4557 028c 34       		.byte	0x34
 4558 028d 0A       		.uleb128 0xa
 4559 028e 0B060000 		.4byte	.LASF44
 4560 0292 06       		.byte	0x6
 4561 0293 52       		.byte	0x52
 4562 0294 AD000000 		.4byte	0xad
 4563 0298 36       		.byte	0x36
 4564 0299 0A       		.uleb128 0xa
 4565 029a 08030000 		.4byte	.LASF45
 4566 029e 06       		.byte	0x6
 4567 029f 53       		.byte	0x53
 4568 02a0 AD000000 		.4byte	0xad
 4569 02a4 38       		.byte	0x38
 4570 02a5 0A       		.uleb128 0xa
 4571 02a6 5E0C0000 		.4byte	.LASF46
 4572 02aa 06       		.byte	0x6
 4573 02ab 54       		.byte	0x54
 4574 02ac AD000000 		.4byte	0xad
 4575 02b0 3A       		.byte	0x3a
 4576 02b1 0A       		.uleb128 0xa
 4577 02b2 7D140000 		.4byte	.LASF47
 4578 02b6 06       		.byte	0x6
 4579 02b7 55       		.byte	0x55
 4580 02b8 A2000000 		.4byte	0xa2
 4581 02bc 3C       		.byte	0x3c
 4582 02bd 0A       		.uleb128 0xa
 4583 02be F0060000 		.4byte	.LASF48
 4584 02c2 06       		.byte	0x6
 4585 02c3 56       		.byte	0x56
 4586 02c4 A2000000 		.4byte	0xa2
 4587 02c8 3D       		.byte	0x3d
 4588 02c9 0A       		.uleb128 0xa
 4589 02ca ED0D0000 		.4byte	.LASF49
 4590 02ce 06       		.byte	0x6
 4591 02cf 57       		.byte	0x57
 4592 02d0 A2000000 		.4byte	0xa2
 4593 02d4 3E       		.byte	0x3e
 4594 02d5 0A       		.uleb128 0xa
 4595 02d6 44060000 		.4byte	.LASF50
 4596 02da 06       		.byte	0x6
 4597 02db 58       		.byte	0x58
 4598 02dc A2000000 		.4byte	0xa2
 4599 02e0 3F       		.byte	0x3f
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 165


 4600 02e1 0A       		.uleb128 0xa
 4601 02e2 F3010000 		.4byte	.LASF51
 4602 02e6 06       		.byte	0x6
 4603 02e7 59       		.byte	0x59
 4604 02e8 A2000000 		.4byte	0xa2
 4605 02ec 40       		.byte	0x40
 4606 02ed 0A       		.uleb128 0xa
 4607 02ee DA0C0000 		.4byte	.LASF52
 4608 02f2 06       		.byte	0x6
 4609 02f3 5A       		.byte	0x5a
 4610 02f4 A2000000 		.4byte	0xa2
 4611 02f8 41       		.byte	0x41
 4612 02f9 0A       		.uleb128 0xa
 4613 02fa 5F130000 		.4byte	.LASF53
 4614 02fe 06       		.byte	0x6
 4615 02ff 5B       		.byte	0x5b
 4616 0300 A2000000 		.4byte	0xa2
 4617 0304 42       		.byte	0x42
 4618 0305 0A       		.uleb128 0xa
 4619 0306 36080000 		.4byte	.LASF54
 4620 030a 06       		.byte	0x6
 4621 030b 5C       		.byte	0x5c
 4622 030c A2000000 		.4byte	0xa2
 4623 0310 43       		.byte	0x43
 4624 0311 0A       		.uleb128 0xa
 4625 0312 60090000 		.4byte	.LASF55
 4626 0316 06       		.byte	0x6
 4627 0317 5D       		.byte	0x5d
 4628 0318 A2000000 		.4byte	0xa2
 4629 031c 44       		.byte	0x44
 4630 031d 0A       		.uleb128 0xa
 4631 031e 6E0F0000 		.4byte	.LASF56
 4632 0322 06       		.byte	0x6
 4633 0323 5E       		.byte	0x5e
 4634 0324 CE000000 		.4byte	0xce
 4635 0328 48       		.byte	0x48
 4636 0329 0A       		.uleb128 0xa
 4637 032a 54030000 		.4byte	.LASF57
 4638 032e 06       		.byte	0x6
 4639 032f 5F       		.byte	0x5f
 4640 0330 CE000000 		.4byte	0xce
 4641 0334 4C       		.byte	0x4c
 4642 0335 0A       		.uleb128 0xa
 4643 0336 520D0000 		.4byte	.LASF58
 4644 033a 06       		.byte	0x6
 4645 033b 60       		.byte	0x60
 4646 033c A2000000 		.4byte	0xa2
 4647 0340 50       		.byte	0x50
 4648 0341 0A       		.uleb128 0xa
 4649 0342 3B070000 		.4byte	.LASF59
 4650 0346 06       		.byte	0x6
 4651 0347 61       		.byte	0x61
 4652 0348 A2000000 		.4byte	0xa2
 4653 034c 51       		.byte	0x51
 4654 034d 0A       		.uleb128 0xa
 4655 034e 260B0000 		.4byte	.LASF60
 4656 0352 06       		.byte	0x6
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 166


 4657 0353 62       		.byte	0x62
 4658 0354 A2000000 		.4byte	0xa2
 4659 0358 52       		.byte	0x52
 4660 0359 0A       		.uleb128 0xa
 4661 035a 2D050000 		.4byte	.LASF61
 4662 035e 06       		.byte	0x6
 4663 035f 63       		.byte	0x63
 4664 0360 A2000000 		.4byte	0xa2
 4665 0364 53       		.byte	0x53
 4666 0365 0A       		.uleb128 0xa
 4667 0366 7F060000 		.4byte	.LASF62
 4668 036a 06       		.byte	0x6
 4669 036b 64       		.byte	0x64
 4670 036c A2000000 		.4byte	0xa2
 4671 0370 54       		.byte	0x54
 4672 0371 0A       		.uleb128 0xa
 4673 0372 AE070000 		.4byte	.LASF63
 4674 0376 06       		.byte	0x6
 4675 0377 65       		.byte	0x65
 4676 0378 A2000000 		.4byte	0xa2
 4677 037c 55       		.byte	0x55
 4678 037d 0A       		.uleb128 0xa
 4679 037e 00000000 		.4byte	.LASF64
 4680 0382 06       		.byte	0x6
 4681 0383 66       		.byte	0x66
 4682 0384 A2000000 		.4byte	0xa2
 4683 0388 56       		.byte	0x56
 4684 0389 0A       		.uleb128 0xa
 4685 038a 4C140000 		.4byte	.LASF65
 4686 038e 06       		.byte	0x6
 4687 038f 67       		.byte	0x67
 4688 0390 A2000000 		.4byte	0xa2
 4689 0394 57       		.byte	0x57
 4690 0395 0A       		.uleb128 0xa
 4691 0396 DC060000 		.4byte	.LASF66
 4692 039a 06       		.byte	0x6
 4693 039b 68       		.byte	0x68
 4694 039c A2000000 		.4byte	0xa2
 4695 03a0 58       		.byte	0x58
 4696 03a1 0A       		.uleb128 0xa
 4697 03a2 93140000 		.4byte	.LASF67
 4698 03a6 06       		.byte	0x6
 4699 03a7 69       		.byte	0x69
 4700 03a8 A2000000 		.4byte	0xa2
 4701 03ac 59       		.byte	0x59
 4702 03ad 0A       		.uleb128 0xa
 4703 03ae 9D130000 		.4byte	.LASF68
 4704 03b2 06       		.byte	0x6
 4705 03b3 6E       		.byte	0x6e
 4706 03b4 B8000000 		.4byte	0xb8
 4707 03b8 5A       		.byte	0x5a
 4708 03b9 0A       		.uleb128 0xa
 4709 03ba 9A010000 		.4byte	.LASF69
 4710 03be 06       		.byte	0x6
 4711 03bf 6F       		.byte	0x6f
 4712 03c0 B8000000 		.4byte	0xb8
 4713 03c4 5C       		.byte	0x5c
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 167


 4714 03c5 0A       		.uleb128 0xa
 4715 03c6 F60A0000 		.4byte	.LASF70
 4716 03ca 06       		.byte	0x6
 4717 03cb 70       		.byte	0x70
 4718 03cc A2000000 		.4byte	0xa2
 4719 03d0 5E       		.byte	0x5e
 4720 03d1 0A       		.uleb128 0xa
 4721 03d2 CD130000 		.4byte	.LASF71
 4722 03d6 06       		.byte	0x6
 4723 03d7 71       		.byte	0x71
 4724 03d8 A2000000 		.4byte	0xa2
 4725 03dc 5F       		.byte	0x5f
 4726 03dd 0A       		.uleb128 0xa
 4727 03de 81080000 		.4byte	.LASF72
 4728 03e2 06       		.byte	0x6
 4729 03e3 72       		.byte	0x72
 4730 03e4 A2000000 		.4byte	0xa2
 4731 03e8 60       		.byte	0x60
 4732 03e9 0A       		.uleb128 0xa
 4733 03ea F2090000 		.4byte	.LASF73
 4734 03ee 06       		.byte	0x6
 4735 03ef 73       		.byte	0x73
 4736 03f0 CE000000 		.4byte	0xce
 4737 03f4 64       		.byte	0x64
 4738 03f5 0A       		.uleb128 0xa
 4739 03f6 21160000 		.4byte	.LASF74
 4740 03fa 06       		.byte	0x6
 4741 03fb 76       		.byte	0x76
 4742 03fc B8000000 		.4byte	0xb8
 4743 0400 68       		.byte	0x68
 4744 0401 0A       		.uleb128 0xa
 4745 0402 C70D0000 		.4byte	.LASF75
 4746 0406 06       		.byte	0x6
 4747 0407 77       		.byte	0x77
 4748 0408 B8000000 		.4byte	0xb8
 4749 040c 6A       		.byte	0x6a
 4750 040d 0A       		.uleb128 0xa
 4751 040e 4F0C0000 		.4byte	.LASF76
 4752 0412 06       		.byte	0x6
 4753 0413 78       		.byte	0x78
 4754 0414 B8000000 		.4byte	0xb8
 4755 0418 6C       		.byte	0x6c
 4756 0419 0A       		.uleb128 0xa
 4757 041a 13030000 		.4byte	.LASF77
 4758 041e 06       		.byte	0x6
 4759 041f 79       		.byte	0x79
 4760 0420 B8000000 		.4byte	0xb8
 4761 0424 6E       		.byte	0x6e
 4762 0425 0A       		.uleb128 0xa
 4763 0426 290A0000 		.4byte	.LASF78
 4764 042a 06       		.byte	0x6
 4765 042b 7B       		.byte	0x7b
 4766 042c A2000000 		.4byte	0xa2
 4767 0430 70       		.byte	0x70
 4768 0431 0A       		.uleb128 0xa
 4769 0432 D0030000 		.4byte	.LASF79
 4770 0436 06       		.byte	0x6
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 168


 4771 0437 7C       		.byte	0x7c
 4772 0438 A2000000 		.4byte	0xa2
 4773 043c 71       		.byte	0x71
 4774 043d 0A       		.uleb128 0xa
 4775 043e 20030000 		.4byte	.LASF80
 4776 0442 06       		.byte	0x6
 4777 0443 7D       		.byte	0x7d
 4778 0444 A2000000 		.4byte	0xa2
 4779 0448 72       		.byte	0x72
 4780 0449 0A       		.uleb128 0xa
 4781 044a 17020000 		.4byte	.LASF81
 4782 044e 06       		.byte	0x6
 4783 044f 7E       		.byte	0x7e
 4784 0450 A2000000 		.4byte	0xa2
 4785 0454 73       		.byte	0x73
 4786 0455 0A       		.uleb128 0xa
 4787 0456 930E0000 		.4byte	.LASF82
 4788 045a 06       		.byte	0x6
 4789 045b 80       		.byte	0x80
 4790 045c B8000000 		.4byte	0xb8
 4791 0460 74       		.byte	0x74
 4792 0461 0A       		.uleb128 0xa
 4793 0462 3F0D0000 		.4byte	.LASF83
 4794 0466 06       		.byte	0x6
 4795 0467 81       		.byte	0x81
 4796 0468 B8000000 		.4byte	0xb8
 4797 046c 76       		.byte	0x76
 4798 046d 0A       		.uleb128 0xa
 4799 046e 470A0000 		.4byte	.LASF84
 4800 0472 06       		.byte	0x6
 4801 0473 82       		.byte	0x82
 4802 0474 B8000000 		.4byte	0xb8
 4803 0478 78       		.byte	0x78
 4804 0479 0A       		.uleb128 0xa
 4805 047a C9050000 		.4byte	.LASF85
 4806 047e 06       		.byte	0x6
 4807 047f 83       		.byte	0x83
 4808 0480 B8000000 		.4byte	0xb8
 4809 0484 7A       		.byte	0x7a
 4810 0485 0A       		.uleb128 0xa
 4811 0486 82100000 		.4byte	.LASF86
 4812 048a 06       		.byte	0x6
 4813 048b 86       		.byte	0x86
 4814 048c A2000000 		.4byte	0xa2
 4815 0490 7C       		.byte	0x7c
 4816 0491 0A       		.uleb128 0xa
 4817 0492 C6120000 		.4byte	.LASF87
 4818 0496 06       		.byte	0x6
 4819 0497 87       		.byte	0x87
 4820 0498 A2000000 		.4byte	0xa2
 4821 049c 7D       		.byte	0x7d
 4822 049d 0A       		.uleb128 0xa
 4823 049e E00B0000 		.4byte	.LASF88
 4824 04a2 06       		.byte	0x6
 4825 04a3 88       		.byte	0x88
 4826 04a4 A2000000 		.4byte	0xa2
 4827 04a8 7E       		.byte	0x7e
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 169


 4828 04a9 0A       		.uleb128 0xa
 4829 04aa D7040000 		.4byte	.LASF89
 4830 04ae 06       		.byte	0x6
 4831 04af 89       		.byte	0x89
 4832 04b0 A2000000 		.4byte	0xa2
 4833 04b4 7F       		.byte	0x7f
 4834 04b5 0A       		.uleb128 0xa
 4835 04b6 DE050000 		.4byte	.LASF90
 4836 04ba 06       		.byte	0x6
 4837 04bb 8A       		.byte	0x8a
 4838 04bc A2000000 		.4byte	0xa2
 4839 04c0 80       		.byte	0x80
 4840 04c1 0A       		.uleb128 0xa
 4841 04c2 65000000 		.4byte	.LASF91
 4842 04c6 06       		.byte	0x6
 4843 04c7 8D       		.byte	0x8d
 4844 04c8 CE000000 		.4byte	0xce
 4845 04cc 84       		.byte	0x84
 4846 04cd 0A       		.uleb128 0xa
 4847 04ce 380C0000 		.4byte	.LASF92
 4848 04d2 06       		.byte	0x6
 4849 04d3 8E       		.byte	0x8e
 4850 04d4 CE000000 		.4byte	0xce
 4851 04d8 88       		.byte	0x88
 4852 04d9 0A       		.uleb128 0xa
 4853 04da AE0C0000 		.4byte	.LASF93
 4854 04de 06       		.byte	0x6
 4855 04df 8F       		.byte	0x8f
 4856 04e0 CE000000 		.4byte	0xce
 4857 04e4 8C       		.byte	0x8c
 4858 04e5 0A       		.uleb128 0xa
 4859 04e6 D0110000 		.4byte	.LASF94
 4860 04ea 06       		.byte	0x6
 4861 04eb 90       		.byte	0x90
 4862 04ec CE000000 		.4byte	0xce
 4863 04f0 90       		.byte	0x90
 4864 04f1 0A       		.uleb128 0xa
 4865 04f2 070D0000 		.4byte	.LASF95
 4866 04f6 06       		.byte	0x6
 4867 04f7 91       		.byte	0x91
 4868 04f8 CE000000 		.4byte	0xce
 4869 04fc 94       		.byte	0x94
 4870 04fd 0A       		.uleb128 0xa
 4871 04fe E5030000 		.4byte	.LASF96
 4872 0502 06       		.byte	0x6
 4873 0503 92       		.byte	0x92
 4874 0504 CE000000 		.4byte	0xce
 4875 0508 98       		.byte	0x98
 4876 0509 0A       		.uleb128 0xa
 4877 050a C7100000 		.4byte	.LASF97
 4878 050e 06       		.byte	0x6
 4879 050f 93       		.byte	0x93
 4880 0510 CE000000 		.4byte	0xce
 4881 0514 9C       		.byte	0x9c
 4882 0515 0A       		.uleb128 0xa
 4883 0516 20080000 		.4byte	.LASF98
 4884 051a 06       		.byte	0x6
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 170


 4885 051b 94       		.byte	0x94
 4886 051c CE000000 		.4byte	0xce
 4887 0520 A0       		.byte	0xa0
 4888 0521 0A       		.uleb128 0xa
 4889 0522 85010000 		.4byte	.LASF99
 4890 0526 06       		.byte	0x6
 4891 0527 95       		.byte	0x95
 4892 0528 B8000000 		.4byte	0xb8
 4893 052c A4       		.byte	0xa4
 4894 052d 0A       		.uleb128 0xa
 4895 052e 750E0000 		.4byte	.LASF100
 4896 0532 06       		.byte	0x6
 4897 0533 96       		.byte	0x96
 4898 0534 B8000000 		.4byte	0xb8
 4899 0538 A6       		.byte	0xa6
 4900 0539 0A       		.uleb128 0xa
 4901 053a 21110000 		.4byte	.LASF101
 4902 053e 06       		.byte	0x6
 4903 053f 97       		.byte	0x97
 4904 0540 B8000000 		.4byte	0xb8
 4905 0544 A8       		.byte	0xa8
 4906 0545 0A       		.uleb128 0xa
 4907 0546 D20A0000 		.4byte	.LASF102
 4908 054a 06       		.byte	0x6
 4909 054b 98       		.byte	0x98
 4910 054c B8000000 		.4byte	0xb8
 4911 0550 AA       		.byte	0xaa
 4912 0551 0A       		.uleb128 0xa
 4913 0552 67030000 		.4byte	.LASF103
 4914 0556 06       		.byte	0x6
 4915 0557 99       		.byte	0x99
 4916 0558 B8000000 		.4byte	0xb8
 4917 055c AC       		.byte	0xac
 4918 055d 0A       		.uleb128 0xa
 4919 055e EA0C0000 		.4byte	.LASF104
 4920 0562 06       		.byte	0x6
 4921 0563 9A       		.byte	0x9a
 4922 0564 B8000000 		.4byte	0xb8
 4923 0568 AE       		.byte	0xae
 4924 0569 0A       		.uleb128 0xa
 4925 056a 8D030000 		.4byte	.LASF105
 4926 056e 06       		.byte	0x6
 4927 056f 9D       		.byte	0x9d
 4928 0570 B8000000 		.4byte	0xb8
 4929 0574 B0       		.byte	0xb0
 4930 0575 0A       		.uleb128 0xa
 4931 0576 4F120000 		.4byte	.LASF106
 4932 057a 06       		.byte	0x6
 4933 057b 9E       		.byte	0x9e
 4934 057c CE000000 		.4byte	0xce
 4935 0580 B4       		.byte	0xb4
 4936 0581 00       		.byte	0
 4937 0582 03       		.uleb128 0x3
 4938 0583 F1130000 		.4byte	.LASF107
 4939 0587 06       		.byte	0x6
 4940 0588 9F       		.byte	0x9f
 4941 0589 71010000 		.4byte	0x171
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 171


 4942 058d 07       		.uleb128 0x7
 4943 058e E5000000 		.4byte	0xe5
 4944 0592 9D050000 		.4byte	0x59d
 4945 0596 08       		.uleb128 0x8
 4946 0597 FA000000 		.4byte	0xfa
 4947 059b 0A       		.byte	0xa
 4948 059c 00       		.byte	0
 4949 059d 07       		.uleb128 0x7
 4950 059e E5000000 		.4byte	0xe5
 4951 05a2 AD050000 		.4byte	0x5ad
 4952 05a6 08       		.uleb128 0x8
 4953 05a7 FA000000 		.4byte	0xfa
 4954 05ab 2E       		.byte	0x2e
 4955 05ac 00       		.byte	0
 4956 05ad 07       		.uleb128 0x7
 4957 05ae E5000000 		.4byte	0xe5
 4958 05b2 BD050000 		.4byte	0x5bd
 4959 05b6 08       		.uleb128 0x8
 4960 05b7 FA000000 		.4byte	0xfa
 4961 05bb 2D       		.byte	0x2d
 4962 05bc 00       		.byte	0
 4963 05bd 07       		.uleb128 0x7
 4964 05be E0000000 		.4byte	0xe0
 4965 05c2 CE050000 		.4byte	0x5ce
 4966 05c6 0B       		.uleb128 0xb
 4967 05c7 FA000000 		.4byte	0xfa
 4968 05cb FF01     		.2byte	0x1ff
 4969 05cd 00       		.byte	0
 4970 05ce 0C       		.uleb128 0xc
 4971 05cf D00F     		.2byte	0xfd0
 4972 05d1 07       		.byte	0x7
 4973 05d2 21       		.byte	0x21
 4974 05d3 52090000 		.4byte	0x952
 4975 05d7 0A       		.uleb128 0xa
 4976 05d8 3B160000 		.4byte	.LASF108
 4977 05dc 07       		.byte	0x7
 4978 05dd 22       		.byte	0x22
 4979 05de E0000000 		.4byte	0xe0
 4980 05e2 00       		.byte	0
 4981 05e3 0A       		.uleb128 0xa
 4982 05e4 8C140000 		.4byte	.LASF109
 4983 05e8 07       		.byte	0x7
 4984 05e9 23       		.byte	0x23
 4985 05ea E5000000 		.4byte	0xe5
 4986 05ee 04       		.byte	0x4
 4987 05ef 0A       		.uleb128 0xa
 4988 05f0 E3130000 		.4byte	.LASF110
 4989 05f4 07       		.byte	0x7
 4990 05f5 24       		.byte	0x24
 4991 05f6 E0000000 		.4byte	0xe0
 4992 05fa 08       		.byte	0x8
 4993 05fb 0A       		.uleb128 0xa
 4994 05fc 30010000 		.4byte	.LASF111
 4995 0600 07       		.byte	0x7
 4996 0601 25       		.byte	0x25
 4997 0602 E5000000 		.4byte	0xe5
 4998 0606 0C       		.byte	0xc
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 172


 4999 0607 0A       		.uleb128 0xa
 5000 0608 27000000 		.4byte	.LASF112
 5001 060c 07       		.byte	0x7
 5002 060d 26       		.byte	0x26
 5003 060e 57090000 		.4byte	0x957
 5004 0612 10       		.byte	0x10
 5005 0613 0A       		.uleb128 0xa
 5006 0614 97100000 		.4byte	.LASF113
 5007 0618 07       		.byte	0x7
 5008 0619 27       		.byte	0x27
 5009 061a E0000000 		.4byte	0xe0
 5010 061e 20       		.byte	0x20
 5011 061f 0A       		.uleb128 0xa
 5012 0620 EF110000 		.4byte	.LASF114
 5013 0624 07       		.byte	0x7
 5014 0625 28       		.byte	0x28
 5015 0626 E5000000 		.4byte	0xe5
 5016 062a 24       		.byte	0x24
 5017 062b 0A       		.uleb128 0xa
 5018 062c 73140000 		.4byte	.LASF115
 5019 0630 07       		.byte	0x7
 5020 0631 29       		.byte	0x29
 5021 0632 61090000 		.4byte	0x961
 5022 0636 28       		.byte	0x28
 5023 0637 0A       		.uleb128 0xa
 5024 0638 A8130000 		.4byte	.LASF116
 5025 063c 07       		.byte	0x7
 5026 063d 2A       		.byte	0x2a
 5027 063e E0000000 		.4byte	0xe0
 5028 0642 40       		.byte	0x40
 5029 0643 0A       		.uleb128 0xa
 5030 0644 58060000 		.4byte	.LASF117
 5031 0648 07       		.byte	0x7
 5032 0649 2B       		.byte	0x2b
 5033 064a E0000000 		.4byte	0xe0
 5034 064e 44       		.byte	0x44
 5035 064f 0A       		.uleb128 0xa
 5036 0650 C3030000 		.4byte	.LASF118
 5037 0654 07       		.byte	0x7
 5038 0655 2C       		.byte	0x2c
 5039 0656 E0000000 		.4byte	0xe0
 5040 065a 48       		.byte	0x48
 5041 065b 0A       		.uleb128 0xa
 5042 065c F70F0000 		.4byte	.LASF119
 5043 0660 07       		.byte	0x7
 5044 0661 2D       		.byte	0x2d
 5045 0662 E5000000 		.4byte	0xe5
 5046 0666 4C       		.byte	0x4c
 5047 0667 0A       		.uleb128 0xa
 5048 0668 FD0B0000 		.4byte	.LASF120
 5049 066c 07       		.byte	0x7
 5050 066d 2E       		.byte	0x2e
 5051 066e E0000000 		.4byte	0xe0
 5052 0672 50       		.byte	0x50
 5053 0673 0A       		.uleb128 0xa
 5054 0674 A50E0000 		.4byte	.LASF121
 5055 0678 07       		.byte	0x7
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 173


 5056 0679 2F       		.byte	0x2f
 5057 067a 6B090000 		.4byte	0x96b
 5058 067e 54       		.byte	0x54
 5059 067f 0A       		.uleb128 0xa
 5060 0680 F2100000 		.4byte	.LASF122
 5061 0684 07       		.byte	0x7
 5062 0685 30       		.byte	0x30
 5063 0686 E0000000 		.4byte	0xe0
 5064 068a 60       		.byte	0x60
 5065 068b 0A       		.uleb128 0xa
 5066 068c 3A0F0000 		.4byte	.LASF123
 5067 0690 07       		.byte	0x7
 5068 0691 31       		.byte	0x31
 5069 0692 E5000000 		.4byte	0xe5
 5070 0696 64       		.byte	0x64
 5071 0697 0A       		.uleb128 0xa
 5072 0698 5B100000 		.4byte	.LASF124
 5073 069c 07       		.byte	0x7
 5074 069d 32       		.byte	0x32
 5075 069e E0000000 		.4byte	0xe0
 5076 06a2 68       		.byte	0x68
 5077 06a3 0A       		.uleb128 0xa
 5078 06a4 6B0E0000 		.4byte	.LASF125
 5079 06a8 07       		.byte	0x7
 5080 06a9 33       		.byte	0x33
 5081 06aa E0000000 		.4byte	0xe0
 5082 06ae 6C       		.byte	0x6c
 5083 06af 0A       		.uleb128 0xa
 5084 06b0 3B040000 		.4byte	.LASF126
 5085 06b4 07       		.byte	0x7
 5086 06b5 34       		.byte	0x34
 5087 06b6 E0000000 		.4byte	0xe0
 5088 06ba 70       		.byte	0x70
 5089 06bb 0A       		.uleb128 0xa
 5090 06bc AF0E0000 		.4byte	.LASF127
 5091 06c0 07       		.byte	0x7
 5092 06c1 35       		.byte	0x35
 5093 06c2 85090000 		.4byte	0x985
 5094 06c6 74       		.byte	0x74
 5095 06c7 0D       		.uleb128 0xd
 5096 06c8 13090000 		.4byte	.LASF128
 5097 06cc 07       		.byte	0x7
 5098 06cd 36       		.byte	0x36
 5099 06ce E0000000 		.4byte	0xe0
 5100 06d2 0001     		.2byte	0x100
 5101 06d4 0D       		.uleb128 0xd
 5102 06d5 B90E0000 		.4byte	.LASF129
 5103 06d9 07       		.byte	0x7
 5104 06da 37       		.byte	0x37
 5105 06db 8F090000 		.4byte	0x98f
 5106 06df 0401     		.2byte	0x104
 5107 06e1 0D       		.uleb128 0xd
 5108 06e2 50060000 		.4byte	.LASF130
 5109 06e6 07       		.byte	0x7
 5110 06e7 38       		.byte	0x38
 5111 06e8 E0000000 		.4byte	0xe0
 5112 06ec 0002     		.2byte	0x200
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 174


 5113 06ee 0D       		.uleb128 0xd
 5114 06ef 34100000 		.4byte	.LASF131
 5115 06f3 07       		.byte	0x7
 5116 06f4 39       		.byte	0x39
 5117 06f5 E0000000 		.4byte	0xe0
 5118 06f9 0402     		.2byte	0x204
 5119 06fb 0D       		.uleb128 0xd
 5120 06fc C5010000 		.4byte	.LASF132
 5121 0700 07       		.byte	0x7
 5122 0701 3A       		.byte	0x3a
 5123 0702 E5000000 		.4byte	0xe5
 5124 0706 0802     		.2byte	0x208
 5125 0708 0D       		.uleb128 0xd
 5126 0709 C30E0000 		.4byte	.LASF133
 5127 070d 07       		.byte	0x7
 5128 070e 3B       		.byte	0x3b
 5129 070f 99090000 		.4byte	0x999
 5130 0713 0C02     		.2byte	0x20c
 5131 0715 0D       		.uleb128 0xd
 5132 0716 D7120000 		.4byte	.LASF134
 5133 071a 07       		.byte	0x7
 5134 071b 3C       		.byte	0x3c
 5135 071c E0000000 		.4byte	0xe0
 5136 0720 4002     		.2byte	0x240
 5137 0722 0D       		.uleb128 0xd
 5138 0723 CD0E0000 		.4byte	.LASF135
 5139 0727 07       		.byte	0x7
 5140 0728 3D       		.byte	0x3d
 5141 0729 A3090000 		.4byte	0x9a3
 5142 072d 4402     		.2byte	0x244
 5143 072f 0D       		.uleb128 0xd
 5144 0730 BF100000 		.4byte	.LASF136
 5145 0734 07       		.byte	0x7
 5146 0735 3E       		.byte	0x3e
 5147 0736 E0000000 		.4byte	0xe0
 5148 073a 0003     		.2byte	0x300
 5149 073c 0D       		.uleb128 0xd
 5150 073d 58020000 		.4byte	.LASF137
 5151 0741 07       		.byte	0x7
 5152 0742 3F       		.byte	0x3f
 5153 0743 E0000000 		.4byte	0xe0
 5154 0747 0403     		.2byte	0x304
 5155 0749 0D       		.uleb128 0xd
 5156 074a F80C0000 		.4byte	.LASF138
 5157 074e 07       		.byte	0x7
 5158 074f 40       		.byte	0x40
 5159 0750 E5000000 		.4byte	0xe5
 5160 0754 0803     		.2byte	0x308
 5161 0756 0D       		.uleb128 0xd
 5162 0757 D70E0000 		.4byte	.LASF139
 5163 075b 07       		.byte	0x7
 5164 075c 41       		.byte	0x41
 5165 075d E5000000 		.4byte	0xe5
 5166 0761 0C03     		.2byte	0x30c
 5167 0763 0D       		.uleb128 0xd
 5168 0764 D70F0000 		.4byte	.LASF140
 5169 0768 07       		.byte	0x7
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 175


 5170 0769 42       		.byte	0x42
 5171 076a E0000000 		.4byte	0xe0
 5172 076e 1003     		.2byte	0x310
 5173 0770 0D       		.uleb128 0xd
 5174 0771 E10E0000 		.4byte	.LASF141
 5175 0775 07       		.byte	0x7
 5176 0776 43       		.byte	0x43
 5177 0777 AD090000 		.4byte	0x9ad
 5178 077b 1403     		.2byte	0x314
 5179 077d 0D       		.uleb128 0xd
 5180 077e C70A0000 		.4byte	.LASF142
 5181 0782 07       		.byte	0x7
 5182 0783 44       		.byte	0x44
 5183 0784 E5000000 		.4byte	0xe5
 5184 0788 4003     		.2byte	0x340
 5185 078a 0D       		.uleb128 0xd
 5186 078b 43040000 		.4byte	.LASF143
 5187 078f 07       		.byte	0x7
 5188 0790 45       		.byte	0x45
 5189 0791 E5000000 		.4byte	0xe5
 5190 0795 4403     		.2byte	0x344
 5191 0797 0D       		.uleb128 0xd
 5192 0798 EB0E0000 		.4byte	.LASF144
 5193 079c 07       		.byte	0x7
 5194 079d 46       		.byte	0x46
 5195 079e B7090000 		.4byte	0x9b7
 5196 07a2 4803     		.2byte	0x348
 5197 07a4 0D       		.uleb128 0xd
 5198 07a5 E8150000 		.4byte	.LASF145
 5199 07a9 07       		.byte	0x7
 5200 07aa 47       		.byte	0x47
 5201 07ab BC090000 		.4byte	0x9bc
 5202 07af 0004     		.2byte	0x400
 5203 07b1 0D       		.uleb128 0xd
 5204 07b2 63120000 		.4byte	.LASF146
 5205 07b6 07       		.byte	0x7
 5206 07b7 48       		.byte	0x48
 5207 07b8 C6090000 		.4byte	0x9c6
 5208 07bc 000C     		.2byte	0xc00
 5209 07be 0D       		.uleb128 0xd
 5210 07bf E8010000 		.4byte	.LASF147
 5211 07c3 07       		.byte	0x7
 5212 07c4 49       		.byte	0x49
 5213 07c5 E5000000 		.4byte	0xe5
 5214 07c9 000E     		.2byte	0xe00
 5215 07cb 0D       		.uleb128 0xd
 5216 07cc 6E120000 		.4byte	.LASF148
 5217 07d0 07       		.byte	0x7
 5218 07d1 4A       		.byte	0x4a
 5219 07d2 D0090000 		.4byte	0x9d0
 5220 07d6 040E     		.2byte	0xe04
 5221 07d8 0D       		.uleb128 0xd
 5222 07d9 D8070000 		.4byte	.LASF149
 5223 07dd 07       		.byte	0x7
 5224 07de 4B       		.byte	0x4b
 5225 07df E0000000 		.4byte	0xe0
 5226 07e3 800E     		.2byte	0xe80
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 176


 5227 07e5 0D       		.uleb128 0xd
 5228 07e6 79120000 		.4byte	.LASF150
 5229 07ea 07       		.byte	0x7
 5230 07eb 4C       		.byte	0x4c
 5231 07ec E5000000 		.4byte	0xe5
 5232 07f0 840E     		.2byte	0xe84
 5233 07f2 0D       		.uleb128 0xd
 5234 07f3 AD0D0000 		.4byte	.LASF151
 5235 07f7 07       		.byte	0x7
 5236 07f8 4D       		.byte	0x4d
 5237 07f9 E0000000 		.4byte	0xe0
 5238 07fd 880E     		.2byte	0xe88
 5239 07ff 0D       		.uleb128 0xd
 5240 0800 71090000 		.4byte	.LASF152
 5241 0804 07       		.byte	0x7
 5242 0805 4E       		.byte	0x4e
 5243 0806 E5000000 		.4byte	0xe5
 5244 080a 8C0E     		.2byte	0xe8c
 5245 080c 0D       		.uleb128 0xd
 5246 080d 84120000 		.4byte	.LASF153
 5247 0811 07       		.byte	0x7
 5248 0812 4F       		.byte	0x4f
 5249 0813 DA090000 		.4byte	0x9da
 5250 0817 900E     		.2byte	0xe90
 5251 0819 0D       		.uleb128 0xd
 5252 081a 15070000 		.4byte	.LASF154
 5253 081e 07       		.byte	0x7
 5254 081f 50       		.byte	0x50
 5255 0820 E0000000 		.4byte	0xe0
 5256 0824 C00E     		.2byte	0xec0
 5257 0826 0D       		.uleb128 0xd
 5258 0827 8F120000 		.4byte	.LASF155
 5259 082b 07       		.byte	0x7
 5260 082c 51       		.byte	0x51
 5261 082d E5000000 		.4byte	0xe5
 5262 0831 C40E     		.2byte	0xec4
 5263 0833 0D       		.uleb128 0xd
 5264 0834 240E0000 		.4byte	.LASF156
 5265 0838 07       		.byte	0x7
 5266 0839 52       		.byte	0x52
 5267 083a E0000000 		.4byte	0xe0
 5268 083e C80E     		.2byte	0xec8
 5269 0840 0D       		.uleb128 0xd
 5270 0841 65100000 		.4byte	.LASF157
 5271 0845 07       		.byte	0x7
 5272 0846 53       		.byte	0x53
 5273 0847 E5000000 		.4byte	0xe5
 5274 084b CC0E     		.2byte	0xecc
 5275 084d 0D       		.uleb128 0xd
 5276 084e 9A120000 		.4byte	.LASF158
 5277 0852 07       		.byte	0x7
 5278 0853 54       		.byte	0x54
 5279 0854 E4090000 		.4byte	0x9e4
 5280 0858 D00E     		.2byte	0xed0
 5281 085a 0D       		.uleb128 0xd
 5282 085b 1A110000 		.4byte	.LASF159
 5283 085f 07       		.byte	0x7
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 177


 5284 0860 55       		.byte	0x55
 5285 0861 E0000000 		.4byte	0xe0
 5286 0865 000F     		.2byte	0xf00
 5287 0867 0D       		.uleb128 0xd
 5288 0868 B1040000 		.4byte	.LASF160
 5289 086c 07       		.byte	0x7
 5290 086d 56       		.byte	0x56
 5291 086e E0000000 		.4byte	0xe0
 5292 0872 040F     		.2byte	0xf04
 5293 0874 0D       		.uleb128 0xd
 5294 0875 76110000 		.4byte	.LASF161
 5295 0879 07       		.byte	0x7
 5296 087a 57       		.byte	0x57
 5297 087b E0000000 		.4byte	0xe0
 5298 087f 080F     		.2byte	0xf08
 5299 0881 0D       		.uleb128 0xd
 5300 0882 1F050000 		.4byte	.LASF162
 5301 0886 07       		.byte	0x7
 5302 0887 58       		.byte	0x58
 5303 0888 E5000000 		.4byte	0xe5
 5304 088c 0C0F     		.2byte	0xf0c
 5305 088e 0D       		.uleb128 0xd
 5306 088f A5120000 		.4byte	.LASF163
 5307 0893 07       		.byte	0x7
 5308 0894 59       		.byte	0x59
 5309 0895 EE090000 		.4byte	0x9ee
 5310 0899 100F     		.2byte	0xf10
 5311 089b 0D       		.uleb128 0xd
 5312 089c 33110000 		.4byte	.LASF164
 5313 08a0 07       		.byte	0x7
 5314 08a1 5A       		.byte	0x5a
 5315 08a2 E0000000 		.4byte	0xe0
 5316 08a6 400F     		.2byte	0xf40
 5317 08a8 0D       		.uleb128 0xd
 5318 08a9 A6020000 		.4byte	.LASF165
 5319 08ad 07       		.byte	0x7
 5320 08ae 5B       		.byte	0x5b
 5321 08af E0000000 		.4byte	0xe0
 5322 08b3 440F     		.2byte	0xf44
 5323 08b5 0D       		.uleb128 0xd
 5324 08b6 54090000 		.4byte	.LASF166
 5325 08ba 07       		.byte	0x7
 5326 08bb 5C       		.byte	0x5c
 5327 08bc E0000000 		.4byte	0xe0
 5328 08c0 480F     		.2byte	0xf48
 5329 08c2 0D       		.uleb128 0xd
 5330 08c3 FA070000 		.4byte	.LASF167
 5331 08c7 07       		.byte	0x7
 5332 08c8 5D       		.byte	0x5d
 5333 08c9 E5000000 		.4byte	0xe5
 5334 08cd 4C0F     		.2byte	0xf4c
 5335 08cf 0D       		.uleb128 0xd
 5336 08d0 B0120000 		.4byte	.LASF168
 5337 08d4 07       		.byte	0x7
 5338 08d5 5E       		.byte	0x5e
 5339 08d6 F8090000 		.4byte	0x9f8
 5340 08da 500F     		.2byte	0xf50
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 178


 5341 08dc 0D       		.uleb128 0xd
 5342 08dd EF0F0000 		.4byte	.LASF169
 5343 08e1 07       		.byte	0x7
 5344 08e2 5F       		.byte	0x5f
 5345 08e3 E0000000 		.4byte	0xe0
 5346 08e7 800F     		.2byte	0xf80
 5347 08e9 0D       		.uleb128 0xd
 5348 08ea B7020000 		.4byte	.LASF170
 5349 08ee 07       		.byte	0x7
 5350 08ef 60       		.byte	0x60
 5351 08f0 E0000000 		.4byte	0xe0
 5352 08f4 840F     		.2byte	0xf84
 5353 08f6 0D       		.uleb128 0xd
 5354 08f7 55010000 		.4byte	.LASF171
 5355 08fb 07       		.byte	0x7
 5356 08fc 61       		.byte	0x61
 5357 08fd E0000000 		.4byte	0xe0
 5358 0901 880F     		.2byte	0xf88
 5359 0903 0D       		.uleb128 0xd
 5360 0904 510F0000 		.4byte	.LASF172
 5361 0908 07       		.byte	0x7
 5362 0909 62       		.byte	0x62
 5363 090a E5000000 		.4byte	0xe5
 5364 090e 8C0F     		.2byte	0xf8c
 5365 0910 0D       		.uleb128 0xd
 5366 0911 BB120000 		.4byte	.LASF173
 5367 0915 07       		.byte	0x7
 5368 0916 63       		.byte	0x63
 5369 0917 020A0000 		.4byte	0xa02
 5370 091b 900F     		.2byte	0xf90
 5371 091d 0D       		.uleb128 0xd
 5372 091e 1C0D0000 		.4byte	.LASF174
 5373 0922 07       		.byte	0x7
 5374 0923 64       		.byte	0x64
 5375 0924 E0000000 		.4byte	0xe0
 5376 0928 C00F     		.2byte	0xfc0
 5377 092a 0D       		.uleb128 0xd
 5378 092b 67140000 		.4byte	.LASF175
 5379 092f 07       		.byte	0x7
 5380 0930 65       		.byte	0x65
 5381 0931 E0000000 		.4byte	0xe0
 5382 0935 C40F     		.2byte	0xfc4
 5383 0937 0D       		.uleb128 0xd
 5384 0938 C0130000 		.4byte	.LASF176
 5385 093c 07       		.byte	0x7
 5386 093d 66       		.byte	0x66
 5387 093e E0000000 		.4byte	0xe0
 5388 0942 C80F     		.2byte	0xfc8
 5389 0944 0D       		.uleb128 0xd
 5390 0945 C3020000 		.4byte	.LASF177
 5391 0949 07       		.byte	0x7
 5392 094a 67       		.byte	0x67
 5393 094b E5000000 		.4byte	0xe5
 5394 094f CC0F     		.2byte	0xfcc
 5395 0951 00       		.byte	0
 5396 0952 05       		.uleb128 0x5
 5397 0953 01010000 		.4byte	0x101
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 179


 5398 0957 06       		.uleb128 0x6
 5399 0958 52090000 		.4byte	0x952
 5400 095c 05       		.uleb128 0x5
 5401 095d 51010000 		.4byte	0x151
 5402 0961 06       		.uleb128 0x6
 5403 0962 5C090000 		.4byte	0x95c
 5404 0966 05       		.uleb128 0x5
 5405 0967 EA000000 		.4byte	0xea
 5406 096b 06       		.uleb128 0x6
 5407 096c 66090000 		.4byte	0x966
 5408 0970 07       		.uleb128 0x7
 5409 0971 E5000000 		.4byte	0xe5
 5410 0975 80090000 		.4byte	0x980
 5411 0979 08       		.uleb128 0x8
 5412 097a FA000000 		.4byte	0xfa
 5413 097e 22       		.byte	0x22
 5414 097f 00       		.byte	0
 5415 0980 05       		.uleb128 0x5
 5416 0981 70090000 		.4byte	0x970
 5417 0985 06       		.uleb128 0x6
 5418 0986 80090000 		.4byte	0x980
 5419 098a 05       		.uleb128 0x5
 5420 098b 11010000 		.4byte	0x111
 5421 098f 06       		.uleb128 0x6
 5422 0990 8A090000 		.4byte	0x98a
 5423 0994 05       		.uleb128 0x5
 5424 0995 31010000 		.4byte	0x131
 5425 0999 06       		.uleb128 0x6
 5426 099a 94090000 		.4byte	0x994
 5427 099e 05       		.uleb128 0x5
 5428 099f 9D050000 		.4byte	0x59d
 5429 09a3 06       		.uleb128 0x6
 5430 09a4 9E090000 		.4byte	0x99e
 5431 09a8 05       		.uleb128 0x5
 5432 09a9 8D050000 		.4byte	0x58d
 5433 09ad 06       		.uleb128 0x6
 5434 09ae A8090000 		.4byte	0x9a8
 5435 09b2 05       		.uleb128 0x5
 5436 09b3 AD050000 		.4byte	0x5ad
 5437 09b7 06       		.uleb128 0x6
 5438 09b8 B2090000 		.4byte	0x9b2
 5439 09bc 05       		.uleb128 0x5
 5440 09bd BD050000 		.4byte	0x5bd
 5441 09c1 05       		.uleb128 0x5
 5442 09c2 61010000 		.4byte	0x161
 5443 09c6 06       		.uleb128 0x6
 5444 09c7 C1090000 		.4byte	0x9c1
 5445 09cb 05       		.uleb128 0x5
 5446 09cc 21010000 		.4byte	0x121
 5447 09d0 06       		.uleb128 0x6
 5448 09d1 CB090000 		.4byte	0x9cb
 5449 09d5 05       		.uleb128 0x5
 5450 09d6 41010000 		.4byte	0x141
 5451 09da 06       		.uleb128 0x6
 5452 09db D5090000 		.4byte	0x9d5
 5453 09df 05       		.uleb128 0x5
 5454 09e0 41010000 		.4byte	0x141
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 180


 5455 09e4 06       		.uleb128 0x6
 5456 09e5 DF090000 		.4byte	0x9df
 5457 09e9 05       		.uleb128 0x5
 5458 09ea 41010000 		.4byte	0x141
 5459 09ee 06       		.uleb128 0x6
 5460 09ef E9090000 		.4byte	0x9e9
 5461 09f3 05       		.uleb128 0x5
 5462 09f4 41010000 		.4byte	0x141
 5463 09f8 06       		.uleb128 0x6
 5464 09f9 F3090000 		.4byte	0x9f3
 5465 09fd 05       		.uleb128 0x5
 5466 09fe 41010000 		.4byte	0x141
 5467 0a02 06       		.uleb128 0x6
 5468 0a03 FD090000 		.4byte	0x9fd
 5469 0a07 03       		.uleb128 0x3
 5470 0a08 1D090000 		.4byte	.LASF178
 5471 0a0c 07       		.byte	0x7
 5472 0a0d 68       		.byte	0x68
 5473 0a0e CE050000 		.4byte	0x5ce
 5474 0a12 0E       		.uleb128 0xe
 5475 0a13 FB030000 		.4byte	.LASF179
 5476 0a17 08       		.byte	0x8
 5477 0a18 4F06     		.2byte	0x64f
 5478 0a1a 070A0000 		.4byte	0xa07
 5479 0a1e 0E       		.uleb128 0xe
 5480 0a1f D00F0000 		.4byte	.LASF180
 5481 0a23 09       		.byte	0x9
 5482 0a24 F601     		.2byte	0x1f6
 5483 0a26 2A0A0000 		.4byte	0xa2a
 5484 0a2a 02       		.uleb128 0x2
 5485 0a2b 01       		.byte	0x1
 5486 0a2c 08       		.byte	0x8
 5487 0a2d 0E090000 		.4byte	.LASF181
 5488 0a31 02       		.uleb128 0x2
 5489 0a32 04       		.byte	0x4
 5490 0a33 04       		.byte	0x4
 5491 0a34 2D110000 		.4byte	.LASF182
 5492 0a38 02       		.uleb128 0x2
 5493 0a39 08       		.byte	0x8
 5494 0a3a 04       		.byte	0x4
 5495 0a3b 3C140000 		.4byte	.LASF183
 5496 0a3f 0F       		.uleb128 0xf
 5497 0a40 04       		.byte	0x4
 5498 0a41 9B000000 		.4byte	0x9b
 5499 0a45 0A       		.byte	0xa
 5500 0a46 1405     		.2byte	0x514
 5501 0a48 800A0000 		.4byte	0xa80
 5502 0a4c 10       		.uleb128 0x10
 5503 0a4d B7060000 		.4byte	.LASF184
 5504 0a51 00       		.byte	0
 5505 0a52 11       		.uleb128 0x11
 5506 0a53 6B130000 		.4byte	.LASF185
 5507 0a57 01004200 		.4byte	0x420001
 5508 0a5b 11       		.uleb128 0x11
 5509 0a5c AB080000 		.4byte	.LASF186
 5510 0a60 02004200 		.4byte	0x420002
 5511 0a64 11       		.uleb128 0x11
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 181


 5512 0a65 BC080000 		.4byte	.LASF187
 5513 0a69 03004200 		.4byte	0x420003
 5514 0a6d 11       		.uleb128 0x11
 5515 0a6e F1080000 		.4byte	.LASF188
 5516 0a72 04004200 		.4byte	0x420004
 5517 0a76 11       		.uleb128 0x11
 5518 0a77 FA110000 		.4byte	.LASF189
 5519 0a7b FF004200 		.4byte	0x4200ff
 5520 0a7f 00       		.byte	0
 5521 0a80 0E       		.uleb128 0xe
 5522 0a81 40010000 		.4byte	.LASF190
 5523 0a85 0A       		.byte	0xa
 5524 0a86 1C05     		.2byte	0x51c
 5525 0a88 3F0A0000 		.4byte	0xa3f
 5526 0a8c 0F       		.uleb128 0xf
 5527 0a8d 01       		.byte	0x1
 5528 0a8e 37000000 		.4byte	0x37
 5529 0a92 0A       		.byte	0xa
 5530 0a93 BC05     		.2byte	0x5bc
 5531 0a95 B20A0000 		.4byte	0xab2
 5532 0a99 10       		.uleb128 0x10
 5533 0a9a 75160000 		.4byte	.LASF191
 5534 0a9e 01       		.byte	0x1
 5535 0a9f 10       		.uleb128 0x10
 5536 0aa0 06040000 		.4byte	.LASF192
 5537 0aa4 02       		.byte	0x2
 5538 0aa5 10       		.uleb128 0x10
 5539 0aa6 40160000 		.4byte	.LASF193
 5540 0aaa 04       		.byte	0x4
 5541 0aab 10       		.uleb128 0x10
 5542 0aac 5B160000 		.4byte	.LASF194
 5543 0ab0 08       		.byte	0x8
 5544 0ab1 00       		.byte	0
 5545 0ab2 0E       		.uleb128 0xe
 5546 0ab3 080F0000 		.4byte	.LASF195
 5547 0ab7 0A       		.byte	0xa
 5548 0ab8 CB05     		.2byte	0x5cb
 5549 0aba 8C0A0000 		.4byte	0xa8c
 5550 0abe 12       		.uleb128 0x12
 5551 0abf 08       		.byte	0x8
 5552 0ac0 0A       		.byte	0xa
 5553 0ac1 E705     		.2byte	0x5e7
 5554 0ac3 E20A0000 		.4byte	0xae2
 5555 0ac7 13       		.uleb128 0x13
 5556 0ac8 60000000 		.4byte	.LASF196
 5557 0acc 0A       		.byte	0xa
 5558 0acd E905     		.2byte	0x5e9
 5559 0acf E20A0000 		.4byte	0xae2
 5560 0ad3 00       		.byte	0
 5561 0ad4 13       		.uleb128 0x13
 5562 0ad5 360B0000 		.4byte	.LASF197
 5563 0ad9 0A       		.byte	0xa
 5564 0ada EC05     		.2byte	0x5ec
 5565 0adc E20A0000 		.4byte	0xae2
 5566 0ae0 04       		.byte	0x4
 5567 0ae1 00       		.byte	0
 5568 0ae2 14       		.uleb128 0x14
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 182


 5569 0ae3 04       		.byte	0x4
 5570 0ae4 0E       		.uleb128 0xe
 5571 0ae5 37000000 		.4byte	.LASF198
 5572 0ae9 0A       		.byte	0xa
 5573 0aea EF05     		.2byte	0x5ef
 5574 0aec BE0A0000 		.4byte	0xabe
 5575 0af0 15       		.uleb128 0x15
 5576 0af1 04       		.byte	0x4
 5577 0af2 E40A0000 		.4byte	0xae4
 5578 0af6 0F       		.uleb128 0xf
 5579 0af7 04       		.byte	0x4
 5580 0af8 9B000000 		.4byte	0x9b
 5581 0afc 02       		.byte	0x2
 5582 0afd 9401     		.2byte	0x194
 5583 0aff 250B0000 		.4byte	0xb25
 5584 0b03 10       		.uleb128 0x10
 5585 0b04 C4000000 		.4byte	.LASF199
 5586 0b08 00       		.byte	0
 5587 0b09 11       		.uleb128 0x11
 5588 0b0a 100B0000 		.4byte	.LASF200
 5589 0b0e 0160AA00 		.4byte	0xaa6001
 5590 0b12 11       		.uleb128 0x11
 5591 0b13 0C0C0000 		.4byte	.LASF201
 5592 0b17 0260AA00 		.4byte	0xaa6002
 5593 0b1b 11       		.uleb128 0x11
 5594 0b1c 98050000 		.4byte	.LASF202
 5595 0b20 0360AA00 		.4byte	0xaa6003
 5596 0b24 00       		.byte	0
 5597 0b25 0E       		.uleb128 0xe
 5598 0b26 75030000 		.4byte	.LASF203
 5599 0b2a 02       		.byte	0x2
 5600 0b2b A401     		.2byte	0x1a4
 5601 0b2d F60A0000 		.4byte	0xaf6
 5602 0b31 0F       		.uleb128 0xf
 5603 0b32 01       		.byte	0x1
 5604 0b33 37000000 		.4byte	0x37
 5605 0b37 02       		.byte	0x2
 5606 0b38 A801     		.2byte	0x1a8
 5607 0b3a 510B0000 		.4byte	0xb51
 5608 0b3e 10       		.uleb128 0x10
 5609 0b3f B0110000 		.4byte	.LASF204
 5610 0b43 00       		.byte	0
 5611 0b44 10       		.uleb128 0x10
 5612 0b45 4D070000 		.4byte	.LASF205
 5613 0b49 01       		.byte	0x1
 5614 0b4a 10       		.uleb128 0x10
 5615 0b4b 6B040000 		.4byte	.LASF206
 5616 0b4f 02       		.byte	0x2
 5617 0b50 00       		.byte	0
 5618 0b51 0E       		.uleb128 0xe
 5619 0b52 A0100000 		.4byte	.LASF207
 5620 0b56 02       		.byte	0x2
 5621 0b57 AC01     		.2byte	0x1ac
 5622 0b59 310B0000 		.4byte	0xb31
 5623 0b5d 0F       		.uleb128 0xf
 5624 0b5e 01       		.byte	0x1
 5625 0b5f 37000000 		.4byte	0x37
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 183


 5626 0b63 02       		.byte	0x2
 5627 0b64 B001     		.2byte	0x1b0
 5628 0b66 950B0000 		.4byte	0xb95
 5629 0b6a 10       		.uleb128 0x10
 5630 0b6b 610B0000 		.4byte	.LASF208
 5631 0b6f 02       		.byte	0x2
 5632 0b70 10       		.uleb128 0x10
 5633 0b71 94070000 		.4byte	.LASF209
 5634 0b75 03       		.byte	0x3
 5635 0b76 10       		.uleb128 0x10
 5636 0b77 790B0000 		.4byte	.LASF210
 5637 0b7b 04       		.byte	0x4
 5638 0b7c 10       		.uleb128 0x10
 5639 0b7d 21070000 		.4byte	.LASF211
 5640 0b81 05       		.byte	0x5
 5641 0b82 10       		.uleb128 0x10
 5642 0b83 910B0000 		.4byte	.LASF212
 5643 0b87 06       		.byte	0x6
 5644 0b88 10       		.uleb128 0x10
 5645 0b89 E4020000 		.4byte	.LASF213
 5646 0b8d 07       		.byte	0x7
 5647 0b8e 10       		.uleb128 0x10
 5648 0b8f 16120000 		.4byte	.LASF214
 5649 0b93 08       		.byte	0x8
 5650 0b94 00       		.byte	0
 5651 0b95 0E       		.uleb128 0xe
 5652 0b96 06160000 		.4byte	.LASF215
 5653 0b9a 02       		.byte	0x2
 5654 0b9b B801     		.2byte	0x1b8
 5655 0b9d 5D0B0000 		.4byte	0xb5d
 5656 0ba1 0F       		.uleb128 0xf
 5657 0ba2 01       		.byte	0x1
 5658 0ba3 37000000 		.4byte	0x37
 5659 0ba7 02       		.byte	0x2
 5660 0ba8 BC01     		.2byte	0x1bc
 5661 0baa C10B0000 		.4byte	0xbc1
 5662 0bae 10       		.uleb128 0x10
 5663 0baf 2C130000 		.4byte	.LASF216
 5664 0bb3 00       		.byte	0
 5665 0bb4 10       		.uleb128 0x10
 5666 0bb5 1A040000 		.4byte	.LASF217
 5667 0bb9 02       		.byte	0x2
 5668 0bba 10       		.uleb128 0x10
 5669 0bbb C30C0000 		.4byte	.LASF218
 5670 0bbf 03       		.byte	0x3
 5671 0bc0 00       		.byte	0
 5672 0bc1 0E       		.uleb128 0xe
 5673 0bc2 08080000 		.4byte	.LASF219
 5674 0bc6 02       		.byte	0x2
 5675 0bc7 C001     		.2byte	0x1c0
 5676 0bc9 A10B0000 		.4byte	0xba1
 5677 0bcd 0F       		.uleb128 0xf
 5678 0bce 01       		.byte	0x1
 5679 0bcf 37000000 		.4byte	0x37
 5680 0bd3 02       		.byte	0x2
 5681 0bd4 C401     		.2byte	0x1c4
 5682 0bd6 E70B0000 		.4byte	0xbe7
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 184


 5683 0bda 10       		.uleb128 0x10
 5684 0bdb 00020000 		.4byte	.LASF220
 5685 0bdf 00       		.byte	0
 5686 0be0 10       		.uleb128 0x10
 5687 0be1 21060000 		.4byte	.LASF221
 5688 0be5 01       		.byte	0x1
 5689 0be6 00       		.byte	0
 5690 0be7 0E       		.uleb128 0xe
 5691 0be8 FB060000 		.4byte	.LASF222
 5692 0bec 02       		.byte	0x2
 5693 0bed C701     		.2byte	0x1c7
 5694 0bef CD0B0000 		.4byte	0xbcd
 5695 0bf3 0E       		.uleb128 0xe
 5696 0bf4 930A0000 		.4byte	.LASF223
 5697 0bf8 02       		.byte	0x2
 5698 0bf9 D901     		.2byte	0x1d9
 5699 0bfb FF0B0000 		.4byte	0xbff
 5700 0bff 15       		.uleb128 0x15
 5701 0c00 04       		.byte	0x4
 5702 0c01 050C0000 		.4byte	0xc05
 5703 0c05 16       		.uleb128 0x16
 5704 0c06 100C0000 		.4byte	0xc10
 5705 0c0a 17       		.uleb128 0x17
 5706 0c0b CE000000 		.4byte	0xce
 5707 0c0f 00       		.byte	0
 5708 0c10 18       		.uleb128 0x18
 5709 0c11 FD040000 		.4byte	.LASF251
 5710 0c15 40       		.byte	0x40
 5711 0c16 02       		.byte	0x2
 5712 0c17 DC01     		.2byte	0x1dc
 5713 0c19 630D0000 		.4byte	0xd63
 5714 0c1d 13       		.uleb128 0x13
 5715 0c1e 21100000 		.4byte	.LASF224
 5716 0c22 02       		.byte	0x2
 5717 0c23 DF01     		.2byte	0x1df
 5718 0c25 510B0000 		.4byte	0xb51
 5719 0c29 00       		.byte	0
 5720 0c2a 13       		.uleb128 0x13
 5721 0c2b BF140000 		.4byte	.LASF225
 5722 0c2f 02       		.byte	0x2
 5723 0c30 E901     		.2byte	0x1e9
 5724 0c32 CE000000 		.4byte	0xce
 5725 0c36 04       		.byte	0x4
 5726 0c37 13       		.uleb128 0x13
 5727 0c38 CA140000 		.4byte	.LASF226
 5728 0c3c 02       		.byte	0x2
 5729 0c3d EC01     		.2byte	0x1ec
 5730 0c3f CE000000 		.4byte	0xce
 5731 0c43 08       		.byte	0x8
 5732 0c44 13       		.uleb128 0x13
 5733 0c45 AC000000 		.4byte	.LASF227
 5734 0c49 02       		.byte	0x2
 5735 0c4a F201     		.2byte	0x1f2
 5736 0c4c 630D0000 		.4byte	0xd63
 5737 0c50 0C       		.byte	0xc
 5738 0c51 13       		.uleb128 0x13
 5739 0c52 250C0000 		.4byte	.LASF228
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 185


 5740 0c56 02       		.byte	0x2
 5741 0c57 F801     		.2byte	0x1f8
 5742 0c59 950B0000 		.4byte	0xb95
 5743 0c5d 0D       		.byte	0xd
 5744 0c5e 13       		.uleb128 0x13
 5745 0c5f 30000000 		.4byte	.LASF229
 5746 0c63 02       		.byte	0x2
 5747 0c64 FB01     		.2byte	0x1fb
 5748 0c66 C10B0000 		.4byte	0xbc1
 5749 0c6a 0E       		.byte	0xe
 5750 0c6b 13       		.uleb128 0x13
 5751 0c6c D2020000 		.4byte	.LASF230
 5752 0c70 02       		.byte	0x2
 5753 0c71 0302     		.2byte	0x203
 5754 0c73 630D0000 		.4byte	0xd63
 5755 0c77 0F       		.byte	0xf
 5756 0c78 13       		.uleb128 0x13
 5757 0c79 9D090000 		.4byte	.LASF231
 5758 0c7d 02       		.byte	0x2
 5759 0c7e 0902     		.2byte	0x209
 5760 0c80 630D0000 		.4byte	0xd63
 5761 0c84 10       		.byte	0x10
 5762 0c85 13       		.uleb128 0x13
 5763 0c86 C3150000 		.4byte	.LASF232
 5764 0c8a 02       		.byte	0x2
 5765 0c8b 0F02     		.2byte	0x20f
 5766 0c8d 630D0000 		.4byte	0xd63
 5767 0c91 11       		.byte	0x11
 5768 0c92 13       		.uleb128 0x13
 5769 0c93 2E020000 		.4byte	.LASF233
 5770 0c97 02       		.byte	0x2
 5771 0c98 1502     		.2byte	0x215
 5772 0c9a 630D0000 		.4byte	0xd63
 5773 0c9e 12       		.byte	0x12
 5774 0c9f 13       		.uleb128 0x13
 5775 0ca0 39090000 		.4byte	.LASF234
 5776 0ca4 02       		.byte	0x2
 5777 0ca5 1C02     		.2byte	0x21c
 5778 0ca7 CE000000 		.4byte	0xce
 5779 0cab 14       		.byte	0x14
 5780 0cac 13       		.uleb128 0x13
 5781 0cad 440E0000 		.4byte	.LASF235
 5782 0cb1 02       		.byte	0x2
 5783 0cb2 2402     		.2byte	0x224
 5784 0cb4 CE000000 		.4byte	0xce
 5785 0cb8 18       		.byte	0x18
 5786 0cb9 13       		.uleb128 0x13
 5787 0cba 92080000 		.4byte	.LASF236
 5788 0cbe 02       		.byte	0x2
 5789 0cbf 2A02     		.2byte	0x22a
 5790 0cc1 630D0000 		.4byte	0xd63
 5791 0cc5 1C       		.byte	0x1c
 5792 0cc6 13       		.uleb128 0x13
 5793 0cc7 BC040000 		.4byte	.LASF237
 5794 0ccb 02       		.byte	0x2
 5795 0ccc 2D02     		.2byte	0x22d
 5796 0cce 630D0000 		.4byte	0xd63
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 186


 5797 0cd2 1D       		.byte	0x1d
 5798 0cd3 13       		.uleb128 0x13
 5799 0cd4 3E0B0000 		.4byte	.LASF238
 5800 0cd8 02       		.byte	0x2
 5801 0cd9 3302     		.2byte	0x233
 5802 0cdb 630D0000 		.4byte	0xd63
 5803 0cdf 1E       		.byte	0x1e
 5804 0ce0 13       		.uleb128 0x13
 5805 0ce1 B20A0000 		.4byte	.LASF239
 5806 0ce5 02       		.byte	0x2
 5807 0ce6 3A02     		.2byte	0x23a
 5808 0ce8 630D0000 		.4byte	0xd63
 5809 0cec 1F       		.byte	0x1f
 5810 0ced 13       		.uleb128 0x13
 5811 0cee E5110000 		.4byte	.LASF240
 5812 0cf2 02       		.byte	0x2
 5813 0cf3 4002     		.2byte	0x240
 5814 0cf5 630D0000 		.4byte	0xd63
 5815 0cf9 20       		.byte	0x20
 5816 0cfa 13       		.uleb128 0x13
 5817 0cfb E2120000 		.4byte	.LASF241
 5818 0cff 02       		.byte	0x2
 5819 0d00 4302     		.2byte	0x243
 5820 0d02 E70B0000 		.4byte	0xbe7
 5821 0d06 21       		.byte	0x21
 5822 0d07 13       		.uleb128 0x13
 5823 0d08 1D130000 		.4byte	.LASF242
 5824 0d0c 02       		.byte	0x2
 5825 0d0d 4902     		.2byte	0x249
 5826 0d0f CE000000 		.4byte	0xce
 5827 0d13 24       		.byte	0x24
 5828 0d14 13       		.uleb128 0x13
 5829 0d15 7A050000 		.4byte	.LASF243
 5830 0d19 02       		.byte	0x2
 5831 0d1a 4C02     		.2byte	0x24c
 5832 0d1c E70B0000 		.4byte	0xbe7
 5833 0d20 28       		.byte	0x28
 5834 0d21 13       		.uleb128 0x13
 5835 0d22 49090000 		.4byte	.LASF244
 5836 0d26 02       		.byte	0x2
 5837 0d27 4F02     		.2byte	0x24f
 5838 0d29 CE000000 		.4byte	0xce
 5839 0d2d 2C       		.byte	0x2c
 5840 0d2e 13       		.uleb128 0x13
 5841 0d2f 9E040000 		.4byte	.LASF245
 5842 0d33 02       		.byte	0x2
 5843 0d34 5702     		.2byte	0x257
 5844 0d36 CE000000 		.4byte	0xce
 5845 0d3a 30       		.byte	0x30
 5846 0d3b 13       		.uleb128 0x13
 5847 0d3c D4150000 		.4byte	.LASF246
 5848 0d40 02       		.byte	0x2
 5849 0d41 5D02     		.2byte	0x25d
 5850 0d43 CE000000 		.4byte	0xce
 5851 0d47 34       		.byte	0x34
 5852 0d48 13       		.uleb128 0x13
 5853 0d49 9D110000 		.4byte	.LASF247
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 187


 5854 0d4d 02       		.byte	0x2
 5855 0d4e 6502     		.2byte	0x265
 5856 0d50 CE000000 		.4byte	0xce
 5857 0d54 38       		.byte	0x38
 5858 0d55 13       		.uleb128 0x13
 5859 0d56 44130000 		.4byte	.LASF248
 5860 0d5a 02       		.byte	0x2
 5861 0d5b 6B02     		.2byte	0x26b
 5862 0d5d CE000000 		.4byte	0xce
 5863 0d61 3C       		.byte	0x3c
 5864 0d62 00       		.byte	0
 5865 0d63 02       		.uleb128 0x2
 5866 0d64 01       		.byte	0x1
 5867 0d65 02       		.byte	0x2
 5868 0d66 76070000 		.4byte	.LASF249
 5869 0d6a 0E       		.uleb128 0xe
 5870 0d6b EE120000 		.4byte	.LASF250
 5871 0d6f 02       		.byte	0x2
 5872 0d70 6C02     		.2byte	0x26c
 5873 0d72 100C0000 		.4byte	0xc10
 5874 0d76 18       		.uleb128 0x18
 5875 0d77 5A050000 		.4byte	.LASF252
 5876 0d7b 38       		.byte	0x38
 5877 0d7c 02       		.byte	0x2
 5878 0d7d 7502     		.2byte	0x275
 5879 0d7f 3A0E0000 		.4byte	0xe3a
 5880 0d83 13       		.uleb128 0x13
 5881 0d84 BB000000 		.4byte	.LASF253
 5882 0d88 02       		.byte	0x2
 5883 0d89 7802     		.2byte	0x278
 5884 0d8b E0000000 		.4byte	0xe0
 5885 0d8f 00       		.byte	0
 5886 0d90 13       		.uleb128 0x13
 5887 0d91 32040000 		.4byte	.LASF254
 5888 0d95 02       		.byte	0x2
 5889 0d96 7902     		.2byte	0x279
 5890 0d98 E0000000 		.4byte	0xe0
 5891 0d9c 04       		.byte	0x4
 5892 0d9d 13       		.uleb128 0x13
 5893 0d9e 8E0D0000 		.4byte	.LASF255
 5894 0da2 02       		.byte	0x2
 5895 0da3 7B02     		.2byte	0x27b
 5896 0da5 E20A0000 		.4byte	0xae2
 5897 0da9 08       		.byte	0x8
 5898 0daa 13       		.uleb128 0x13
 5899 0dab C9040000 		.4byte	.LASF256
 5900 0daf 02       		.byte	0x2
 5901 0db0 7C02     		.2byte	0x27c
 5902 0db2 CE000000 		.4byte	0xce
 5903 0db6 0C       		.byte	0xc
 5904 0db7 13       		.uleb128 0x13
 5905 0db8 730C0000 		.4byte	.LASF257
 5906 0dbc 02       		.byte	0x2
 5907 0dbd 7D02     		.2byte	0x27d
 5908 0dbf E0000000 		.4byte	0xe0
 5909 0dc3 10       		.byte	0x10
 5910 0dc4 13       		.uleb128 0x13
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 188


 5911 0dc5 2B090000 		.4byte	.LASF258
 5912 0dc9 02       		.byte	0x2
 5913 0dca 7E02     		.2byte	0x27e
 5914 0dcc E0000000 		.4byte	0xe0
 5915 0dd0 14       		.byte	0x14
 5916 0dd1 13       		.uleb128 0x13
 5917 0dd2 B1060000 		.4byte	.LASF259
 5918 0dd6 02       		.byte	0x2
 5919 0dd7 8002     		.2byte	0x280
 5920 0dd9 E20A0000 		.4byte	0xae2
 5921 0ddd 18       		.byte	0x18
 5922 0dde 13       		.uleb128 0x13
 5923 0ddf 31160000 		.4byte	.LASF260
 5924 0de3 02       		.byte	0x2
 5925 0de4 8102     		.2byte	0x281
 5926 0de6 CE000000 		.4byte	0xce
 5927 0dea 1C       		.byte	0x1c
 5928 0deb 13       		.uleb128 0x13
 5929 0dec AF090000 		.4byte	.LASF261
 5930 0df0 02       		.byte	0x2
 5931 0df1 8202     		.2byte	0x282
 5932 0df3 E0000000 		.4byte	0xe0
 5933 0df7 20       		.byte	0x20
 5934 0df8 13       		.uleb128 0x13
 5935 0df9 390D0000 		.4byte	.LASF262
 5936 0dfd 02       		.byte	0x2
 5937 0dfe 8402     		.2byte	0x284
 5938 0e00 E20A0000 		.4byte	0xae2
 5939 0e04 24       		.byte	0x24
 5940 0e05 13       		.uleb128 0x13
 5941 0e06 990C0000 		.4byte	.LASF263
 5942 0e0a 02       		.byte	0x2
 5943 0e0b 8502     		.2byte	0x285
 5944 0e0d CE000000 		.4byte	0xce
 5945 0e11 28       		.byte	0x28
 5946 0e12 13       		.uleb128 0x13
 5947 0e13 06100000 		.4byte	.LASF264
 5948 0e17 02       		.byte	0x2
 5949 0e18 8602     		.2byte	0x286
 5950 0e1a E0000000 		.4byte	0xe0
 5951 0e1e 2C       		.byte	0x2c
 5952 0e1f 13       		.uleb128 0x13
 5953 0e20 63070000 		.4byte	.LASF265
 5954 0e24 02       		.byte	0x2
 5955 0e25 8B02     		.2byte	0x28b
 5956 0e27 F30B0000 		.4byte	0xbf3
 5957 0e2b 30       		.byte	0x30
 5958 0e2c 13       		.uleb128 0x13
 5959 0e2d EA090000 		.4byte	.LASF266
 5960 0e31 02       		.byte	0x2
 5961 0e32 8E02     		.2byte	0x28e
 5962 0e34 CE000000 		.4byte	0xce
 5963 0e38 34       		.byte	0x34
 5964 0e39 00       		.byte	0
 5965 0e3a 0E       		.uleb128 0xe
 5966 0e3b 6F020000 		.4byte	.LASF267
 5967 0e3f 02       		.byte	0x2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 189


 5968 0e40 9102     		.2byte	0x291
 5969 0e42 760D0000 		.4byte	0xd76
 5970 0e46 19       		.uleb128 0x19
 5971 0e47 86050000 		.4byte	.LASF269
 5972 0e4b 01       		.byte	0x1
 5973 0e4c 6A02     		.2byte	0x26a
 5974 0e4e CE000000 		.4byte	0xce
 5975 0e52 00000000 		.4byte	.LFB166
 5976 0e56 1A000000 		.4byte	.LFE166-.LFB166
 5977 0e5a 01       		.uleb128 0x1
 5978 0e5b 9C       		.byte	0x9c
 5979 0e5c 700E0000 		.4byte	0xe70
 5980 0e60 1A       		.uleb128 0x1a
 5981 0e61 60000000 		.4byte	.LASF196
 5982 0e65 01       		.byte	0x1
 5983 0e66 6A02     		.2byte	0x26a
 5984 0e68 700E0000 		.4byte	0xe70
 5985 0e6c 02       		.uleb128 0x2
 5986 0e6d 91       		.byte	0x91
 5987 0e6e 74       		.sleb128 -12
 5988 0e6f 00       		.byte	0
 5989 0e70 15       		.uleb128 0x15
 5990 0e71 04       		.byte	0x4
 5991 0e72 760E0000 		.4byte	0xe76
 5992 0e76 06       		.uleb128 0x6
 5993 0e77 120A0000 		.4byte	0xa12
 5994 0e7b 1B       		.uleb128 0x1b
 5995 0e7c 2E120000 		.4byte	.LASF271
 5996 0e80 01       		.byte	0x1
 5997 0e81 7E02     		.2byte	0x27e
 5998 0e83 00000000 		.4byte	.LFB167
 5999 0e87 44000000 		.4byte	.LFE167-.LFB167
 6000 0e8b 01       		.uleb128 0x1
 6001 0e8c 9C       		.byte	0x9c
 6002 0e8d B00E0000 		.4byte	0xeb0
 6003 0e91 1A       		.uleb128 0x1a
 6004 0e92 60000000 		.4byte	.LASF196
 6005 0e96 01       		.byte	0x1
 6006 0e97 7E02     		.2byte	0x27e
 6007 0e99 B00E0000 		.4byte	0xeb0
 6008 0e9d 02       		.uleb128 0x2
 6009 0e9e 91       		.byte	0x91
 6010 0e9f 74       		.sleb128 -12
 6011 0ea0 1A       		.uleb128 0x1a
 6012 0ea1 B1020000 		.4byte	.LASF268
 6013 0ea5 01       		.byte	0x1
 6014 0ea6 7E02     		.2byte	0x27e
 6015 0ea8 CE000000 		.4byte	0xce
 6016 0eac 02       		.uleb128 0x2
 6017 0ead 91       		.byte	0x91
 6018 0eae 70       		.sleb128 -16
 6019 0eaf 00       		.byte	0
 6020 0eb0 15       		.uleb128 0x15
 6021 0eb1 04       		.byte	0x4
 6022 0eb2 120A0000 		.4byte	0xa12
 6023 0eb6 19       		.uleb128 0x19
 6024 0eb7 55040000 		.4byte	.LASF270
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 190


 6025 0ebb 01       		.byte	0x1
 6026 0ebc 9302     		.2byte	0x293
 6027 0ebe CE000000 		.4byte	0xce
 6028 0ec2 00000000 		.4byte	.LFB168
 6029 0ec6 1E000000 		.4byte	.LFE168-.LFB168
 6030 0eca 01       		.uleb128 0x1
 6031 0ecb 9C       		.byte	0x9c
 6032 0ecc E00E0000 		.4byte	0xee0
 6033 0ed0 1A       		.uleb128 0x1a
 6034 0ed1 60000000 		.4byte	.LASF196
 6035 0ed5 01       		.byte	0x1
 6036 0ed6 9302     		.2byte	0x293
 6037 0ed8 700E0000 		.4byte	0xe70
 6038 0edc 02       		.uleb128 0x2
 6039 0edd 91       		.byte	0x91
 6040 0ede 74       		.sleb128 -12
 6041 0edf 00       		.byte	0
 6042 0ee0 1C       		.uleb128 0x1c
 6043 0ee1 14000000 		.4byte	.LASF272
 6044 0ee5 01       		.byte	0x1
 6045 0ee6 D102     		.2byte	0x2d1
 6046 0ee8 00000000 		.4byte	.LFB171
 6047 0eec 1E000000 		.4byte	.LFE171-.LFB171
 6048 0ef0 01       		.uleb128 0x1
 6049 0ef1 9C       		.byte	0x9c
 6050 0ef2 150F0000 		.4byte	0xf15
 6051 0ef6 1A       		.uleb128 0x1a
 6052 0ef7 60000000 		.4byte	.LASF196
 6053 0efb 01       		.byte	0x1
 6054 0efc D102     		.2byte	0x2d1
 6055 0efe B00E0000 		.4byte	0xeb0
 6056 0f02 02       		.uleb128 0x2
 6057 0f03 91       		.byte	0x91
 6058 0f04 74       		.sleb128 -12
 6059 0f05 1A       		.uleb128 0x1a
 6060 0f06 98090000 		.4byte	.LASF273
 6061 0f0a 01       		.byte	0x1
 6062 0f0b D102     		.2byte	0x2d1
 6063 0f0d CE000000 		.4byte	0xce
 6064 0f11 02       		.uleb128 0x2
 6065 0f12 91       		.byte	0x91
 6066 0f13 70       		.sleb128 -16
 6067 0f14 00       		.byte	0
 6068 0f15 1B       		.uleb128 0x1b
 6069 0f16 B8090000 		.4byte	.LASF274
 6070 0f1a 01       		.byte	0x1
 6071 0f1b E602     		.2byte	0x2e6
 6072 0f1d 00000000 		.4byte	.LFB172
 6073 0f21 44000000 		.4byte	.LFE172-.LFB172
 6074 0f25 01       		.uleb128 0x1
 6075 0f26 9C       		.byte	0x9c
 6076 0f27 4A0F0000 		.4byte	0xf4a
 6077 0f2b 1A       		.uleb128 0x1a
 6078 0f2c 60000000 		.4byte	.LASF196
 6079 0f30 01       		.byte	0x1
 6080 0f31 E602     		.2byte	0x2e6
 6081 0f33 B00E0000 		.4byte	0xeb0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 191


 6082 0f37 02       		.uleb128 0x2
 6083 0f38 91       		.byte	0x91
 6084 0f39 74       		.sleb128 -12
 6085 0f3a 1A       		.uleb128 0x1a
 6086 0f3b B1020000 		.4byte	.LASF268
 6087 0f3f 01       		.byte	0x1
 6088 0f40 E602     		.2byte	0x2e6
 6089 0f42 CE000000 		.4byte	0xce
 6090 0f46 02       		.uleb128 0x2
 6091 0f47 91       		.byte	0x91
 6092 0f48 70       		.sleb128 -16
 6093 0f49 00       		.byte	0
 6094 0f4a 19       		.uleb128 0x19
 6095 0f4b E4070000 		.4byte	.LASF275
 6096 0f4f 01       		.byte	0x1
 6097 0f50 FB02     		.2byte	0x2fb
 6098 0f52 CE000000 		.4byte	0xce
 6099 0f56 00000000 		.4byte	.LFB173
 6100 0f5a 1E000000 		.4byte	.LFE173-.LFB173
 6101 0f5e 01       		.uleb128 0x1
 6102 0f5f 9C       		.byte	0x9c
 6103 0f60 740F0000 		.4byte	0xf74
 6104 0f64 1A       		.uleb128 0x1a
 6105 0f65 60000000 		.4byte	.LASF196
 6106 0f69 01       		.byte	0x1
 6107 0f6a FB02     		.2byte	0x2fb
 6108 0f6c 700E0000 		.4byte	0xe70
 6109 0f70 02       		.uleb128 0x2
 6110 0f71 91       		.byte	0x91
 6111 0f72 74       		.sleb128 -12
 6112 0f73 00       		.byte	0
 6113 0f74 19       		.uleb128 0x19
 6114 0f75 D90D0000 		.4byte	.LASF276
 6115 0f79 01       		.byte	0x1
 6116 0f7a 0E03     		.2byte	0x30e
 6117 0f7c CE000000 		.4byte	0xce
 6118 0f80 00000000 		.4byte	.LFB174
 6119 0f84 20000000 		.4byte	.LFE174-.LFB174
 6120 0f88 01       		.uleb128 0x1
 6121 0f89 9C       		.byte	0x9c
 6122 0f8a 9E0F0000 		.4byte	0xf9e
 6123 0f8e 1A       		.uleb128 0x1a
 6124 0f8f 60000000 		.4byte	.LASF196
 6125 0f93 01       		.byte	0x1
 6126 0f94 0E03     		.2byte	0x30e
 6127 0f96 700E0000 		.4byte	0xe70
 6128 0f9a 02       		.uleb128 0x2
 6129 0f9b 91       		.byte	0x91
 6130 0f9c 74       		.sleb128 -12
 6131 0f9d 00       		.byte	0
 6132 0f9e 1D       		.uleb128 0x1d
 6133 0f9f 84090000 		.4byte	.LASF277
 6134 0fa3 01       		.byte	0x1
 6135 0fa4 2103     		.2byte	0x321
 6136 0fa6 630D0000 		.4byte	0xd63
 6137 0faa 00000000 		.4byte	.LFB175
 6138 0fae 2C000000 		.4byte	.LFE175-.LFB175
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 192


 6139 0fb2 01       		.uleb128 0x1
 6140 0fb3 9C       		.byte	0x9c
 6141 0fb4 C80F0000 		.4byte	0xfc8
 6142 0fb8 1A       		.uleb128 0x1a
 6143 0fb9 60000000 		.4byte	.LASF196
 6144 0fbd 01       		.byte	0x1
 6145 0fbe 2103     		.2byte	0x321
 6146 0fc0 700E0000 		.4byte	0xe70
 6147 0fc4 02       		.uleb128 0x2
 6148 0fc5 91       		.byte	0x91
 6149 0fc6 6C       		.sleb128 -20
 6150 0fc7 00       		.byte	0
 6151 0fc8 1C       		.uleb128 0x1c
 6152 0fc9 A4030000 		.4byte	.LASF278
 6153 0fcd 01       		.byte	0x1
 6154 0fce 3603     		.2byte	0x336
 6155 0fd0 00000000 		.4byte	.LFB176
 6156 0fd4 3A000000 		.4byte	.LFE176-.LFB176
 6157 0fd8 01       		.uleb128 0x1
 6158 0fd9 9C       		.byte	0x9c
 6159 0fda EE0F0000 		.4byte	0xfee
 6160 0fde 1A       		.uleb128 0x1a
 6161 0fdf 60000000 		.4byte	.LASF196
 6162 0fe3 01       		.byte	0x1
 6163 0fe4 3603     		.2byte	0x336
 6164 0fe6 B00E0000 		.4byte	0xeb0
 6165 0fea 02       		.uleb128 0x2
 6166 0feb 91       		.byte	0x91
 6167 0fec 74       		.sleb128 -12
 6168 0fed 00       		.byte	0
 6169 0fee 19       		.uleb128 0x19
 6170 0fef A90B0000 		.4byte	.LASF279
 6171 0ff3 01       		.byte	0x1
 6172 0ff4 6C03     		.2byte	0x36c
 6173 0ff6 CE000000 		.4byte	0xce
 6174 0ffa 00000000 		.4byte	.LFB178
 6175 0ffe 1A000000 		.4byte	.LFE178-.LFB178
 6176 1002 01       		.uleb128 0x1
 6177 1003 9C       		.byte	0x9c
 6178 1004 18100000 		.4byte	0x1018
 6179 1008 1A       		.uleb128 0x1a
 6180 1009 60000000 		.4byte	.LASF196
 6181 100d 01       		.byte	0x1
 6182 100e 6C03     		.2byte	0x36c
 6183 1010 700E0000 		.4byte	0xe70
 6184 1014 02       		.uleb128 0x2
 6185 1015 91       		.byte	0x91
 6186 1016 74       		.sleb128 -12
 6187 1017 00       		.byte	0
 6188 1018 1B       		.uleb128 0x1b
 6189 1019 41100000 		.4byte	.LASF280
 6190 101d 01       		.byte	0x1
 6191 101e 9803     		.2byte	0x398
 6192 1020 00000000 		.4byte	.LFB180
 6193 1024 38000000 		.4byte	.LFE180-.LFB180
 6194 1028 01       		.uleb128 0x1
 6195 1029 9C       		.byte	0x9c
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 193


 6196 102a 4D100000 		.4byte	0x104d
 6197 102e 1A       		.uleb128 0x1a
 6198 102f 60000000 		.4byte	.LASF196
 6199 1033 01       		.byte	0x1
 6200 1034 9803     		.2byte	0x398
 6201 1036 B00E0000 		.4byte	0xeb0
 6202 103a 02       		.uleb128 0x2
 6203 103b 91       		.byte	0x91
 6204 103c 74       		.sleb128 -12
 6205 103d 1A       		.uleb128 0x1a
 6206 103e B5150000 		.4byte	.LASF281
 6207 1042 01       		.byte	0x1
 6208 1043 9803     		.2byte	0x398
 6209 1045 CE000000 		.4byte	0xce
 6210 1049 02       		.uleb128 0x2
 6211 104a 91       		.byte	0x91
 6212 104b 70       		.sleb128 -16
 6213 104c 00       		.byte	0
 6214 104d 19       		.uleb128 0x19
 6215 104e 8F060000 		.4byte	.LASF282
 6216 1052 01       		.byte	0x1
 6217 1053 C703     		.2byte	0x3c7
 6218 1055 CE000000 		.4byte	0xce
 6219 1059 00000000 		.4byte	.LFB182
 6220 105d 1A000000 		.4byte	.LFE182-.LFB182
 6221 1061 01       		.uleb128 0x1
 6222 1062 9C       		.byte	0x9c
 6223 1063 77100000 		.4byte	0x1077
 6224 1067 1A       		.uleb128 0x1a
 6225 1068 60000000 		.4byte	.LASF196
 6226 106c 01       		.byte	0x1
 6227 106d C703     		.2byte	0x3c7
 6228 106f 700E0000 		.4byte	0xe70
 6229 1073 02       		.uleb128 0x2
 6230 1074 91       		.byte	0x91
 6231 1075 74       		.sleb128 -12
 6232 1076 00       		.byte	0
 6233 1077 1B       		.uleb128 0x1b
 6234 1078 760D0000 		.4byte	.LASF283
 6235 107c 01       		.byte	0x1
 6236 107d E303     		.2byte	0x3e3
 6237 107f 00000000 		.4byte	.LFB183
 6238 1083 3C000000 		.4byte	.LFE183-.LFB183
 6239 1087 01       		.uleb128 0x1
 6240 1088 9C       		.byte	0x9c
 6241 1089 AC100000 		.4byte	0x10ac
 6242 108d 1A       		.uleb128 0x1a
 6243 108e 60000000 		.4byte	.LASF196
 6244 1092 01       		.byte	0x1
 6245 1093 E303     		.2byte	0x3e3
 6246 1095 B00E0000 		.4byte	0xeb0
 6247 1099 02       		.uleb128 0x2
 6248 109a 91       		.byte	0x91
 6249 109b 74       		.sleb128 -12
 6250 109c 1A       		.uleb128 0x1a
 6251 109d B5150000 		.4byte	.LASF281
 6252 10a1 01       		.byte	0x1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 194


 6253 10a2 E303     		.2byte	0x3e3
 6254 10a4 CE000000 		.4byte	0xce
 6255 10a8 02       		.uleb128 0x2
 6256 10a9 91       		.byte	0x91
 6257 10aa 70       		.sleb128 -16
 6258 10ab 00       		.byte	0
 6259 10ac 19       		.uleb128 0x19
 6260 10ad 5C0A0000 		.4byte	.LASF284
 6261 10b1 01       		.byte	0x1
 6262 10b2 1304     		.2byte	0x413
 6263 10b4 CE000000 		.4byte	0xce
 6264 10b8 00000000 		.4byte	.LFB185
 6265 10bc 20000000 		.4byte	.LFE185-.LFB185
 6266 10c0 01       		.uleb128 0x1
 6267 10c1 9C       		.byte	0x9c
 6268 10c2 D6100000 		.4byte	0x10d6
 6269 10c6 1A       		.uleb128 0x1a
 6270 10c7 60000000 		.4byte	.LASF196
 6271 10cb 01       		.byte	0x1
 6272 10cc 1304     		.2byte	0x413
 6273 10ce 700E0000 		.4byte	0xe70
 6274 10d2 02       		.uleb128 0x2
 6275 10d3 91       		.byte	0x91
 6276 10d4 74       		.sleb128 -12
 6277 10d5 00       		.byte	0
 6278 10d6 1B       		.uleb128 0x1b
 6279 10d7 990F0000 		.4byte	.LASF285
 6280 10db 01       		.byte	0x1
 6281 10dc 2804     		.2byte	0x428
 6282 10de 00000000 		.4byte	.LFB186
 6283 10e2 38000000 		.4byte	.LFE186-.LFB186
 6284 10e6 01       		.uleb128 0x1
 6285 10e7 9C       		.byte	0x9c
 6286 10e8 0B110000 		.4byte	0x110b
 6287 10ec 1A       		.uleb128 0x1a
 6288 10ed 60000000 		.4byte	.LASF196
 6289 10f1 01       		.byte	0x1
 6290 10f2 2804     		.2byte	0x428
 6291 10f4 B00E0000 		.4byte	0xeb0
 6292 10f8 02       		.uleb128 0x2
 6293 10f9 91       		.byte	0x91
 6294 10fa 74       		.sleb128 -12
 6295 10fb 1A       		.uleb128 0x1a
 6296 10fc B5150000 		.4byte	.LASF281
 6297 1100 01       		.byte	0x1
 6298 1101 2804     		.2byte	0x428
 6299 1103 CE000000 		.4byte	0xce
 6300 1107 02       		.uleb128 0x2
 6301 1108 91       		.byte	0x91
 6302 1109 70       		.sleb128 -16
 6303 110a 00       		.byte	0
 6304 110b 19       		.uleb128 0x19
 6305 110c 6B010000 		.4byte	.LASF286
 6306 1110 01       		.byte	0x1
 6307 1111 3F04     		.2byte	0x43f
 6308 1113 CE000000 		.4byte	0xce
 6309 1117 00000000 		.4byte	.LFB187
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 195


 6310 111b 1A000000 		.4byte	.LFE187-.LFB187
 6311 111f 01       		.uleb128 0x1
 6312 1120 9C       		.byte	0x9c
 6313 1121 35110000 		.4byte	0x1135
 6314 1125 1A       		.uleb128 0x1a
 6315 1126 60000000 		.4byte	.LASF196
 6316 112a 01       		.byte	0x1
 6317 112b 3F04     		.2byte	0x43f
 6318 112d 700E0000 		.4byte	0xe70
 6319 1131 02       		.uleb128 0x2
 6320 1132 91       		.byte	0x91
 6321 1133 74       		.sleb128 -12
 6322 1134 00       		.byte	0
 6323 1135 19       		.uleb128 0x19
 6324 1136 A3010000 		.4byte	.LASF287
 6325 113a 01       		.byte	0x1
 6326 113b 5704     		.2byte	0x457
 6327 113d CE000000 		.4byte	0xce
 6328 1141 00000000 		.4byte	.LFB188
 6329 1145 1A000000 		.4byte	.LFE188-.LFB188
 6330 1149 01       		.uleb128 0x1
 6331 114a 9C       		.byte	0x9c
 6332 114b 5F110000 		.4byte	0x115f
 6333 114f 1A       		.uleb128 0x1a
 6334 1150 60000000 		.4byte	.LASF196
 6335 1154 01       		.byte	0x1
 6336 1155 5704     		.2byte	0x457
 6337 1157 700E0000 		.4byte	0xe70
 6338 115b 02       		.uleb128 0x2
 6339 115c 91       		.byte	0x91
 6340 115d 74       		.sleb128 -12
 6341 115e 00       		.byte	0
 6342 115f 1B       		.uleb128 0x1b
 6343 1160 7C070000 		.4byte	.LASF288
 6344 1164 01       		.byte	0x1
 6345 1165 7504     		.2byte	0x475
 6346 1167 00000000 		.4byte	.LFB189
 6347 116b 3C000000 		.4byte	.LFE189-.LFB189
 6348 116f 01       		.uleb128 0x1
 6349 1170 9C       		.byte	0x9c
 6350 1171 94110000 		.4byte	0x1194
 6351 1175 1A       		.uleb128 0x1a
 6352 1176 60000000 		.4byte	.LASF196
 6353 117a 01       		.byte	0x1
 6354 117b 7504     		.2byte	0x475
 6355 117d B00E0000 		.4byte	0xeb0
 6356 1181 02       		.uleb128 0x2
 6357 1182 91       		.byte	0x91
 6358 1183 74       		.sleb128 -12
 6359 1184 1A       		.uleb128 0x1a
 6360 1185 B5150000 		.4byte	.LASF281
 6361 1189 01       		.byte	0x1
 6362 118a 7504     		.2byte	0x475
 6363 118c CE000000 		.4byte	0xce
 6364 1190 02       		.uleb128 0x2
 6365 1191 91       		.byte	0x91
 6366 1192 70       		.sleb128 -16
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 196


 6367 1193 00       		.byte	0
 6368 1194 19       		.uleb128 0x19
 6369 1195 93020000 		.4byte	.LASF289
 6370 1199 01       		.byte	0x1
 6371 119a 9806     		.2byte	0x698
 6372 119c CE000000 		.4byte	0xce
 6373 11a0 00000000 		.4byte	.LFB213
 6374 11a4 26000000 		.4byte	.LFE213-.LFB213
 6375 11a8 01       		.uleb128 0x1
 6376 11a9 9C       		.byte	0x9c
 6377 11aa BE110000 		.4byte	0x11be
 6378 11ae 1A       		.uleb128 0x1a
 6379 11af 60000000 		.4byte	.LASF196
 6380 11b3 01       		.byte	0x1
 6381 11b4 9806     		.2byte	0x698
 6382 11b6 700E0000 		.4byte	0xe70
 6383 11ba 02       		.uleb128 0x2
 6384 11bb 91       		.byte	0x91
 6385 11bc 74       		.sleb128 -12
 6386 11bd 00       		.byte	0
 6387 11be 19       		.uleb128 0x19
 6388 11bf 800F0000 		.4byte	.LASF290
 6389 11c3 01       		.byte	0x1
 6390 11c4 AC06     		.2byte	0x6ac
 6391 11c6 630D0000 		.4byte	0xd63
 6392 11ca 00000000 		.4byte	.LFB214
 6393 11ce 28000000 		.4byte	.LFE214-.LFB214
 6394 11d2 01       		.uleb128 0x1
 6395 11d3 9C       		.byte	0x9c
 6396 11d4 E8110000 		.4byte	0x11e8
 6397 11d8 1A       		.uleb128 0x1a
 6398 11d9 60000000 		.4byte	.LASF196
 6399 11dd 01       		.byte	0x1
 6400 11de AC06     		.2byte	0x6ac
 6401 11e0 700E0000 		.4byte	0xe70
 6402 11e4 02       		.uleb128 0x2
 6403 11e5 91       		.byte	0x91
 6404 11e6 74       		.sleb128 -12
 6405 11e7 00       		.byte	0
 6406 11e8 19       		.uleb128 0x19
 6407 11e9 85040000 		.4byte	.LASF291
 6408 11ed 01       		.byte	0x1
 6409 11ee BF06     		.2byte	0x6bf
 6410 11f0 630D0000 		.4byte	0xd63
 6411 11f4 00000000 		.4byte	.LFB215
 6412 11f8 28000000 		.4byte	.LFE215-.LFB215
 6413 11fc 01       		.uleb128 0x1
 6414 11fd 9C       		.byte	0x9c
 6415 11fe 12120000 		.4byte	0x1212
 6416 1202 1A       		.uleb128 0x1a
 6417 1203 60000000 		.4byte	.LASF196
 6418 1207 01       		.byte	0x1
 6419 1208 BF06     		.2byte	0x6bf
 6420 120a 700E0000 		.4byte	0xe70
 6421 120e 02       		.uleb128 0x2
 6422 120f 91       		.byte	0x91
 6423 1210 74       		.sleb128 -12
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 197


 6424 1211 00       		.byte	0
 6425 1212 1C       		.uleb128 0x1c
 6426 1213 F50E0000 		.4byte	.LASF292
 6427 1217 02       		.byte	0x2
 6428 1218 1304     		.2byte	0x413
 6429 121a 00000000 		.4byte	.LFB218
 6430 121e 20000000 		.4byte	.LFE218-.LFB218
 6431 1222 01       		.uleb128 0x1
 6432 1223 9C       		.byte	0x9c
 6433 1224 38120000 		.4byte	0x1238
 6434 1228 1A       		.uleb128 0x1a
 6435 1229 60000000 		.4byte	.LASF196
 6436 122d 02       		.byte	0x2
 6437 122e 1304     		.2byte	0x413
 6438 1230 B00E0000 		.4byte	0xeb0
 6439 1234 02       		.uleb128 0x2
 6440 1235 91       		.byte	0x91
 6441 1236 74       		.sleb128 -12
 6442 1237 00       		.byte	0
 6443 1238 1D       		.uleb128 0x1d
 6444 1239 DD100000 		.4byte	.LASF293
 6445 123d 02       		.byte	0x2
 6446 123e C604     		.2byte	0x4c6
 6447 1240 CE000000 		.4byte	0xce
 6448 1244 00000000 		.4byte	.LFB226
 6449 1248 3C000000 		.4byte	.LFE226-.LFB226
 6450 124c 01       		.uleb128 0x1
 6451 124d 9C       		.byte	0x9c
 6452 124e 80120000 		.4byte	0x1280
 6453 1252 1A       		.uleb128 0x1a
 6454 1253 60000000 		.4byte	.LASF196
 6455 1257 02       		.byte	0x2
 6456 1258 C604     		.2byte	0x4c6
 6457 125a 700E0000 		.4byte	0xe70
 6458 125e 02       		.uleb128 0x2
 6459 125f 91       		.byte	0x91
 6460 1260 74       		.sleb128 -12
 6461 1261 1A       		.uleb128 0x1a
 6462 1262 8D0C0000 		.4byte	.LASF294
 6463 1266 02       		.byte	0x2
 6464 1267 C604     		.2byte	0x4c6
 6465 1269 E20A0000 		.4byte	0xae2
 6466 126d 02       		.uleb128 0x2
 6467 126e 91       		.byte	0x91
 6468 126f 70       		.sleb128 -16
 6469 1270 1A       		.uleb128 0x1a
 6470 1271 940C0000 		.4byte	.LASF295
 6471 1275 02       		.byte	0x2
 6472 1276 C604     		.2byte	0x4c6
 6473 1278 CE000000 		.4byte	0xce
 6474 127c 02       		.uleb128 0x2
 6475 127d 91       		.byte	0x91
 6476 127e 6C       		.sleb128 -20
 6477 127f 00       		.byte	0
 6478 1280 1D       		.uleb128 0x1d
 6479 1281 82110000 		.4byte	.LASF296
 6480 1285 02       		.byte	0x2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 198


 6481 1286 2805     		.2byte	0x528
 6482 1288 CE000000 		.4byte	0xce
 6483 128c 00000000 		.4byte	.LFB230
 6484 1290 18000000 		.4byte	.LFE230-.LFB230
 6485 1294 01       		.uleb128 0x1
 6486 1295 9C       		.byte	0x9c
 6487 1296 AA120000 		.4byte	0x12aa
 6488 129a 1A       		.uleb128 0x1a
 6489 129b 60000000 		.4byte	.LASF196
 6490 129f 02       		.byte	0x2
 6491 12a0 2805     		.2byte	0x528
 6492 12a2 700E0000 		.4byte	0xe70
 6493 12a6 02       		.uleb128 0x2
 6494 12a7 91       		.byte	0x91
 6495 12a8 74       		.sleb128 -12
 6496 12a9 00       		.byte	0
 6497 12aa 1D       		.uleb128 0x1d
 6498 12ab 87150000 		.4byte	.LASF297
 6499 12af 02       		.byte	0x2
 6500 12b0 7105     		.2byte	0x571
 6501 12b2 CE000000 		.4byte	0xce
 6502 12b6 00000000 		.4byte	.LFB233
 6503 12ba 3C000000 		.4byte	.LFE233-.LFB233
 6504 12be 01       		.uleb128 0x1
 6505 12bf 9C       		.byte	0x9c
 6506 12c0 F2120000 		.4byte	0x12f2
 6507 12c4 1A       		.uleb128 0x1a
 6508 12c5 60000000 		.4byte	.LASF196
 6509 12c9 02       		.byte	0x2
 6510 12ca 7105     		.2byte	0x571
 6511 12cc B00E0000 		.4byte	0xeb0
 6512 12d0 02       		.uleb128 0x2
 6513 12d1 91       		.byte	0x91
 6514 12d2 74       		.sleb128 -12
 6515 12d3 1A       		.uleb128 0x1a
 6516 12d4 8D0C0000 		.4byte	.LASF294
 6517 12d8 02       		.byte	0x2
 6518 12d9 7105     		.2byte	0x571
 6519 12db E20A0000 		.4byte	0xae2
 6520 12df 02       		.uleb128 0x2
 6521 12e0 91       		.byte	0x91
 6522 12e1 70       		.sleb128 -16
 6523 12e2 1A       		.uleb128 0x1a
 6524 12e3 940C0000 		.4byte	.LASF295
 6525 12e7 02       		.byte	0x2
 6526 12e8 7105     		.2byte	0x571
 6527 12ea CE000000 		.4byte	0xce
 6528 12ee 02       		.uleb128 0x2
 6529 12ef 91       		.byte	0x91
 6530 12f0 6C       		.sleb128 -20
 6531 12f1 00       		.byte	0
 6532 12f2 1D       		.uleb128 0x1d
 6533 12f3 F2050000 		.4byte	.LASF298
 6534 12f7 02       		.byte	0x2
 6535 12f8 FF05     		.2byte	0x5ff
 6536 12fa 630D0000 		.4byte	0xd63
 6537 12fe 00000000 		.4byte	.LFB239
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 199


 6538 1302 18000000 		.4byte	.LFE239-.LFB239
 6539 1306 01       		.uleb128 0x1
 6540 1307 9C       		.byte	0x9c
 6541 1308 1C130000 		.4byte	0x131c
 6542 130c 1A       		.uleb128 0x1a
 6543 130d 60000000 		.4byte	.LASF196
 6544 1311 02       		.byte	0x2
 6545 1312 FF05     		.2byte	0x5ff
 6546 1314 700E0000 		.4byte	0xe70
 6547 1318 02       		.uleb128 0x2
 6548 1319 91       		.byte	0x91
 6549 131a 74       		.sleb128 -12
 6550 131b 00       		.byte	0
 6551 131c 1B       		.uleb128 0x1b
 6552 131d A7140000 		.4byte	.LASF299
 6553 1321 02       		.byte	0x2
 6554 1322 1506     		.2byte	0x615
 6555 1324 00000000 		.4byte	.LFB240
 6556 1328 16000000 		.4byte	.LFE240-.LFB240
 6557 132c 01       		.uleb128 0x1
 6558 132d 9C       		.byte	0x9c
 6559 132e 42130000 		.4byte	0x1342
 6560 1332 1A       		.uleb128 0x1a
 6561 1333 60000000 		.4byte	.LASF196
 6562 1337 02       		.byte	0x2
 6563 1338 1506     		.2byte	0x615
 6564 133a B00E0000 		.4byte	0xeb0
 6565 133e 02       		.uleb128 0x2
 6566 133f 91       		.byte	0x91
 6567 1340 74       		.sleb128 -12
 6568 1341 00       		.byte	0
 6569 1342 1E       		.uleb128 0x1e
 6570 1343 1F140000 		.4byte	.LASF303
 6571 1347 03       		.byte	0x3
 6572 1348 38       		.byte	0x38
 6573 1349 250B0000 		.4byte	0xb25
 6574 134d 00000000 		.4byte	.LFB242
 6575 1351 E0040000 		.4byte	.LFE242-.LFB242
 6576 1355 01       		.uleb128 0x1
 6577 1356 9C       		.byte	0x9c
 6578 1357 94130000 		.4byte	0x1394
 6579 135b 1F       		.uleb128 0x1f
 6580 135c 60000000 		.4byte	.LASF196
 6581 1360 03       		.byte	0x3
 6582 1361 38       		.byte	0x38
 6583 1362 B00E0000 		.4byte	0xeb0
 6584 1366 02       		.uleb128 0x2
 6585 1367 91       		.byte	0x91
 6586 1368 64       		.sleb128 -28
 6587 1369 1F       		.uleb128 0x1f
 6588 136a 3D0E0000 		.4byte	.LASF300
 6589 136e 03       		.byte	0x3
 6590 136f 38       		.byte	0x38
 6591 1370 94130000 		.4byte	0x1394
 6592 1374 02       		.uleb128 0x2
 6593 1375 91       		.byte	0x91
 6594 1376 60       		.sleb128 -32
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 200


 6595 1377 1F       		.uleb128 0x1f
 6596 1378 360B0000 		.4byte	.LASF197
 6597 137c 03       		.byte	0x3
 6598 137d 38       		.byte	0x38
 6599 137e 9F130000 		.4byte	0x139f
 6600 1382 02       		.uleb128 0x2
 6601 1383 91       		.byte	0x91
 6602 1384 5C       		.sleb128 -36
 6603 1385 20       		.uleb128 0x20
 6604 1386 6F767300 		.ascii	"ovs\000"
 6605 138a 03       		.byte	0x3
 6606 138b 4F       		.byte	0x4f
 6607 138c CE000000 		.4byte	0xce
 6608 1390 02       		.uleb128 0x2
 6609 1391 91       		.byte	0x91
 6610 1392 6C       		.sleb128 -20
 6611 1393 00       		.byte	0
 6612 1394 15       		.uleb128 0x15
 6613 1395 04       		.byte	0x4
 6614 1396 9A130000 		.4byte	0x139a
 6615 139a 06       		.uleb128 0x6
 6616 139b 6A0D0000 		.4byte	0xd6a
 6617 139f 15       		.uleb128 0x15
 6618 13a0 04       		.byte	0x4
 6619 13a1 3A0E0000 		.4byte	0xe3a
 6620 13a5 21       		.uleb128 0x21
 6621 13a6 7E130000 		.4byte	.LASF301
 6622 13aa 03       		.byte	0x3
 6623 13ab BB       		.byte	0xbb
 6624 13ac 00000000 		.4byte	.LFB243
 6625 13b0 94000000 		.4byte	.LFE243-.LFB243
 6626 13b4 01       		.uleb128 0x1
 6627 13b5 9C       		.byte	0x9c
 6628 13b6 C9130000 		.4byte	0x13c9
 6629 13ba 1F       		.uleb128 0x1f
 6630 13bb 60000000 		.4byte	.LASF196
 6631 13bf 03       		.byte	0x3
 6632 13c0 BB       		.byte	0xbb
 6633 13c1 B00E0000 		.4byte	0xeb0
 6634 13c5 02       		.uleb128 0x2
 6635 13c6 91       		.byte	0x91
 6636 13c7 74       		.sleb128 -12
 6637 13c8 00       		.byte	0
 6638 13c9 21       		.uleb128 0x21
 6639 13ca C8060000 		.4byte	.LASF302
 6640 13ce 03       		.byte	0x3
 6641 13cf F6       		.byte	0xf6
 6642 13d0 00000000 		.4byte	.LFB244
 6643 13d4 40000000 		.4byte	.LFE244-.LFB244
 6644 13d8 01       		.uleb128 0x1
 6645 13d9 9C       		.byte	0x9c
 6646 13da FB130000 		.4byte	0x13fb
 6647 13de 1F       		.uleb128 0x1f
 6648 13df 60000000 		.4byte	.LASF196
 6649 13e3 03       		.byte	0x3
 6650 13e4 F6       		.byte	0xf6
 6651 13e5 B00E0000 		.4byte	0xeb0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 201


 6652 13e9 02       		.uleb128 0x2
 6653 13ea 91       		.byte	0x91
 6654 13eb 74       		.sleb128 -12
 6655 13ec 1F       		.uleb128 0x1f
 6656 13ed 360B0000 		.4byte	.LASF197
 6657 13f1 03       		.byte	0x3
 6658 13f2 F6       		.byte	0xf6
 6659 13f3 9F130000 		.4byte	0x139f
 6660 13f7 02       		.uleb128 0x2
 6661 13f8 91       		.byte	0x91
 6662 13f9 70       		.sleb128 -16
 6663 13fa 00       		.byte	0
 6664 13fb 22       		.uleb128 0x22
 6665 13fc C20B0000 		.4byte	.LASF304
 6666 1400 03       		.byte	0x3
 6667 1401 2201     		.2byte	0x122
 6668 1403 800A0000 		.4byte	0xa80
 6669 1407 00000000 		.4byte	.LFB245
 6670 140b C4000000 		.4byte	.LFE245-.LFB245
 6671 140f 01       		.uleb128 0x1
 6672 1410 9C       		.byte	0x9c
 6673 1411 61140000 		.4byte	0x1461
 6674 1415 1A       		.uleb128 0x1a
 6675 1416 E00F0000 		.4byte	.LASF305
 6676 141a 03       		.byte	0x3
 6677 141b 2201     		.2byte	0x122
 6678 141d F00A0000 		.4byte	0xaf0
 6679 1421 02       		.uleb128 0x2
 6680 1422 91       		.byte	0x91
 6681 1423 64       		.sleb128 -28
 6682 1424 1A       		.uleb128 0x1a
 6683 1425 62030000 		.4byte	.LASF306
 6684 1429 03       		.byte	0x3
 6685 142a 2201     		.2byte	0x122
 6686 142c B20A0000 		.4byte	0xab2
 6687 1430 02       		.uleb128 0x2
 6688 1431 91       		.byte	0x91
 6689 1432 63       		.sleb128 -29
 6690 1433 23       		.uleb128 0x23
 6691 1434 610E0000 		.4byte	.LASF307
 6692 1438 03       		.byte	0x3
 6693 1439 2401     		.2byte	0x124
 6694 143b 800A0000 		.4byte	0xa80
 6695 143f 02       		.uleb128 0x2
 6696 1440 91       		.byte	0x91
 6697 1441 74       		.sleb128 -12
 6698 1442 23       		.uleb128 0x23
 6699 1443 350E0000 		.4byte	.LASF308
 6700 1447 03       		.byte	0x3
 6701 1448 2601     		.2byte	0x126
 6702 144a B00E0000 		.4byte	0xeb0
 6703 144e 02       		.uleb128 0x2
 6704 144f 91       		.byte	0x91
 6705 1450 70       		.sleb128 -16
 6706 1451 23       		.uleb128 0x23
 6707 1452 C5110000 		.4byte	.LASF309
 6708 1456 03       		.byte	0x3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 202


 6709 1457 2701     		.2byte	0x127
 6710 1459 9F130000 		.4byte	0x139f
 6711 145d 02       		.uleb128 0x2
 6712 145e 91       		.byte	0x91
 6713 145f 6C       		.sleb128 -20
 6714 1460 00       		.byte	0
 6715 1461 22       		.uleb128 0x22
 6716 1462 01140000 		.4byte	.LASF310
 6717 1466 03       		.byte	0x3
 6718 1467 8B01     		.2byte	0x18b
 6719 1469 800A0000 		.4byte	0xa80
 6720 146d 00000000 		.4byte	.LFB246
 6721 1471 20000000 		.4byte	.LFE246-.LFB246
 6722 1475 01       		.uleb128 0x1
 6723 1476 9C       		.byte	0x9c
 6724 1477 9A140000 		.4byte	0x149a
 6725 147b 1A       		.uleb128 0x1a
 6726 147c E00F0000 		.4byte	.LASF305
 6727 1480 03       		.byte	0x3
 6728 1481 8B01     		.2byte	0x18b
 6729 1483 F00A0000 		.4byte	0xaf0
 6730 1487 02       		.uleb128 0x2
 6731 1488 91       		.byte	0x91
 6732 1489 74       		.sleb128 -12
 6733 148a 1A       		.uleb128 0x1a
 6734 148b 62030000 		.4byte	.LASF306
 6735 148f 03       		.byte	0x3
 6736 1490 8B01     		.2byte	0x18b
 6737 1492 B20A0000 		.4byte	0xab2
 6738 1496 02       		.uleb128 0x2
 6739 1497 91       		.byte	0x91
 6740 1498 73       		.sleb128 -13
 6741 1499 00       		.byte	0
 6742 149a 24       		.uleb128 0x24
 6743 149b 90000000 		.4byte	.LASF311
 6744 149f 03       		.byte	0x3
 6745 14a0 BB01     		.2byte	0x1bb
 6746 14a2 00000000 		.4byte	.LFB247
 6747 14a6 AC000000 		.4byte	.LFE247-.LFB247
 6748 14aa 01       		.uleb128 0x1
 6749 14ab 9C       		.byte	0x9c
 6750 14ac 06150000 		.4byte	0x1506
 6751 14b0 1A       		.uleb128 0x1a
 6752 14b1 60000000 		.4byte	.LASF196
 6753 14b5 03       		.byte	0x3
 6754 14b6 BB01     		.2byte	0x1bb
 6755 14b8 B00E0000 		.4byte	0xeb0
 6756 14bc 02       		.uleb128 0x2
 6757 14bd 91       		.byte	0x91
 6758 14be 6C       		.sleb128 -20
 6759 14bf 1A       		.uleb128 0x1a
 6760 14c0 8D0C0000 		.4byte	.LASF294
 6761 14c4 03       		.byte	0x3
 6762 14c5 BB01     		.2byte	0x1bb
 6763 14c7 E20A0000 		.4byte	0xae2
 6764 14cb 02       		.uleb128 0x2
 6765 14cc 91       		.byte	0x91
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 203


 6766 14cd 68       		.sleb128 -24
 6767 14ce 1A       		.uleb128 0x1a
 6768 14cf 940C0000 		.4byte	.LASF295
 6769 14d3 03       		.byte	0x3
 6770 14d4 BB01     		.2byte	0x1bb
 6771 14d6 CE000000 		.4byte	0xce
 6772 14da 02       		.uleb128 0x2
 6773 14db 91       		.byte	0x91
 6774 14dc 64       		.sleb128 -28
 6775 14dd 1A       		.uleb128 0x1a
 6776 14de 360B0000 		.4byte	.LASF197
 6777 14e2 03       		.byte	0x3
 6778 14e3 BB01     		.2byte	0x1bb
 6779 14e5 9F130000 		.4byte	0x139f
 6780 14e9 02       		.uleb128 0x2
 6781 14ea 91       		.byte	0x91
 6782 14eb 60       		.sleb128 -32
 6783 14ec 25       		.uleb128 0x25
 6784 14ed 54000000 		.4byte	.LBB2
 6785 14f1 46000000 		.4byte	.LBE2-.LBB2
 6786 14f5 23       		.uleb128 0x23
 6787 14f6 D3080000 		.4byte	.LASF312
 6788 14fa 03       		.byte	0x3
 6789 14fb C301     		.2byte	0x1c3
 6790 14fd CE000000 		.4byte	0xce
 6791 1501 02       		.uleb128 0x2
 6792 1502 91       		.byte	0x91
 6793 1503 74       		.sleb128 -12
 6794 1504 00       		.byte	0
 6795 1505 00       		.byte	0
 6796 1506 24       		.uleb128 0x24
 6797 1507 780A0000 		.4byte	.LASF313
 6798 150b 03       		.byte	0x3
 6799 150c E201     		.2byte	0x1e2
 6800 150e 00000000 		.4byte	.LFB248
 6801 1512 2E000000 		.4byte	.LFE248-.LFB248
 6802 1516 01       		.uleb128 0x1
 6803 1517 9C       		.byte	0x9c
 6804 1518 3B150000 		.4byte	0x153b
 6805 151c 1A       		.uleb128 0x1a
 6806 151d 60000000 		.4byte	.LASF196
 6807 1521 03       		.byte	0x3
 6808 1522 E201     		.2byte	0x1e2
 6809 1524 B00E0000 		.4byte	0xeb0
 6810 1528 02       		.uleb128 0x2
 6811 1529 91       		.byte	0x91
 6812 152a 74       		.sleb128 -12
 6813 152b 1A       		.uleb128 0x1a
 6814 152c 360B0000 		.4byte	.LASF197
 6815 1530 03       		.byte	0x3
 6816 1531 E201     		.2byte	0x1e2
 6817 1533 9F130000 		.4byte	0x139f
 6818 1537 02       		.uleb128 0x2
 6819 1538 91       		.byte	0x91
 6820 1539 70       		.sleb128 -16
 6821 153a 00       		.byte	0
 6822 153b 26       		.uleb128 0x26
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 204


 6823 153c FB0D0000 		.4byte	.LASF314
 6824 1540 03       		.byte	0x3
 6825 1541 0302     		.2byte	0x203
 6826 1543 CE000000 		.4byte	0xce
 6827 1547 00000000 		.4byte	.LFB249
 6828 154b 44000000 		.4byte	.LFE249-.LFB249
 6829 154f 01       		.uleb128 0x1
 6830 1550 9C       		.byte	0x9c
 6831 1551 92150000 		.4byte	0x1592
 6832 1555 1A       		.uleb128 0x1a
 6833 1556 60000000 		.4byte	.LASF196
 6834 155a 03       		.byte	0x3
 6835 155b 0302     		.2byte	0x203
 6836 155d 700E0000 		.4byte	0xe70
 6837 1561 02       		.uleb128 0x2
 6838 1562 91       		.byte	0x91
 6839 1563 6C       		.sleb128 -20
 6840 1564 1A       		.uleb128 0x1a
 6841 1565 360B0000 		.4byte	.LASF197
 6842 1569 03       		.byte	0x3
 6843 156a 0302     		.2byte	0x203
 6844 156c 92150000 		.4byte	0x1592
 6845 1570 02       		.uleb128 0x2
 6846 1571 91       		.byte	0x91
 6847 1572 68       		.sleb128 -24
 6848 1573 23       		.uleb128 0x23
 6849 1574 940C0000 		.4byte	.LASF295
 6850 1578 03       		.byte	0x3
 6851 1579 0502     		.2byte	0x205
 6852 157b CE000000 		.4byte	0xce
 6853 157f 02       		.uleb128 0x2
 6854 1580 91       		.byte	0x91
 6855 1581 74       		.sleb128 -12
 6856 1582 23       		.uleb128 0x23
 6857 1583 590B0000 		.4byte	.LASF315
 6858 1587 03       		.byte	0x3
 6859 1588 0602     		.2byte	0x206
 6860 158a CE000000 		.4byte	0xce
 6861 158e 02       		.uleb128 0x2
 6862 158f 91       		.byte	0x91
 6863 1590 70       		.sleb128 -16
 6864 1591 00       		.byte	0
 6865 1592 15       		.uleb128 0x15
 6866 1593 04       		.byte	0x4
 6867 1594 98150000 		.4byte	0x1598
 6868 1598 06       		.uleb128 0x6
 6869 1599 3A0E0000 		.4byte	0xe3a
 6870 159d 27       		.uleb128 0x27
 6871 159e CE090000 		.4byte	.LASF316
 6872 15a2 03       		.byte	0x3
 6873 15a3 2802     		.2byte	0x228
 6874 15a5 00000000 		.4byte	.LFB250
 6875 15a9 1E000000 		.4byte	.LFE250-.LFB250
 6876 15ad 01       		.uleb128 0x1
 6877 15ae 9C       		.byte	0x9c
 6878 15af D2150000 		.4byte	0x15d2
 6879 15b3 1A       		.uleb128 0x1a
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 205


 6880 15b4 60000000 		.4byte	.LASF196
 6881 15b8 03       		.byte	0x3
 6882 15b9 2802     		.2byte	0x228
 6883 15bb 700E0000 		.4byte	0xe70
 6884 15bf 02       		.uleb128 0x2
 6885 15c0 91       		.byte	0x91
 6886 15c1 74       		.sleb128 -12
 6887 15c2 1A       		.uleb128 0x1a
 6888 15c3 360B0000 		.4byte	.LASF197
 6889 15c7 03       		.byte	0x3
 6890 15c8 2802     		.2byte	0x228
 6891 15ca 9F130000 		.4byte	0x139f
 6892 15ce 02       		.uleb128 0x2
 6893 15cf 91       		.byte	0x91
 6894 15d0 70       		.sleb128 -16
 6895 15d1 00       		.byte	0
 6896 15d2 22       		.uleb128 0x22
 6897 15d3 7C000000 		.4byte	.LASF317
 6898 15d7 03       		.byte	0x3
 6899 15d8 5D02     		.2byte	0x25d
 6900 15da 250B0000 		.4byte	0xb25
 6901 15de 00000000 		.4byte	.LFB251
 6902 15e2 C8010000 		.4byte	.LFE251-.LFB251
 6903 15e6 01       		.uleb128 0x1
 6904 15e7 9C       		.byte	0x9c
 6905 15e8 EA160000 		.4byte	0x16ea
 6906 15ec 1A       		.uleb128 0x1a
 6907 15ed 60000000 		.4byte	.LASF196
 6908 15f1 03       		.byte	0x3
 6909 15f2 5D02     		.2byte	0x25d
 6910 15f4 B00E0000 		.4byte	0xeb0
 6911 15f8 02       		.uleb128 0x2
 6912 15f9 91       		.byte	0x91
 6913 15fa 4C       		.sleb128 -52
 6914 15fb 1A       		.uleb128 0x1a
 6915 15fc 8D0C0000 		.4byte	.LASF294
 6916 1600 03       		.byte	0x3
 6917 1601 5D02     		.2byte	0x25d
 6918 1603 E20A0000 		.4byte	0xae2
 6919 1607 02       		.uleb128 0x2
 6920 1608 91       		.byte	0x91
 6921 1609 48       		.sleb128 -56
 6922 160a 1A       		.uleb128 0x1a
 6923 160b 940C0000 		.4byte	.LASF295
 6924 160f 03       		.byte	0x3
 6925 1610 5D02     		.2byte	0x25d
 6926 1612 CE000000 		.4byte	0xce
 6927 1616 02       		.uleb128 0x2
 6928 1617 91       		.byte	0x91
 6929 1618 44       		.sleb128 -60
 6930 1619 1A       		.uleb128 0x1a
 6931 161a 360B0000 		.4byte	.LASF197
 6932 161e 03       		.byte	0x3
 6933 161f 5D02     		.2byte	0x25d
 6934 1621 9F130000 		.4byte	0x139f
 6935 1625 02       		.uleb128 0x2
 6936 1626 91       		.byte	0x91
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 206


 6937 1627 40       		.sleb128 -64
 6938 1628 23       		.uleb128 0x23
 6939 1629 610E0000 		.4byte	.LASF307
 6940 162d 03       		.byte	0x3
 6941 162e 6302     		.2byte	0x263
 6942 1630 250B0000 		.4byte	0xb25
 6943 1634 02       		.uleb128 0x2
 6944 1635 91       		.byte	0x91
 6945 1636 74       		.sleb128 -12
 6946 1637 25       		.uleb128 0x25
 6947 1638 5A000000 		.4byte	.LBB3
 6948 163c 56010000 		.4byte	.LBE3-.LBB3
 6949 1640 23       		.uleb128 0x23
 6950 1641 60140000 		.4byte	.LASF318
 6951 1645 03       		.byte	0x3
 6952 1646 6802     		.2byte	0x268
 6953 1648 EA160000 		.4byte	0x16ea
 6954 164c 02       		.uleb128 0x2
 6955 164d 91       		.byte	0x91
 6956 164e 70       		.sleb128 -16
 6957 164f 23       		.uleb128 0x23
 6958 1650 FE020000 		.4byte	.LASF319
 6959 1654 03       		.byte	0x3
 6960 1655 6902     		.2byte	0x269
 6961 1657 CE000000 		.4byte	0xce
 6962 165b 02       		.uleb128 0x2
 6963 165c 91       		.byte	0x91
 6964 165d 6C       		.sleb128 -20
 6965 165e 28       		.uleb128 0x28
 6966 165f 82000000 		.4byte	.LBB4
 6967 1663 DC000000 		.4byte	.LBE4-.LBB4
 6968 1667 CF160000 		.4byte	0x16cf
 6969 166b 29       		.uleb128 0x29
 6970 166c 69647800 		.ascii	"idx\000"
 6971 1670 03       		.byte	0x3
 6972 1671 7502     		.2byte	0x275
 6973 1673 CE000000 		.4byte	0xce
 6974 1677 02       		.uleb128 0x2
 6975 1678 91       		.byte	0x91
 6976 1679 68       		.sleb128 -24
 6977 167a 23       		.uleb128 0x23
 6978 167b A3080000 		.4byte	.LASF320
 6979 167f 03       		.byte	0x3
 6980 1680 7602     		.2byte	0x276
 6981 1682 CE000000 		.4byte	0xce
 6982 1686 02       		.uleb128 0x2
 6983 1687 91       		.byte	0x91
 6984 1688 64       		.sleb128 -28
 6985 1689 23       		.uleb128 0x23
 6986 168a 8A0E0000 		.4byte	.LASF321
 6987 168e 03       		.byte	0x3
 6988 168f 7702     		.2byte	0x277
 6989 1691 630D0000 		.4byte	0xd63
 6990 1695 02       		.uleb128 0x2
 6991 1696 91       		.byte	0x91
 6992 1697 63       		.sleb128 -29
 6993 1698 28       		.uleb128 0x28
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 207


 6994 1699 C2000000 		.4byte	.LBB5
 6995 169d 16000000 		.4byte	.LBE5-.LBB5
 6996 16a1 B5160000 		.4byte	0x16b5
 6997 16a5 29       		.uleb128 0x29
 6998 16a6 62756600 		.ascii	"buf\000"
 6999 16aa 03       		.byte	0x3
 7000 16ab 8B02     		.2byte	0x28b
 7001 16ad EA160000 		.4byte	0x16ea
 7002 16b1 02       		.uleb128 0x2
 7003 16b2 91       		.byte	0x91
 7004 16b3 5C       		.sleb128 -36
 7005 16b4 00       		.byte	0
 7006 16b5 25       		.uleb128 0x25
 7007 16b6 DA000000 		.4byte	.LBB6
 7008 16ba 1A000000 		.4byte	.LBE6-.LBB6
 7009 16be 29       		.uleb128 0x29
 7010 16bf 62756600 		.ascii	"buf\000"
 7011 16c3 03       		.byte	0x3
 7012 16c4 9002     		.2byte	0x290
 7013 16c6 F0160000 		.4byte	0x16f0
 7014 16ca 02       		.uleb128 0x2
 7015 16cb 91       		.byte	0x91
 7016 16cc 58       		.sleb128 -40
 7017 16cd 00       		.byte	0
 7018 16ce 00       		.byte	0
 7019 16cf 25       		.uleb128 0x25
 7020 16d0 64010000 		.4byte	.LBB7
 7021 16d4 48000000 		.4byte	.LBE7-.LBB7
 7022 16d8 23       		.uleb128 0x23
 7023 16d9 D3080000 		.4byte	.LASF312
 7024 16dd 03       		.byte	0x3
 7025 16de BA02     		.2byte	0x2ba
 7026 16e0 CE000000 		.4byte	0xce
 7027 16e4 02       		.uleb128 0x2
 7028 16e5 91       		.byte	0x91
 7029 16e6 54       		.sleb128 -44
 7030 16e7 00       		.byte	0
 7031 16e8 00       		.byte	0
 7032 16e9 00       		.byte	0
 7033 16ea 15       		.uleb128 0x15
 7034 16eb 04       		.byte	0x4
 7035 16ec A2000000 		.4byte	0xa2
 7036 16f0 15       		.uleb128 0x15
 7037 16f1 04       		.byte	0x4
 7038 16f2 B8000000 		.4byte	0xb8
 7039 16f6 24       		.uleb128 0x24
 7040 16f7 9C150000 		.4byte	.LASF322
 7041 16fb 03       		.byte	0x3
 7042 16fc ED02     		.2byte	0x2ed
 7043 16fe 00000000 		.4byte	.LFB252
 7044 1702 34000000 		.4byte	.LFE252-.LFB252
 7045 1706 01       		.uleb128 0x1
 7046 1707 9C       		.byte	0x9c
 7047 1708 2B170000 		.4byte	0x172b
 7048 170c 1A       		.uleb128 0x1a
 7049 170d 60000000 		.4byte	.LASF196
 7050 1711 03       		.byte	0x3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 208


 7051 1712 ED02     		.2byte	0x2ed
 7052 1714 B00E0000 		.4byte	0xeb0
 7053 1718 02       		.uleb128 0x2
 7054 1719 91       		.byte	0x91
 7055 171a 74       		.sleb128 -12
 7056 171b 1A       		.uleb128 0x1a
 7057 171c 360B0000 		.4byte	.LASF197
 7058 1720 03       		.byte	0x3
 7059 1721 ED02     		.2byte	0x2ed
 7060 1723 9F130000 		.4byte	0x139f
 7061 1727 02       		.uleb128 0x2
 7062 1728 91       		.byte	0x91
 7063 1729 70       		.sleb128 -16
 7064 172a 00       		.byte	0
 7065 172b 26       		.uleb128 0x26
 7066 172c 3F050000 		.4byte	.LASF323
 7067 1730 03       		.byte	0x3
 7068 1731 0F03     		.2byte	0x30f
 7069 1733 CE000000 		.4byte	0xce
 7070 1737 00000000 		.4byte	.LFB253
 7071 173b 1A000000 		.4byte	.LFE253-.LFB253
 7072 173f 01       		.uleb128 0x1
 7073 1740 9C       		.byte	0x9c
 7074 1741 64170000 		.4byte	0x1764
 7075 1745 1A       		.uleb128 0x1a
 7076 1746 60000000 		.4byte	.LASF196
 7077 174a 03       		.byte	0x3
 7078 174b 0F03     		.2byte	0x30f
 7079 174d 700E0000 		.4byte	0xe70
 7080 1751 02       		.uleb128 0x2
 7081 1752 91       		.byte	0x91
 7082 1753 74       		.sleb128 -12
 7083 1754 1A       		.uleb128 0x1a
 7084 1755 360B0000 		.4byte	.LASF197
 7085 1759 03       		.byte	0x3
 7086 175a 0F03     		.2byte	0x30f
 7087 175c 92150000 		.4byte	0x1592
 7088 1760 02       		.uleb128 0x2
 7089 1761 91       		.byte	0x91
 7090 1762 70       		.sleb128 -16
 7091 1763 00       		.byte	0
 7092 1764 26       		.uleb128 0x26
 7093 1765 B30F0000 		.4byte	.LASF324
 7094 1769 03       		.byte	0x3
 7095 176a 2F03     		.2byte	0x32f
 7096 176c CE000000 		.4byte	0xce
 7097 1770 00000000 		.4byte	.LFB254
 7098 1774 1A000000 		.4byte	.LFE254-.LFB254
 7099 1778 01       		.uleb128 0x1
 7100 1779 9C       		.byte	0x9c
 7101 177a 9D170000 		.4byte	0x179d
 7102 177e 1A       		.uleb128 0x1a
 7103 177f 60000000 		.4byte	.LASF196
 7104 1783 03       		.byte	0x3
 7105 1784 2F03     		.2byte	0x32f
 7106 1786 700E0000 		.4byte	0xe70
 7107 178a 02       		.uleb128 0x2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 209


 7108 178b 91       		.byte	0x91
 7109 178c 74       		.sleb128 -12
 7110 178d 1A       		.uleb128 0x1a
 7111 178e 360B0000 		.4byte	.LASF197
 7112 1792 03       		.byte	0x3
 7113 1793 2F03     		.2byte	0x32f
 7114 1795 92150000 		.4byte	0x1592
 7115 1799 02       		.uleb128 0x2
 7116 179a 91       		.byte	0x91
 7117 179b 70       		.sleb128 -16
 7118 179c 00       		.byte	0
 7119 179d 22       		.uleb128 0x22
 7120 179e 240D0000 		.4byte	.LASF325
 7121 17a2 03       		.byte	0x3
 7122 17a3 5F03     		.2byte	0x35f
 7123 17a5 250B0000 		.4byte	0xb25
 7124 17a9 00000000 		.4byte	.LFB255
 7125 17ad B8000000 		.4byte	.LFE255-.LFB255
 7126 17b1 01       		.uleb128 0x1
 7127 17b2 9C       		.byte	0x9c
 7128 17b3 03180000 		.4byte	0x1803
 7129 17b7 1A       		.uleb128 0x1a
 7130 17b8 60000000 		.4byte	.LASF196
 7131 17bc 03       		.byte	0x3
 7132 17bd 5F03     		.2byte	0x35f
 7133 17bf B00E0000 		.4byte	0xeb0
 7134 17c3 02       		.uleb128 0x2
 7135 17c4 91       		.byte	0x91
 7136 17c5 6C       		.sleb128 -20
 7137 17c6 1A       		.uleb128 0x1a
 7138 17c7 8D0C0000 		.4byte	.LASF294
 7139 17cb 03       		.byte	0x3
 7140 17cc 5F03     		.2byte	0x35f
 7141 17ce E20A0000 		.4byte	0xae2
 7142 17d2 02       		.uleb128 0x2
 7143 17d3 91       		.byte	0x91
 7144 17d4 68       		.sleb128 -24
 7145 17d5 1A       		.uleb128 0x1a
 7146 17d6 940C0000 		.4byte	.LASF295
 7147 17da 03       		.byte	0x3
 7148 17db 5F03     		.2byte	0x35f
 7149 17dd CE000000 		.4byte	0xce
 7150 17e1 02       		.uleb128 0x2
 7151 17e2 91       		.byte	0x91
 7152 17e3 64       		.sleb128 -28
 7153 17e4 1A       		.uleb128 0x1a
 7154 17e5 360B0000 		.4byte	.LASF197
 7155 17e9 03       		.byte	0x3
 7156 17ea 5F03     		.2byte	0x35f
 7157 17ec 9F130000 		.4byte	0x139f
 7158 17f0 02       		.uleb128 0x2
 7159 17f1 91       		.byte	0x91
 7160 17f2 60       		.sleb128 -32
 7161 17f3 23       		.uleb128 0x23
 7162 17f4 610E0000 		.4byte	.LASF307
 7163 17f8 03       		.byte	0x3
 7164 17f9 6503     		.2byte	0x365
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 210


 7165 17fb 250B0000 		.4byte	0xb25
 7166 17ff 02       		.uleb128 0x2
 7167 1800 91       		.byte	0x91
 7168 1801 74       		.sleb128 -12
 7169 1802 00       		.byte	0
 7170 1803 24       		.uleb128 0x24
 7171 1804 65060000 		.4byte	.LASF326
 7172 1808 03       		.byte	0x3
 7173 1809 9E03     		.2byte	0x39e
 7174 180b 00000000 		.4byte	.LFB256
 7175 180f 32000000 		.4byte	.LFE256-.LFB256
 7176 1813 01       		.uleb128 0x1
 7177 1814 9C       		.byte	0x9c
 7178 1815 38180000 		.4byte	0x1838
 7179 1819 1A       		.uleb128 0x1a
 7180 181a 60000000 		.4byte	.LASF196
 7181 181e 03       		.byte	0x3
 7182 181f 9E03     		.2byte	0x39e
 7183 1821 B00E0000 		.4byte	0xeb0
 7184 1825 02       		.uleb128 0x2
 7185 1826 91       		.byte	0x91
 7186 1827 74       		.sleb128 -12
 7187 1828 1A       		.uleb128 0x1a
 7188 1829 360B0000 		.4byte	.LASF197
 7189 182d 03       		.byte	0x3
 7190 182e 9E03     		.2byte	0x39e
 7191 1830 9F130000 		.4byte	0x139f
 7192 1834 02       		.uleb128 0x2
 7193 1835 91       		.byte	0x91
 7194 1836 70       		.sleb128 -16
 7195 1837 00       		.byte	0
 7196 1838 26       		.uleb128 0x26
 7197 1839 42110000 		.4byte	.LASF327
 7198 183d 03       		.byte	0x3
 7199 183e BF03     		.2byte	0x3bf
 7200 1840 CE000000 		.4byte	0xce
 7201 1844 00000000 		.4byte	.LFB257
 7202 1848 1A000000 		.4byte	.LFE257-.LFB257
 7203 184c 01       		.uleb128 0x1
 7204 184d 9C       		.byte	0x9c
 7205 184e 71180000 		.4byte	0x1871
 7206 1852 1A       		.uleb128 0x1a
 7207 1853 60000000 		.4byte	.LASF196
 7208 1857 03       		.byte	0x3
 7209 1858 BF03     		.2byte	0x3bf
 7210 185a 700E0000 		.4byte	0xe70
 7211 185e 02       		.uleb128 0x2
 7212 185f 91       		.byte	0x91
 7213 1860 74       		.sleb128 -12
 7214 1861 1A       		.uleb128 0x1a
 7215 1862 360B0000 		.4byte	.LASF197
 7216 1866 03       		.byte	0x3
 7217 1867 BF03     		.2byte	0x3bf
 7218 1869 92150000 		.4byte	0x1592
 7219 186d 02       		.uleb128 0x2
 7220 186e 91       		.byte	0x91
 7221 186f 70       		.sleb128 -16
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 211


 7222 1870 00       		.byte	0
 7223 1871 26       		.uleb128 0x26
 7224 1872 0B0A0000 		.4byte	.LASF328
 7225 1876 03       		.byte	0x3
 7226 1877 E003     		.2byte	0x3e0
 7227 1879 CE000000 		.4byte	0xce
 7228 187d 00000000 		.4byte	.LFB258
 7229 1881 1A000000 		.4byte	.LFE258-.LFB258
 7230 1885 01       		.uleb128 0x1
 7231 1886 9C       		.byte	0x9c
 7232 1887 AA180000 		.4byte	0x18aa
 7233 188b 1A       		.uleb128 0x1a
 7234 188c 60000000 		.4byte	.LASF196
 7235 1890 03       		.byte	0x3
 7236 1891 E003     		.2byte	0x3e0
 7237 1893 700E0000 		.4byte	0xe70
 7238 1897 02       		.uleb128 0x2
 7239 1898 91       		.byte	0x91
 7240 1899 74       		.sleb128 -12
 7241 189a 1A       		.uleb128 0x1a
 7242 189b 360B0000 		.4byte	.LASF197
 7243 189f 03       		.byte	0x3
 7244 18a0 E003     		.2byte	0x3e0
 7245 18a2 92150000 		.4byte	0x1592
 7246 18a6 02       		.uleb128 0x2
 7247 18a7 91       		.byte	0x91
 7248 18a8 70       		.sleb128 -16
 7249 18a9 00       		.byte	0
 7250 18aa 24       		.uleb128 0x24
 7251 18ab 36030000 		.4byte	.LASF329
 7252 18af 03       		.byte	0x3
 7253 18b0 0004     		.2byte	0x400
 7254 18b2 00000000 		.4byte	.LFB259
 7255 18b6 9C000000 		.4byte	.LFE259-.LFB259
 7256 18ba 01       		.uleb128 0x1
 7257 18bb 9C       		.byte	0x9c
 7258 18bc FD180000 		.4byte	0x18fd
 7259 18c0 1A       		.uleb128 0x1a
 7260 18c1 60000000 		.4byte	.LASF196
 7261 18c5 03       		.byte	0x3
 7262 18c6 0004     		.2byte	0x400
 7263 18c8 B00E0000 		.4byte	0xeb0
 7264 18cc 02       		.uleb128 0x2
 7265 18cd 91       		.byte	0x91
 7266 18ce 6C       		.sleb128 -20
 7267 18cf 1A       		.uleb128 0x1a
 7268 18d0 49090000 		.4byte	.LASF244
 7269 18d4 03       		.byte	0x3
 7270 18d5 0004     		.2byte	0x400
 7271 18d7 CE000000 		.4byte	0xce
 7272 18db 02       		.uleb128 0x2
 7273 18dc 91       		.byte	0x91
 7274 18dd 68       		.sleb128 -24
 7275 18de 23       		.uleb128 0x23
 7276 18df 6C070000 		.4byte	.LASF330
 7277 18e3 03       		.byte	0x3
 7278 18e4 0204     		.2byte	0x402
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 212


 7279 18e6 CE000000 		.4byte	0xce
 7280 18ea 02       		.uleb128 0x2
 7281 18eb 91       		.byte	0x91
 7282 18ec 70       		.sleb128 -16
 7283 18ed 23       		.uleb128 0x23
 7284 18ee 78100000 		.4byte	.LASF331
 7285 18f2 03       		.byte	0x3
 7286 18f3 0304     		.2byte	0x403
 7287 18f5 CE000000 		.4byte	0xce
 7288 18f9 02       		.uleb128 0x2
 7289 18fa 91       		.byte	0x91
 7290 18fb 74       		.sleb128 -12
 7291 18fc 00       		.byte	0
 7292 18fd 24       		.uleb128 0x24
 7293 18fe 07130000 		.4byte	.LASF332
 7294 1902 03       		.byte	0x3
 7295 1903 3704     		.2byte	0x437
 7296 1905 00000000 		.4byte	.LFB260
 7297 1909 5C010000 		.4byte	.LFE260-.LFB260
 7298 190d 01       		.uleb128 0x1
 7299 190e 9C       		.byte	0x9c
 7300 190f 68190000 		.4byte	0x1968
 7301 1913 1A       		.uleb128 0x1a
 7302 1914 60000000 		.4byte	.LASF196
 7303 1918 03       		.byte	0x3
 7304 1919 3704     		.2byte	0x437
 7305 191b B00E0000 		.4byte	0xeb0
 7306 191f 02       		.uleb128 0x2
 7307 1920 91       		.byte	0x91
 7308 1921 6C       		.sleb128 -20
 7309 1922 1A       		.uleb128 0x1a
 7310 1923 360B0000 		.4byte	.LASF197
 7311 1927 03       		.byte	0x3
 7312 1928 3704     		.2byte	0x437
 7313 192a 9F130000 		.4byte	0x139f
 7314 192e 02       		.uleb128 0x2
 7315 192f 91       		.byte	0x91
 7316 1930 68       		.sleb128 -24
 7317 1931 28       		.uleb128 0x28
 7318 1932 1A000000 		.4byte	.LBB8
 7319 1936 98000000 		.4byte	.LBE8-.LBB8
 7320 193a 4E190000 		.4byte	0x194e
 7321 193e 23       		.uleb128 0x23
 7322 193f 9B030000 		.4byte	.LASF333
 7323 1943 03       		.byte	0x3
 7324 1944 3C04     		.2byte	0x43c
 7325 1946 CE000000 		.4byte	0xce
 7326 194a 02       		.uleb128 0x2
 7327 194b 91       		.byte	0x91
 7328 194c 74       		.sleb128 -12
 7329 194d 00       		.byte	0
 7330 194e 25       		.uleb128 0x25
 7331 194f C2000000 		.4byte	.LBB9
 7332 1953 92000000 		.4byte	.LBE9-.LBB9
 7333 1957 23       		.uleb128 0x23
 7334 1958 18060000 		.4byte	.LASF334
 7335 195c 03       		.byte	0x3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 213


 7336 195d 6804     		.2byte	0x468
 7337 195f CE000000 		.4byte	0xce
 7338 1963 02       		.uleb128 0x2
 7339 1964 91       		.byte	0x91
 7340 1965 70       		.sleb128 -16
 7341 1966 00       		.byte	0
 7342 1967 00       		.byte	0
 7343 1968 1B       		.uleb128 0x1b
 7344 1969 EB040000 		.4byte	.LASF335
 7345 196d 03       		.byte	0x3
 7346 196e A204     		.2byte	0x4a2
 7347 1970 00000000 		.4byte	.LFB261
 7348 1974 E4000000 		.4byte	.LFE261-.LFB261
 7349 1978 01       		.uleb128 0x1
 7350 1979 9C       		.byte	0x9c
 7351 197a D4190000 		.4byte	0x19d4
 7352 197e 1A       		.uleb128 0x1a
 7353 197f 60000000 		.4byte	.LASF196
 7354 1983 03       		.byte	0x3
 7355 1984 A204     		.2byte	0x4a2
 7356 1986 B00E0000 		.4byte	0xeb0
 7357 198a 02       		.uleb128 0x2
 7358 198b 91       		.byte	0x91
 7359 198c 64       		.sleb128 -28
 7360 198d 1A       		.uleb128 0x1a
 7361 198e 360B0000 		.4byte	.LASF197
 7362 1992 03       		.byte	0x3
 7363 1993 A204     		.2byte	0x4a2
 7364 1995 9F130000 		.4byte	0x139f
 7365 1999 02       		.uleb128 0x2
 7366 199a 91       		.byte	0x91
 7367 199b 60       		.sleb128 -32
 7368 199c 23       		.uleb128 0x23
 7369 199d 17100000 		.4byte	.LASF336
 7370 19a1 03       		.byte	0x3
 7371 19a2 A404     		.2byte	0x4a4
 7372 19a4 CE000000 		.4byte	0xce
 7373 19a8 02       		.uleb128 0x2
 7374 19a9 91       		.byte	0x91
 7375 19aa 70       		.sleb128 -16
 7376 19ab 23       		.uleb128 0x23
 7377 19ac D3080000 		.4byte	.LASF312
 7378 19b0 03       		.byte	0x3
 7379 19b1 A504     		.2byte	0x4a5
 7380 19b3 CE000000 		.4byte	0xce
 7381 19b7 02       		.uleb128 0x2
 7382 19b8 91       		.byte	0x91
 7383 19b9 74       		.sleb128 -12
 7384 19ba 25       		.uleb128 0x25
 7385 19bb 9E000000 		.4byte	.LBB10
 7386 19bf 3E000000 		.4byte	.LBE10-.LBB10
 7387 19c3 29       		.uleb128 0x29
 7388 19c4 62756600 		.ascii	"buf\000"
 7389 19c8 03       		.byte	0x3
 7390 19c9 C804     		.2byte	0x4c8
 7391 19cb EA160000 		.4byte	0x16ea
 7392 19cf 02       		.uleb128 0x2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 214


 7393 19d0 91       		.byte	0x91
 7394 19d1 6C       		.sleb128 -20
 7395 19d2 00       		.byte	0
 7396 19d3 00       		.byte	0
 7397 19d4 1B       		.uleb128 0x1b
 7398 19d5 E0080000 		.4byte	.LASF337
 7399 19d9 03       		.byte	0x3
 7400 19da E604     		.2byte	0x4e6
 7401 19dc 00000000 		.4byte	.LFB262
 7402 19e0 FC000000 		.4byte	.LFE262-.LFB262
 7403 19e4 01       		.uleb128 0x1
 7404 19e5 9C       		.byte	0x9c
 7405 19e6 5E1A0000 		.4byte	0x1a5e
 7406 19ea 1A       		.uleb128 0x1a
 7407 19eb 60000000 		.4byte	.LASF196
 7408 19ef 03       		.byte	0x3
 7409 19f0 E604     		.2byte	0x4e6
 7410 19f2 B00E0000 		.4byte	0xeb0
 7411 19f6 02       		.uleb128 0x2
 7412 19f7 91       		.byte	0x91
 7413 19f8 54       		.sleb128 -44
 7414 19f9 1A       		.uleb128 0x1a
 7415 19fa 360B0000 		.4byte	.LASF197
 7416 19fe 03       		.byte	0x3
 7417 19ff E604     		.2byte	0x4e6
 7418 1a01 9F130000 		.4byte	0x139f
 7419 1a05 02       		.uleb128 0x2
 7420 1a06 91       		.byte	0x91
 7421 1a07 50       		.sleb128 -48
 7422 1a08 23       		.uleb128 0x23
 7423 1a09 D3080000 		.4byte	.LASF312
 7424 1a0d 03       		.byte	0x3
 7425 1a0e E804     		.2byte	0x4e8
 7426 1a10 CE000000 		.4byte	0xce
 7427 1a14 02       		.uleb128 0x2
 7428 1a15 91       		.byte	0x91
 7429 1a16 64       		.sleb128 -28
 7430 1a17 23       		.uleb128 0x23
 7431 1a18 FE020000 		.4byte	.LASF319
 7432 1a1c 03       		.byte	0x3
 7433 1a1d E904     		.2byte	0x4e9
 7434 1a1f CE000000 		.4byte	0xce
 7435 1a23 02       		.uleb128 0x2
 7436 1a24 91       		.byte	0x91
 7437 1a25 6C       		.sleb128 -20
 7438 1a26 23       		.uleb128 0x23
 7439 1a27 590B0000 		.4byte	.LASF315
 7440 1a2b 03       		.byte	0x3
 7441 1a2c EA04     		.2byte	0x4ea
 7442 1a2e CE000000 		.4byte	0xce
 7443 1a32 02       		.uleb128 0x2
 7444 1a33 91       		.byte	0x91
 7445 1a34 68       		.sleb128 -24
 7446 1a35 23       		.uleb128 0x23
 7447 1a36 D4010000 		.4byte	.LASF338
 7448 1a3a 03       		.byte	0x3
 7449 1a3b EB04     		.2byte	0x4eb
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 215


 7450 1a3d CE000000 		.4byte	0xce
 7451 1a41 02       		.uleb128 0x2
 7452 1a42 91       		.byte	0x91
 7453 1a43 60       		.sleb128 -32
 7454 1a44 25       		.uleb128 0x25
 7455 1a45 DC000000 		.4byte	.LBB11
 7456 1a49 18000000 		.4byte	.LBE11-.LBB11
 7457 1a4d 23       		.uleb128 0x23
 7458 1a4e B1020000 		.4byte	.LASF268
 7459 1a52 03       		.byte	0x3
 7460 1a53 2405     		.2byte	0x524
 7461 1a55 CE000000 		.4byte	0xce
 7462 1a59 02       		.uleb128 0x2
 7463 1a5a 91       		.byte	0x91
 7464 1a5b 5C       		.sleb128 -36
 7465 1a5c 00       		.byte	0
 7466 1a5d 00       		.byte	0
 7467 1a5e 1B       		.uleb128 0x1b
 7468 1a5f 63110000 		.4byte	.LASF339
 7469 1a63 03       		.byte	0x3
 7470 1a64 3A05     		.2byte	0x53a
 7471 1a66 00000000 		.4byte	.LFB263
 7472 1a6a FC000000 		.4byte	.LFE263-.LFB263
 7473 1a6e 01       		.uleb128 0x1
 7474 1a6f 9C       		.byte	0x9c
 7475 1a70 051B0000 		.4byte	0x1b05
 7476 1a74 1A       		.uleb128 0x1a
 7477 1a75 60000000 		.4byte	.LASF196
 7478 1a79 03       		.byte	0x3
 7479 1a7a 3A05     		.2byte	0x53a
 7480 1a7c B00E0000 		.4byte	0xeb0
 7481 1a80 02       		.uleb128 0x2
 7482 1a81 91       		.byte	0x91
 7483 1a82 5C       		.sleb128 -36
 7484 1a83 1A       		.uleb128 0x1a
 7485 1a84 360B0000 		.4byte	.LASF197
 7486 1a88 03       		.byte	0x3
 7487 1a89 3A05     		.2byte	0x53a
 7488 1a8b 9F130000 		.4byte	0x139f
 7489 1a8f 02       		.uleb128 0x2
 7490 1a90 91       		.byte	0x91
 7491 1a91 58       		.sleb128 -40
 7492 1a92 23       		.uleb128 0x23
 7493 1a93 FE020000 		.4byte	.LASF319
 7494 1a97 03       		.byte	0x3
 7495 1a98 3C05     		.2byte	0x53c
 7496 1a9a CE000000 		.4byte	0xce
 7497 1a9e 02       		.uleb128 0x2
 7498 1a9f 91       		.byte	0x91
 7499 1aa0 68       		.sleb128 -24
 7500 1aa1 23       		.uleb128 0x23
 7501 1aa2 B6100000 		.4byte	.LASF340
 7502 1aa6 03       		.byte	0x3
 7503 1aa7 3D05     		.2byte	0x53d
 7504 1aa9 CE000000 		.4byte	0xce
 7505 1aad 02       		.uleb128 0x2
 7506 1aae 91       		.byte	0x91
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 216


 7507 1aaf 74       		.sleb128 -12
 7508 1ab0 23       		.uleb128 0x23
 7509 1ab1 8A0E0000 		.4byte	.LASF321
 7510 1ab5 03       		.byte	0x3
 7511 1ab6 3E05     		.2byte	0x53e
 7512 1ab8 630D0000 		.4byte	0xd63
 7513 1abc 02       		.uleb128 0x2
 7514 1abd 91       		.byte	0x91
 7515 1abe 73       		.sleb128 -13
 7516 1abf 28       		.uleb128 0x28
 7517 1ac0 24000000 		.4byte	.LBB12
 7518 1ac4 48000000 		.4byte	.LBE12-.LBB12
 7519 1ac8 DC1A0000 		.4byte	0x1adc
 7520 1acc 29       		.uleb128 0x29
 7521 1acd 62756600 		.ascii	"buf\000"
 7522 1ad1 03       		.byte	0x3
 7523 1ad2 4205     		.2byte	0x542
 7524 1ad4 EA160000 		.4byte	0x16ea
 7525 1ad8 02       		.uleb128 0x2
 7526 1ad9 91       		.byte	0x91
 7527 1ada 6C       		.sleb128 -20
 7528 1adb 00       		.byte	0
 7529 1adc 25       		.uleb128 0x25
 7530 1add 82000000 		.4byte	.LBB13
 7531 1ae1 72000000 		.4byte	.LBE13-.LBB13
 7532 1ae5 23       		.uleb128 0x23
 7533 1ae6 58130000 		.4byte	.LASF341
 7534 1aea 03       		.byte	0x3
 7535 1aeb 5405     		.2byte	0x554
 7536 1aed CE000000 		.4byte	0xce
 7537 1af1 02       		.uleb128 0x2
 7538 1af2 91       		.byte	0x91
 7539 1af3 64       		.sleb128 -28
 7540 1af4 23       		.uleb128 0x23
 7541 1af5 F0150000 		.4byte	.LASF342
 7542 1af9 03       		.byte	0x3
 7543 1afa 5505     		.2byte	0x555
 7544 1afc CE000000 		.4byte	0xce
 7545 1b00 02       		.uleb128 0x2
 7546 1b01 91       		.byte	0x91
 7547 1b02 60       		.sleb128 -32
 7548 1b03 00       		.byte	0
 7549 1b04 00       		.byte	0
 7550 1b05 2A       		.uleb128 0x2a
 7551 1b06 56000000 		.4byte	.LASF343
 7552 1b0a 06       		.byte	0x6
 7553 1b0b A7       		.byte	0xa7
 7554 1b0c 101B0000 		.4byte	0x1b10
 7555 1b10 15       		.uleb128 0x15
 7556 1b11 04       		.byte	0x4
 7557 1b12 161B0000 		.4byte	0x1b16
 7558 1b16 06       		.uleb128 0x6
 7559 1b17 82050000 		.4byte	0x582
 7560 1b1b 2B       		.uleb128 0x2b
 7561 1b1c C2070000 		.4byte	.LASF344
 7562 1b20 0B       		.byte	0xb
 7563 1b21 F907     		.2byte	0x7f9
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 217


 7564 1b23 271B0000 		.4byte	0x1b27
 7565 1b27 05       		.uleb128 0x5
 7566 1b28 C3000000 		.4byte	0xc3
 7567 1b2c 00       		.byte	0
 7568              		.section	.debug_abbrev,"",%progbits
 7569              	.Ldebug_abbrev0:
 7570 0000 01       		.uleb128 0x1
 7571 0001 11       		.uleb128 0x11
 7572 0002 01       		.byte	0x1
 7573 0003 25       		.uleb128 0x25
 7574 0004 0E       		.uleb128 0xe
 7575 0005 13       		.uleb128 0x13
 7576 0006 0B       		.uleb128 0xb
 7577 0007 03       		.uleb128 0x3
 7578 0008 0E       		.uleb128 0xe
 7579 0009 1B       		.uleb128 0x1b
 7580 000a 0E       		.uleb128 0xe
 7581 000b 55       		.uleb128 0x55
 7582 000c 17       		.uleb128 0x17
 7583 000d 11       		.uleb128 0x11
 7584 000e 01       		.uleb128 0x1
 7585 000f 10       		.uleb128 0x10
 7586 0010 17       		.uleb128 0x17
 7587 0011 00       		.byte	0
 7588 0012 00       		.byte	0
 7589 0013 02       		.uleb128 0x2
 7590 0014 24       		.uleb128 0x24
 7591 0015 00       		.byte	0
 7592 0016 0B       		.uleb128 0xb
 7593 0017 0B       		.uleb128 0xb
 7594 0018 3E       		.uleb128 0x3e
 7595 0019 0B       		.uleb128 0xb
 7596 001a 03       		.uleb128 0x3
 7597 001b 0E       		.uleb128 0xe
 7598 001c 00       		.byte	0
 7599 001d 00       		.byte	0
 7600 001e 03       		.uleb128 0x3
 7601 001f 16       		.uleb128 0x16
 7602 0020 00       		.byte	0
 7603 0021 03       		.uleb128 0x3
 7604 0022 0E       		.uleb128 0xe
 7605 0023 3A       		.uleb128 0x3a
 7606 0024 0B       		.uleb128 0xb
 7607 0025 3B       		.uleb128 0x3b
 7608 0026 0B       		.uleb128 0xb
 7609 0027 49       		.uleb128 0x49
 7610 0028 13       		.uleb128 0x13
 7611 0029 00       		.byte	0
 7612 002a 00       		.byte	0
 7613 002b 04       		.uleb128 0x4
 7614 002c 24       		.uleb128 0x24
 7615 002d 00       		.byte	0
 7616 002e 0B       		.uleb128 0xb
 7617 002f 0B       		.uleb128 0xb
 7618 0030 3E       		.uleb128 0x3e
 7619 0031 0B       		.uleb128 0xb
 7620 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 218


 7621 0033 08       		.uleb128 0x8
 7622 0034 00       		.byte	0
 7623 0035 00       		.byte	0
 7624 0036 05       		.uleb128 0x5
 7625 0037 35       		.uleb128 0x35
 7626 0038 00       		.byte	0
 7627 0039 49       		.uleb128 0x49
 7628 003a 13       		.uleb128 0x13
 7629 003b 00       		.byte	0
 7630 003c 00       		.byte	0
 7631 003d 06       		.uleb128 0x6
 7632 003e 26       		.uleb128 0x26
 7633 003f 00       		.byte	0
 7634 0040 49       		.uleb128 0x49
 7635 0041 13       		.uleb128 0x13
 7636 0042 00       		.byte	0
 7637 0043 00       		.byte	0
 7638 0044 07       		.uleb128 0x7
 7639 0045 01       		.uleb128 0x1
 7640 0046 01       		.byte	0x1
 7641 0047 49       		.uleb128 0x49
 7642 0048 13       		.uleb128 0x13
 7643 0049 01       		.uleb128 0x1
 7644 004a 13       		.uleb128 0x13
 7645 004b 00       		.byte	0
 7646 004c 00       		.byte	0
 7647 004d 08       		.uleb128 0x8
 7648 004e 21       		.uleb128 0x21
 7649 004f 00       		.byte	0
 7650 0050 49       		.uleb128 0x49
 7651 0051 13       		.uleb128 0x13
 7652 0052 2F       		.uleb128 0x2f
 7653 0053 0B       		.uleb128 0xb
 7654 0054 00       		.byte	0
 7655 0055 00       		.byte	0
 7656 0056 09       		.uleb128 0x9
 7657 0057 13       		.uleb128 0x13
 7658 0058 01       		.byte	0x1
 7659 0059 0B       		.uleb128 0xb
 7660 005a 0B       		.uleb128 0xb
 7661 005b 3A       		.uleb128 0x3a
 7662 005c 0B       		.uleb128 0xb
 7663 005d 3B       		.uleb128 0x3b
 7664 005e 0B       		.uleb128 0xb
 7665 005f 01       		.uleb128 0x1
 7666 0060 13       		.uleb128 0x13
 7667 0061 00       		.byte	0
 7668 0062 00       		.byte	0
 7669 0063 0A       		.uleb128 0xa
 7670 0064 0D       		.uleb128 0xd
 7671 0065 00       		.byte	0
 7672 0066 03       		.uleb128 0x3
 7673 0067 0E       		.uleb128 0xe
 7674 0068 3A       		.uleb128 0x3a
 7675 0069 0B       		.uleb128 0xb
 7676 006a 3B       		.uleb128 0x3b
 7677 006b 0B       		.uleb128 0xb
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 219


 7678 006c 49       		.uleb128 0x49
 7679 006d 13       		.uleb128 0x13
 7680 006e 38       		.uleb128 0x38
 7681 006f 0B       		.uleb128 0xb
 7682 0070 00       		.byte	0
 7683 0071 00       		.byte	0
 7684 0072 0B       		.uleb128 0xb
 7685 0073 21       		.uleb128 0x21
 7686 0074 00       		.byte	0
 7687 0075 49       		.uleb128 0x49
 7688 0076 13       		.uleb128 0x13
 7689 0077 2F       		.uleb128 0x2f
 7690 0078 05       		.uleb128 0x5
 7691 0079 00       		.byte	0
 7692 007a 00       		.byte	0
 7693 007b 0C       		.uleb128 0xc
 7694 007c 13       		.uleb128 0x13
 7695 007d 01       		.byte	0x1
 7696 007e 0B       		.uleb128 0xb
 7697 007f 05       		.uleb128 0x5
 7698 0080 3A       		.uleb128 0x3a
 7699 0081 0B       		.uleb128 0xb
 7700 0082 3B       		.uleb128 0x3b
 7701 0083 0B       		.uleb128 0xb
 7702 0084 01       		.uleb128 0x1
 7703 0085 13       		.uleb128 0x13
 7704 0086 00       		.byte	0
 7705 0087 00       		.byte	0
 7706 0088 0D       		.uleb128 0xd
 7707 0089 0D       		.uleb128 0xd
 7708 008a 00       		.byte	0
 7709 008b 03       		.uleb128 0x3
 7710 008c 0E       		.uleb128 0xe
 7711 008d 3A       		.uleb128 0x3a
 7712 008e 0B       		.uleb128 0xb
 7713 008f 3B       		.uleb128 0x3b
 7714 0090 0B       		.uleb128 0xb
 7715 0091 49       		.uleb128 0x49
 7716 0092 13       		.uleb128 0x13
 7717 0093 38       		.uleb128 0x38
 7718 0094 05       		.uleb128 0x5
 7719 0095 00       		.byte	0
 7720 0096 00       		.byte	0
 7721 0097 0E       		.uleb128 0xe
 7722 0098 16       		.uleb128 0x16
 7723 0099 00       		.byte	0
 7724 009a 03       		.uleb128 0x3
 7725 009b 0E       		.uleb128 0xe
 7726 009c 3A       		.uleb128 0x3a
 7727 009d 0B       		.uleb128 0xb
 7728 009e 3B       		.uleb128 0x3b
 7729 009f 05       		.uleb128 0x5
 7730 00a0 49       		.uleb128 0x49
 7731 00a1 13       		.uleb128 0x13
 7732 00a2 00       		.byte	0
 7733 00a3 00       		.byte	0
 7734 00a4 0F       		.uleb128 0xf
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 220


 7735 00a5 04       		.uleb128 0x4
 7736 00a6 01       		.byte	0x1
 7737 00a7 0B       		.uleb128 0xb
 7738 00a8 0B       		.uleb128 0xb
 7739 00a9 49       		.uleb128 0x49
 7740 00aa 13       		.uleb128 0x13
 7741 00ab 3A       		.uleb128 0x3a
 7742 00ac 0B       		.uleb128 0xb
 7743 00ad 3B       		.uleb128 0x3b
 7744 00ae 05       		.uleb128 0x5
 7745 00af 01       		.uleb128 0x1
 7746 00b0 13       		.uleb128 0x13
 7747 00b1 00       		.byte	0
 7748 00b2 00       		.byte	0
 7749 00b3 10       		.uleb128 0x10
 7750 00b4 28       		.uleb128 0x28
 7751 00b5 00       		.byte	0
 7752 00b6 03       		.uleb128 0x3
 7753 00b7 0E       		.uleb128 0xe
 7754 00b8 1C       		.uleb128 0x1c
 7755 00b9 0B       		.uleb128 0xb
 7756 00ba 00       		.byte	0
 7757 00bb 00       		.byte	0
 7758 00bc 11       		.uleb128 0x11
 7759 00bd 28       		.uleb128 0x28
 7760 00be 00       		.byte	0
 7761 00bf 03       		.uleb128 0x3
 7762 00c0 0E       		.uleb128 0xe
 7763 00c1 1C       		.uleb128 0x1c
 7764 00c2 06       		.uleb128 0x6
 7765 00c3 00       		.byte	0
 7766 00c4 00       		.byte	0
 7767 00c5 12       		.uleb128 0x12
 7768 00c6 13       		.uleb128 0x13
 7769 00c7 01       		.byte	0x1
 7770 00c8 0B       		.uleb128 0xb
 7771 00c9 0B       		.uleb128 0xb
 7772 00ca 3A       		.uleb128 0x3a
 7773 00cb 0B       		.uleb128 0xb
 7774 00cc 3B       		.uleb128 0x3b
 7775 00cd 05       		.uleb128 0x5
 7776 00ce 01       		.uleb128 0x1
 7777 00cf 13       		.uleb128 0x13
 7778 00d0 00       		.byte	0
 7779 00d1 00       		.byte	0
 7780 00d2 13       		.uleb128 0x13
 7781 00d3 0D       		.uleb128 0xd
 7782 00d4 00       		.byte	0
 7783 00d5 03       		.uleb128 0x3
 7784 00d6 0E       		.uleb128 0xe
 7785 00d7 3A       		.uleb128 0x3a
 7786 00d8 0B       		.uleb128 0xb
 7787 00d9 3B       		.uleb128 0x3b
 7788 00da 05       		.uleb128 0x5
 7789 00db 49       		.uleb128 0x49
 7790 00dc 13       		.uleb128 0x13
 7791 00dd 38       		.uleb128 0x38
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 221


 7792 00de 0B       		.uleb128 0xb
 7793 00df 00       		.byte	0
 7794 00e0 00       		.byte	0
 7795 00e1 14       		.uleb128 0x14
 7796 00e2 0F       		.uleb128 0xf
 7797 00e3 00       		.byte	0
 7798 00e4 0B       		.uleb128 0xb
 7799 00e5 0B       		.uleb128 0xb
 7800 00e6 00       		.byte	0
 7801 00e7 00       		.byte	0
 7802 00e8 15       		.uleb128 0x15
 7803 00e9 0F       		.uleb128 0xf
 7804 00ea 00       		.byte	0
 7805 00eb 0B       		.uleb128 0xb
 7806 00ec 0B       		.uleb128 0xb
 7807 00ed 49       		.uleb128 0x49
 7808 00ee 13       		.uleb128 0x13
 7809 00ef 00       		.byte	0
 7810 00f0 00       		.byte	0
 7811 00f1 16       		.uleb128 0x16
 7812 00f2 15       		.uleb128 0x15
 7813 00f3 01       		.byte	0x1
 7814 00f4 27       		.uleb128 0x27
 7815 00f5 19       		.uleb128 0x19
 7816 00f6 01       		.uleb128 0x1
 7817 00f7 13       		.uleb128 0x13
 7818 00f8 00       		.byte	0
 7819 00f9 00       		.byte	0
 7820 00fa 17       		.uleb128 0x17
 7821 00fb 05       		.uleb128 0x5
 7822 00fc 00       		.byte	0
 7823 00fd 49       		.uleb128 0x49
 7824 00fe 13       		.uleb128 0x13
 7825 00ff 00       		.byte	0
 7826 0100 00       		.byte	0
 7827 0101 18       		.uleb128 0x18
 7828 0102 13       		.uleb128 0x13
 7829 0103 01       		.byte	0x1
 7830 0104 03       		.uleb128 0x3
 7831 0105 0E       		.uleb128 0xe
 7832 0106 0B       		.uleb128 0xb
 7833 0107 0B       		.uleb128 0xb
 7834 0108 3A       		.uleb128 0x3a
 7835 0109 0B       		.uleb128 0xb
 7836 010a 3B       		.uleb128 0x3b
 7837 010b 05       		.uleb128 0x5
 7838 010c 01       		.uleb128 0x1
 7839 010d 13       		.uleb128 0x13
 7840 010e 00       		.byte	0
 7841 010f 00       		.byte	0
 7842 0110 19       		.uleb128 0x19
 7843 0111 2E       		.uleb128 0x2e
 7844 0112 01       		.byte	0x1
 7845 0113 03       		.uleb128 0x3
 7846 0114 0E       		.uleb128 0xe
 7847 0115 3A       		.uleb128 0x3a
 7848 0116 0B       		.uleb128 0xb
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 222


 7849 0117 3B       		.uleb128 0x3b
 7850 0118 05       		.uleb128 0x5
 7851 0119 27       		.uleb128 0x27
 7852 011a 19       		.uleb128 0x19
 7853 011b 49       		.uleb128 0x49
 7854 011c 13       		.uleb128 0x13
 7855 011d 11       		.uleb128 0x11
 7856 011e 01       		.uleb128 0x1
 7857 011f 12       		.uleb128 0x12
 7858 0120 06       		.uleb128 0x6
 7859 0121 40       		.uleb128 0x40
 7860 0122 18       		.uleb128 0x18
 7861 0123 9742     		.uleb128 0x2117
 7862 0125 19       		.uleb128 0x19
 7863 0126 01       		.uleb128 0x1
 7864 0127 13       		.uleb128 0x13
 7865 0128 00       		.byte	0
 7866 0129 00       		.byte	0
 7867 012a 1A       		.uleb128 0x1a
 7868 012b 05       		.uleb128 0x5
 7869 012c 00       		.byte	0
 7870 012d 03       		.uleb128 0x3
 7871 012e 0E       		.uleb128 0xe
 7872 012f 3A       		.uleb128 0x3a
 7873 0130 0B       		.uleb128 0xb
 7874 0131 3B       		.uleb128 0x3b
 7875 0132 05       		.uleb128 0x5
 7876 0133 49       		.uleb128 0x49
 7877 0134 13       		.uleb128 0x13
 7878 0135 02       		.uleb128 0x2
 7879 0136 18       		.uleb128 0x18
 7880 0137 00       		.byte	0
 7881 0138 00       		.byte	0
 7882 0139 1B       		.uleb128 0x1b
 7883 013a 2E       		.uleb128 0x2e
 7884 013b 01       		.byte	0x1
 7885 013c 03       		.uleb128 0x3
 7886 013d 0E       		.uleb128 0xe
 7887 013e 3A       		.uleb128 0x3a
 7888 013f 0B       		.uleb128 0xb
 7889 0140 3B       		.uleb128 0x3b
 7890 0141 05       		.uleb128 0x5
 7891 0142 27       		.uleb128 0x27
 7892 0143 19       		.uleb128 0x19
 7893 0144 11       		.uleb128 0x11
 7894 0145 01       		.uleb128 0x1
 7895 0146 12       		.uleb128 0x12
 7896 0147 06       		.uleb128 0x6
 7897 0148 40       		.uleb128 0x40
 7898 0149 18       		.uleb128 0x18
 7899 014a 9642     		.uleb128 0x2116
 7900 014c 19       		.uleb128 0x19
 7901 014d 01       		.uleb128 0x1
 7902 014e 13       		.uleb128 0x13
 7903 014f 00       		.byte	0
 7904 0150 00       		.byte	0
 7905 0151 1C       		.uleb128 0x1c
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 223


 7906 0152 2E       		.uleb128 0x2e
 7907 0153 01       		.byte	0x1
 7908 0154 03       		.uleb128 0x3
 7909 0155 0E       		.uleb128 0xe
 7910 0156 3A       		.uleb128 0x3a
 7911 0157 0B       		.uleb128 0xb
 7912 0158 3B       		.uleb128 0x3b
 7913 0159 05       		.uleb128 0x5
 7914 015a 27       		.uleb128 0x27
 7915 015b 19       		.uleb128 0x19
 7916 015c 11       		.uleb128 0x11
 7917 015d 01       		.uleb128 0x1
 7918 015e 12       		.uleb128 0x12
 7919 015f 06       		.uleb128 0x6
 7920 0160 40       		.uleb128 0x40
 7921 0161 18       		.uleb128 0x18
 7922 0162 9742     		.uleb128 0x2117
 7923 0164 19       		.uleb128 0x19
 7924 0165 01       		.uleb128 0x1
 7925 0166 13       		.uleb128 0x13
 7926 0167 00       		.byte	0
 7927 0168 00       		.byte	0
 7928 0169 1D       		.uleb128 0x1d
 7929 016a 2E       		.uleb128 0x2e
 7930 016b 01       		.byte	0x1
 7931 016c 03       		.uleb128 0x3
 7932 016d 0E       		.uleb128 0xe
 7933 016e 3A       		.uleb128 0x3a
 7934 016f 0B       		.uleb128 0xb
 7935 0170 3B       		.uleb128 0x3b
 7936 0171 05       		.uleb128 0x5
 7937 0172 27       		.uleb128 0x27
 7938 0173 19       		.uleb128 0x19
 7939 0174 49       		.uleb128 0x49
 7940 0175 13       		.uleb128 0x13
 7941 0176 11       		.uleb128 0x11
 7942 0177 01       		.uleb128 0x1
 7943 0178 12       		.uleb128 0x12
 7944 0179 06       		.uleb128 0x6
 7945 017a 40       		.uleb128 0x40
 7946 017b 18       		.uleb128 0x18
 7947 017c 9642     		.uleb128 0x2116
 7948 017e 19       		.uleb128 0x19
 7949 017f 01       		.uleb128 0x1
 7950 0180 13       		.uleb128 0x13
 7951 0181 00       		.byte	0
 7952 0182 00       		.byte	0
 7953 0183 1E       		.uleb128 0x1e
 7954 0184 2E       		.uleb128 0x2e
 7955 0185 01       		.byte	0x1
 7956 0186 3F       		.uleb128 0x3f
 7957 0187 19       		.uleb128 0x19
 7958 0188 03       		.uleb128 0x3
 7959 0189 0E       		.uleb128 0xe
 7960 018a 3A       		.uleb128 0x3a
 7961 018b 0B       		.uleb128 0xb
 7962 018c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 224


 7963 018d 0B       		.uleb128 0xb
 7964 018e 27       		.uleb128 0x27
 7965 018f 19       		.uleb128 0x19
 7966 0190 49       		.uleb128 0x49
 7967 0191 13       		.uleb128 0x13
 7968 0192 11       		.uleb128 0x11
 7969 0193 01       		.uleb128 0x1
 7970 0194 12       		.uleb128 0x12
 7971 0195 06       		.uleb128 0x6
 7972 0196 40       		.uleb128 0x40
 7973 0197 18       		.uleb128 0x18
 7974 0198 9642     		.uleb128 0x2116
 7975 019a 19       		.uleb128 0x19
 7976 019b 01       		.uleb128 0x1
 7977 019c 13       		.uleb128 0x13
 7978 019d 00       		.byte	0
 7979 019e 00       		.byte	0
 7980 019f 1F       		.uleb128 0x1f
 7981 01a0 05       		.uleb128 0x5
 7982 01a1 00       		.byte	0
 7983 01a2 03       		.uleb128 0x3
 7984 01a3 0E       		.uleb128 0xe
 7985 01a4 3A       		.uleb128 0x3a
 7986 01a5 0B       		.uleb128 0xb
 7987 01a6 3B       		.uleb128 0x3b
 7988 01a7 0B       		.uleb128 0xb
 7989 01a8 49       		.uleb128 0x49
 7990 01a9 13       		.uleb128 0x13
 7991 01aa 02       		.uleb128 0x2
 7992 01ab 18       		.uleb128 0x18
 7993 01ac 00       		.byte	0
 7994 01ad 00       		.byte	0
 7995 01ae 20       		.uleb128 0x20
 7996 01af 34       		.uleb128 0x34
 7997 01b0 00       		.byte	0
 7998 01b1 03       		.uleb128 0x3
 7999 01b2 08       		.uleb128 0x8
 8000 01b3 3A       		.uleb128 0x3a
 8001 01b4 0B       		.uleb128 0xb
 8002 01b5 3B       		.uleb128 0x3b
 8003 01b6 0B       		.uleb128 0xb
 8004 01b7 49       		.uleb128 0x49
 8005 01b8 13       		.uleb128 0x13
 8006 01b9 02       		.uleb128 0x2
 8007 01ba 18       		.uleb128 0x18
 8008 01bb 00       		.byte	0
 8009 01bc 00       		.byte	0
 8010 01bd 21       		.uleb128 0x21
 8011 01be 2E       		.uleb128 0x2e
 8012 01bf 01       		.byte	0x1
 8013 01c0 3F       		.uleb128 0x3f
 8014 01c1 19       		.uleb128 0x19
 8015 01c2 03       		.uleb128 0x3
 8016 01c3 0E       		.uleb128 0xe
 8017 01c4 3A       		.uleb128 0x3a
 8018 01c5 0B       		.uleb128 0xb
 8019 01c6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 225


 8020 01c7 0B       		.uleb128 0xb
 8021 01c8 27       		.uleb128 0x27
 8022 01c9 19       		.uleb128 0x19
 8023 01ca 11       		.uleb128 0x11
 8024 01cb 01       		.uleb128 0x1
 8025 01cc 12       		.uleb128 0x12
 8026 01cd 06       		.uleb128 0x6
 8027 01ce 40       		.uleb128 0x40
 8028 01cf 18       		.uleb128 0x18
 8029 01d0 9742     		.uleb128 0x2117
 8030 01d2 19       		.uleb128 0x19
 8031 01d3 01       		.uleb128 0x1
 8032 01d4 13       		.uleb128 0x13
 8033 01d5 00       		.byte	0
 8034 01d6 00       		.byte	0
 8035 01d7 22       		.uleb128 0x22
 8036 01d8 2E       		.uleb128 0x2e
 8037 01d9 01       		.byte	0x1
 8038 01da 3F       		.uleb128 0x3f
 8039 01db 19       		.uleb128 0x19
 8040 01dc 03       		.uleb128 0x3
 8041 01dd 0E       		.uleb128 0xe
 8042 01de 3A       		.uleb128 0x3a
 8043 01df 0B       		.uleb128 0xb
 8044 01e0 3B       		.uleb128 0x3b
 8045 01e1 05       		.uleb128 0x5
 8046 01e2 27       		.uleb128 0x27
 8047 01e3 19       		.uleb128 0x19
 8048 01e4 49       		.uleb128 0x49
 8049 01e5 13       		.uleb128 0x13
 8050 01e6 11       		.uleb128 0x11
 8051 01e7 01       		.uleb128 0x1
 8052 01e8 12       		.uleb128 0x12
 8053 01e9 06       		.uleb128 0x6
 8054 01ea 40       		.uleb128 0x40
 8055 01eb 18       		.uleb128 0x18
 8056 01ec 9642     		.uleb128 0x2116
 8057 01ee 19       		.uleb128 0x19
 8058 01ef 01       		.uleb128 0x1
 8059 01f0 13       		.uleb128 0x13
 8060 01f1 00       		.byte	0
 8061 01f2 00       		.byte	0
 8062 01f3 23       		.uleb128 0x23
 8063 01f4 34       		.uleb128 0x34
 8064 01f5 00       		.byte	0
 8065 01f6 03       		.uleb128 0x3
 8066 01f7 0E       		.uleb128 0xe
 8067 01f8 3A       		.uleb128 0x3a
 8068 01f9 0B       		.uleb128 0xb
 8069 01fa 3B       		.uleb128 0x3b
 8070 01fb 05       		.uleb128 0x5
 8071 01fc 49       		.uleb128 0x49
 8072 01fd 13       		.uleb128 0x13
 8073 01fe 02       		.uleb128 0x2
 8074 01ff 18       		.uleb128 0x18
 8075 0200 00       		.byte	0
 8076 0201 00       		.byte	0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 226


 8077 0202 24       		.uleb128 0x24
 8078 0203 2E       		.uleb128 0x2e
 8079 0204 01       		.byte	0x1
 8080 0205 3F       		.uleb128 0x3f
 8081 0206 19       		.uleb128 0x19
 8082 0207 03       		.uleb128 0x3
 8083 0208 0E       		.uleb128 0xe
 8084 0209 3A       		.uleb128 0x3a
 8085 020a 0B       		.uleb128 0xb
 8086 020b 3B       		.uleb128 0x3b
 8087 020c 05       		.uleb128 0x5
 8088 020d 27       		.uleb128 0x27
 8089 020e 19       		.uleb128 0x19
 8090 020f 11       		.uleb128 0x11
 8091 0210 01       		.uleb128 0x1
 8092 0211 12       		.uleb128 0x12
 8093 0212 06       		.uleb128 0x6
 8094 0213 40       		.uleb128 0x40
 8095 0214 18       		.uleb128 0x18
 8096 0215 9642     		.uleb128 0x2116
 8097 0217 19       		.uleb128 0x19
 8098 0218 01       		.uleb128 0x1
 8099 0219 13       		.uleb128 0x13
 8100 021a 00       		.byte	0
 8101 021b 00       		.byte	0
 8102 021c 25       		.uleb128 0x25
 8103 021d 0B       		.uleb128 0xb
 8104 021e 01       		.byte	0x1
 8105 021f 11       		.uleb128 0x11
 8106 0220 01       		.uleb128 0x1
 8107 0221 12       		.uleb128 0x12
 8108 0222 06       		.uleb128 0x6
 8109 0223 00       		.byte	0
 8110 0224 00       		.byte	0
 8111 0225 26       		.uleb128 0x26
 8112 0226 2E       		.uleb128 0x2e
 8113 0227 01       		.byte	0x1
 8114 0228 3F       		.uleb128 0x3f
 8115 0229 19       		.uleb128 0x19
 8116 022a 03       		.uleb128 0x3
 8117 022b 0E       		.uleb128 0xe
 8118 022c 3A       		.uleb128 0x3a
 8119 022d 0B       		.uleb128 0xb
 8120 022e 3B       		.uleb128 0x3b
 8121 022f 05       		.uleb128 0x5
 8122 0230 27       		.uleb128 0x27
 8123 0231 19       		.uleb128 0x19
 8124 0232 49       		.uleb128 0x49
 8125 0233 13       		.uleb128 0x13
 8126 0234 11       		.uleb128 0x11
 8127 0235 01       		.uleb128 0x1
 8128 0236 12       		.uleb128 0x12
 8129 0237 06       		.uleb128 0x6
 8130 0238 40       		.uleb128 0x40
 8131 0239 18       		.uleb128 0x18
 8132 023a 9742     		.uleb128 0x2117
 8133 023c 19       		.uleb128 0x19
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 227


 8134 023d 01       		.uleb128 0x1
 8135 023e 13       		.uleb128 0x13
 8136 023f 00       		.byte	0
 8137 0240 00       		.byte	0
 8138 0241 27       		.uleb128 0x27
 8139 0242 2E       		.uleb128 0x2e
 8140 0243 01       		.byte	0x1
 8141 0244 3F       		.uleb128 0x3f
 8142 0245 19       		.uleb128 0x19
 8143 0246 03       		.uleb128 0x3
 8144 0247 0E       		.uleb128 0xe
 8145 0248 3A       		.uleb128 0x3a
 8146 0249 0B       		.uleb128 0xb
 8147 024a 3B       		.uleb128 0x3b
 8148 024b 05       		.uleb128 0x5
 8149 024c 27       		.uleb128 0x27
 8150 024d 19       		.uleb128 0x19
 8151 024e 11       		.uleb128 0x11
 8152 024f 01       		.uleb128 0x1
 8153 0250 12       		.uleb128 0x12
 8154 0251 06       		.uleb128 0x6
 8155 0252 40       		.uleb128 0x40
 8156 0253 18       		.uleb128 0x18
 8157 0254 9742     		.uleb128 0x2117
 8158 0256 19       		.uleb128 0x19
 8159 0257 01       		.uleb128 0x1
 8160 0258 13       		.uleb128 0x13
 8161 0259 00       		.byte	0
 8162 025a 00       		.byte	0
 8163 025b 28       		.uleb128 0x28
 8164 025c 0B       		.uleb128 0xb
 8165 025d 01       		.byte	0x1
 8166 025e 11       		.uleb128 0x11
 8167 025f 01       		.uleb128 0x1
 8168 0260 12       		.uleb128 0x12
 8169 0261 06       		.uleb128 0x6
 8170 0262 01       		.uleb128 0x1
 8171 0263 13       		.uleb128 0x13
 8172 0264 00       		.byte	0
 8173 0265 00       		.byte	0
 8174 0266 29       		.uleb128 0x29
 8175 0267 34       		.uleb128 0x34
 8176 0268 00       		.byte	0
 8177 0269 03       		.uleb128 0x3
 8178 026a 08       		.uleb128 0x8
 8179 026b 3A       		.uleb128 0x3a
 8180 026c 0B       		.uleb128 0xb
 8181 026d 3B       		.uleb128 0x3b
 8182 026e 05       		.uleb128 0x5
 8183 026f 49       		.uleb128 0x49
 8184 0270 13       		.uleb128 0x13
 8185 0271 02       		.uleb128 0x2
 8186 0272 18       		.uleb128 0x18
 8187 0273 00       		.byte	0
 8188 0274 00       		.byte	0
 8189 0275 2A       		.uleb128 0x2a
 8190 0276 34       		.uleb128 0x34
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 228


 8191 0277 00       		.byte	0
 8192 0278 03       		.uleb128 0x3
 8193 0279 0E       		.uleb128 0xe
 8194 027a 3A       		.uleb128 0x3a
 8195 027b 0B       		.uleb128 0xb
 8196 027c 3B       		.uleb128 0x3b
 8197 027d 0B       		.uleb128 0xb
 8198 027e 49       		.uleb128 0x49
 8199 027f 13       		.uleb128 0x13
 8200 0280 3F       		.uleb128 0x3f
 8201 0281 19       		.uleb128 0x19
 8202 0282 3C       		.uleb128 0x3c
 8203 0283 19       		.uleb128 0x19
 8204 0284 00       		.byte	0
 8205 0285 00       		.byte	0
 8206 0286 2B       		.uleb128 0x2b
 8207 0287 34       		.uleb128 0x34
 8208 0288 00       		.byte	0
 8209 0289 03       		.uleb128 0x3
 8210 028a 0E       		.uleb128 0xe
 8211 028b 3A       		.uleb128 0x3a
 8212 028c 0B       		.uleb128 0xb
 8213 028d 3B       		.uleb128 0x3b
 8214 028e 05       		.uleb128 0x5
 8215 028f 49       		.uleb128 0x49
 8216 0290 13       		.uleb128 0x13
 8217 0291 3F       		.uleb128 0x3f
 8218 0292 19       		.uleb128 0x19
 8219 0293 3C       		.uleb128 0x3c
 8220 0294 19       		.uleb128 0x19
 8221 0295 00       		.byte	0
 8222 0296 00       		.byte	0
 8223 0297 00       		.byte	0
 8224              		.section	.debug_aranges,"",%progbits
 8225 0000 9C010000 		.4byte	0x19c
 8226 0004 0200     		.2byte	0x2
 8227 0006 00000000 		.4byte	.Ldebug_info0
 8228 000a 04       		.byte	0x4
 8229 000b 00       		.byte	0
 8230 000c 0000     		.2byte	0
 8231 000e 0000     		.2byte	0
 8232 0010 00000000 		.4byte	.LFB166
 8233 0014 1A000000 		.4byte	.LFE166-.LFB166
 8234 0018 00000000 		.4byte	.LFB167
 8235 001c 44000000 		.4byte	.LFE167-.LFB167
 8236 0020 00000000 		.4byte	.LFB168
 8237 0024 1E000000 		.4byte	.LFE168-.LFB168
 8238 0028 00000000 		.4byte	.LFB171
 8239 002c 1E000000 		.4byte	.LFE171-.LFB171
 8240 0030 00000000 		.4byte	.LFB172
 8241 0034 44000000 		.4byte	.LFE172-.LFB172
 8242 0038 00000000 		.4byte	.LFB173
 8243 003c 1E000000 		.4byte	.LFE173-.LFB173
 8244 0040 00000000 		.4byte	.LFB174
 8245 0044 20000000 		.4byte	.LFE174-.LFB174
 8246 0048 00000000 		.4byte	.LFB175
 8247 004c 2C000000 		.4byte	.LFE175-.LFB175
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 229


 8248 0050 00000000 		.4byte	.LFB176
 8249 0054 3A000000 		.4byte	.LFE176-.LFB176
 8250 0058 00000000 		.4byte	.LFB178
 8251 005c 1A000000 		.4byte	.LFE178-.LFB178
 8252 0060 00000000 		.4byte	.LFB180
 8253 0064 38000000 		.4byte	.LFE180-.LFB180
 8254 0068 00000000 		.4byte	.LFB182
 8255 006c 1A000000 		.4byte	.LFE182-.LFB182
 8256 0070 00000000 		.4byte	.LFB183
 8257 0074 3C000000 		.4byte	.LFE183-.LFB183
 8258 0078 00000000 		.4byte	.LFB185
 8259 007c 20000000 		.4byte	.LFE185-.LFB185
 8260 0080 00000000 		.4byte	.LFB186
 8261 0084 38000000 		.4byte	.LFE186-.LFB186
 8262 0088 00000000 		.4byte	.LFB187
 8263 008c 1A000000 		.4byte	.LFE187-.LFB187
 8264 0090 00000000 		.4byte	.LFB188
 8265 0094 1A000000 		.4byte	.LFE188-.LFB188
 8266 0098 00000000 		.4byte	.LFB189
 8267 009c 3C000000 		.4byte	.LFE189-.LFB189
 8268 00a0 00000000 		.4byte	.LFB213
 8269 00a4 26000000 		.4byte	.LFE213-.LFB213
 8270 00a8 00000000 		.4byte	.LFB214
 8271 00ac 28000000 		.4byte	.LFE214-.LFB214
 8272 00b0 00000000 		.4byte	.LFB215
 8273 00b4 28000000 		.4byte	.LFE215-.LFB215
 8274 00b8 00000000 		.4byte	.LFB218
 8275 00bc 20000000 		.4byte	.LFE218-.LFB218
 8276 00c0 00000000 		.4byte	.LFB226
 8277 00c4 3C000000 		.4byte	.LFE226-.LFB226
 8278 00c8 00000000 		.4byte	.LFB230
 8279 00cc 18000000 		.4byte	.LFE230-.LFB230
 8280 00d0 00000000 		.4byte	.LFB233
 8281 00d4 3C000000 		.4byte	.LFE233-.LFB233
 8282 00d8 00000000 		.4byte	.LFB239
 8283 00dc 18000000 		.4byte	.LFE239-.LFB239
 8284 00e0 00000000 		.4byte	.LFB240
 8285 00e4 16000000 		.4byte	.LFE240-.LFB240
 8286 00e8 00000000 		.4byte	.LFB242
 8287 00ec E0040000 		.4byte	.LFE242-.LFB242
 8288 00f0 00000000 		.4byte	.LFB243
 8289 00f4 94000000 		.4byte	.LFE243-.LFB243
 8290 00f8 00000000 		.4byte	.LFB244
 8291 00fc 40000000 		.4byte	.LFE244-.LFB244
 8292 0100 00000000 		.4byte	.LFB245
 8293 0104 C4000000 		.4byte	.LFE245-.LFB245
 8294 0108 00000000 		.4byte	.LFB246
 8295 010c 20000000 		.4byte	.LFE246-.LFB246
 8296 0110 00000000 		.4byte	.LFB247
 8297 0114 AC000000 		.4byte	.LFE247-.LFB247
 8298 0118 00000000 		.4byte	.LFB248
 8299 011c 2E000000 		.4byte	.LFE248-.LFB248
 8300 0120 00000000 		.4byte	.LFB249
 8301 0124 44000000 		.4byte	.LFE249-.LFB249
 8302 0128 00000000 		.4byte	.LFB250
 8303 012c 1E000000 		.4byte	.LFE250-.LFB250
 8304 0130 00000000 		.4byte	.LFB251
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 230


 8305 0134 C8010000 		.4byte	.LFE251-.LFB251
 8306 0138 00000000 		.4byte	.LFB252
 8307 013c 34000000 		.4byte	.LFE252-.LFB252
 8308 0140 00000000 		.4byte	.LFB253
 8309 0144 1A000000 		.4byte	.LFE253-.LFB253
 8310 0148 00000000 		.4byte	.LFB254
 8311 014c 1A000000 		.4byte	.LFE254-.LFB254
 8312 0150 00000000 		.4byte	.LFB255
 8313 0154 B8000000 		.4byte	.LFE255-.LFB255
 8314 0158 00000000 		.4byte	.LFB256
 8315 015c 32000000 		.4byte	.LFE256-.LFB256
 8316 0160 00000000 		.4byte	.LFB257
 8317 0164 1A000000 		.4byte	.LFE257-.LFB257
 8318 0168 00000000 		.4byte	.LFB258
 8319 016c 1A000000 		.4byte	.LFE258-.LFB258
 8320 0170 00000000 		.4byte	.LFB259
 8321 0174 9C000000 		.4byte	.LFE259-.LFB259
 8322 0178 00000000 		.4byte	.LFB260
 8323 017c 5C010000 		.4byte	.LFE260-.LFB260
 8324 0180 00000000 		.4byte	.LFB261
 8325 0184 E4000000 		.4byte	.LFE261-.LFB261
 8326 0188 00000000 		.4byte	.LFB262
 8327 018c FC000000 		.4byte	.LFE262-.LFB262
 8328 0190 00000000 		.4byte	.LFB263
 8329 0194 FC000000 		.4byte	.LFE263-.LFB263
 8330 0198 00000000 		.4byte	0
 8331 019c 00000000 		.4byte	0
 8332              		.section	.debug_ranges,"",%progbits
 8333              	.Ldebug_ranges0:
 8334 0000 00000000 		.4byte	.LFB166
 8335 0004 1A000000 		.4byte	.LFE166
 8336 0008 00000000 		.4byte	.LFB167
 8337 000c 44000000 		.4byte	.LFE167
 8338 0010 00000000 		.4byte	.LFB168
 8339 0014 1E000000 		.4byte	.LFE168
 8340 0018 00000000 		.4byte	.LFB171
 8341 001c 1E000000 		.4byte	.LFE171
 8342 0020 00000000 		.4byte	.LFB172
 8343 0024 44000000 		.4byte	.LFE172
 8344 0028 00000000 		.4byte	.LFB173
 8345 002c 1E000000 		.4byte	.LFE173
 8346 0030 00000000 		.4byte	.LFB174
 8347 0034 20000000 		.4byte	.LFE174
 8348 0038 00000000 		.4byte	.LFB175
 8349 003c 2C000000 		.4byte	.LFE175
 8350 0040 00000000 		.4byte	.LFB176
 8351 0044 3A000000 		.4byte	.LFE176
 8352 0048 00000000 		.4byte	.LFB178
 8353 004c 1A000000 		.4byte	.LFE178
 8354 0050 00000000 		.4byte	.LFB180
 8355 0054 38000000 		.4byte	.LFE180
 8356 0058 00000000 		.4byte	.LFB182
 8357 005c 1A000000 		.4byte	.LFE182
 8358 0060 00000000 		.4byte	.LFB183
 8359 0064 3C000000 		.4byte	.LFE183
 8360 0068 00000000 		.4byte	.LFB185
 8361 006c 20000000 		.4byte	.LFE185
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 231


 8362 0070 00000000 		.4byte	.LFB186
 8363 0074 38000000 		.4byte	.LFE186
 8364 0078 00000000 		.4byte	.LFB187
 8365 007c 1A000000 		.4byte	.LFE187
 8366 0080 00000000 		.4byte	.LFB188
 8367 0084 1A000000 		.4byte	.LFE188
 8368 0088 00000000 		.4byte	.LFB189
 8369 008c 3C000000 		.4byte	.LFE189
 8370 0090 00000000 		.4byte	.LFB213
 8371 0094 26000000 		.4byte	.LFE213
 8372 0098 00000000 		.4byte	.LFB214
 8373 009c 28000000 		.4byte	.LFE214
 8374 00a0 00000000 		.4byte	.LFB215
 8375 00a4 28000000 		.4byte	.LFE215
 8376 00a8 00000000 		.4byte	.LFB218
 8377 00ac 20000000 		.4byte	.LFE218
 8378 00b0 00000000 		.4byte	.LFB226
 8379 00b4 3C000000 		.4byte	.LFE226
 8380 00b8 00000000 		.4byte	.LFB230
 8381 00bc 18000000 		.4byte	.LFE230
 8382 00c0 00000000 		.4byte	.LFB233
 8383 00c4 3C000000 		.4byte	.LFE233
 8384 00c8 00000000 		.4byte	.LFB239
 8385 00cc 18000000 		.4byte	.LFE239
 8386 00d0 00000000 		.4byte	.LFB240
 8387 00d4 16000000 		.4byte	.LFE240
 8388 00d8 00000000 		.4byte	.LFB242
 8389 00dc E0040000 		.4byte	.LFE242
 8390 00e0 00000000 		.4byte	.LFB243
 8391 00e4 94000000 		.4byte	.LFE243
 8392 00e8 00000000 		.4byte	.LFB244
 8393 00ec 40000000 		.4byte	.LFE244
 8394 00f0 00000000 		.4byte	.LFB245
 8395 00f4 C4000000 		.4byte	.LFE245
 8396 00f8 00000000 		.4byte	.LFB246
 8397 00fc 20000000 		.4byte	.LFE246
 8398 0100 00000000 		.4byte	.LFB247
 8399 0104 AC000000 		.4byte	.LFE247
 8400 0108 00000000 		.4byte	.LFB248
 8401 010c 2E000000 		.4byte	.LFE248
 8402 0110 00000000 		.4byte	.LFB249
 8403 0114 44000000 		.4byte	.LFE249
 8404 0118 00000000 		.4byte	.LFB250
 8405 011c 1E000000 		.4byte	.LFE250
 8406 0120 00000000 		.4byte	.LFB251
 8407 0124 C8010000 		.4byte	.LFE251
 8408 0128 00000000 		.4byte	.LFB252
 8409 012c 34000000 		.4byte	.LFE252
 8410 0130 00000000 		.4byte	.LFB253
 8411 0134 1A000000 		.4byte	.LFE253
 8412 0138 00000000 		.4byte	.LFB254
 8413 013c 1A000000 		.4byte	.LFE254
 8414 0140 00000000 		.4byte	.LFB255
 8415 0144 B8000000 		.4byte	.LFE255
 8416 0148 00000000 		.4byte	.LFB256
 8417 014c 32000000 		.4byte	.LFE256
 8418 0150 00000000 		.4byte	.LFB257
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 232


 8419 0154 1A000000 		.4byte	.LFE257
 8420 0158 00000000 		.4byte	.LFB258
 8421 015c 1A000000 		.4byte	.LFE258
 8422 0160 00000000 		.4byte	.LFB259
 8423 0164 9C000000 		.4byte	.LFE259
 8424 0168 00000000 		.4byte	.LFB260
 8425 016c 5C010000 		.4byte	.LFE260
 8426 0170 00000000 		.4byte	.LFB261
 8427 0174 E4000000 		.4byte	.LFE261
 8428 0178 00000000 		.4byte	.LFB262
 8429 017c FC000000 		.4byte	.LFE262
 8430 0180 00000000 		.4byte	.LFB263
 8431 0184 FC000000 		.4byte	.LFE263
 8432 0188 00000000 		.4byte	0
 8433 018c 00000000 		.4byte	0
 8434              		.section	.debug_line,"",%progbits
 8435              	.Ldebug_line0:
 8436 0000 DA0B0000 		.section	.debug_str,"MS",%progbits,1
 8436      02000003 
 8436      00000201 
 8436      FB0E0D00 
 8436      01010101 
 8437              	.LASF64:
 8438 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 8438      6843746C 
 8438      4D61696E 
 8438      57733146 
 8438      72657100 
 8439              	.LASF272:
 8440 0014 43795F53 		.ascii	"Cy_SCB_WriteTxFifo\000"
 8440      43425F57 
 8440      72697465 
 8440      54784669 
 8440      666F00
 8441              	.LASF112:
 8442 0027 52455345 		.ascii	"RESERVED\000"
 8442      52564544 
 8442      00
 8443              	.LASF229:
 8444 0030 70617269 		.ascii	"parity\000"
 8444      747900
 8445              	.LASF198:
 8446 0037 63795F73 		.ascii	"cy_stc_syspm_callback_params_t\000"
 8446      74635F73 
 8446      7973706D 
 8446      5F63616C 
 8446      6C626163 
 8447              	.LASF343:
 8448 0056 63795F64 		.ascii	"cy_device\000"
 8448      65766963 
 8448      6500
 8449              	.LASF196:
 8450 0060 62617365 		.ascii	"base\000"
 8450      00
 8451              	.LASF91:
 8452 0065 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 8452      73436D30 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 233


 8452      436C6F63 
 8452      6B43746C 
 8452      4F666673 
 8453              	.LASF317:
 8454 007c 43795F53 		.ascii	"Cy_SCB_UART_Receive\000"
 8454      43425F55 
 8454      4152545F 
 8454      52656365 
 8454      69766500 
 8455              	.LASF311:
 8456 0090 43795F53 		.ascii	"Cy_SCB_UART_StartRingBuffer\000"
 8456      43425F55 
 8456      4152545F 
 8456      53746172 
 8456      7452696E 
 8457              	.LASF227:
 8458 00ac 656E6162 		.ascii	"enableMsbFirst\000"
 8458      6C654D73 
 8458      62466972 
 8458      737400
 8459              	.LASF253:
 8460 00bb 74785374 		.ascii	"txStatus\000"
 8460      61747573 
 8460      00
 8461              	.LASF199:
 8462 00c4 43595F53 		.ascii	"CY_SCB_UART_SUCCESS\000"
 8462      43425F55 
 8462      4152545F 
 8462      53554343 
 8462      45535300 
 8463              	.LASF24:
 8464 00d8 75646242 		.ascii	"udbBase\000"
 8464      61736500 
 8465              	.LASF347:
 8466 00e0 433A5C55 		.ascii	"C:\\Users\\stijn\\OneDrive\\Documenten\\PSoC Creato"
 8466      73657273 
 8466      5C737469 
 8466      6A6E5C4F 
 8466      6E654472 
 8467 010e 725C4144 		.ascii	"r\\ADC Klodden\\RTOS_I2C_Test.cydsn\000"
 8467      43204B6C 
 8467      6F646465 
 8467      6E5C5254 
 8467      4F535F49 
 8468              	.LASF111:
 8469 0130 434D445F 		.ascii	"CMD_RESP_STATUS\000"
 8469      52455350 
 8469      5F535441 
 8469      54555300 
 8470              	.LASF190:
 8471 0140 63795F65 		.ascii	"cy_en_syspm_status_t\000"
 8471      6E5F7379 
 8471      73706D5F 
 8471      73746174 
 8471      75735F74 
 8472              	.LASF171:
 8473 0155 494E5452 		.ascii	"INTR_TX_MASK\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 234


 8473      5F54585F 
 8473      4D41534B 
 8473      00
 8474              	.LASF23:
 8475 0162 70657269 		.ascii	"periBase\000"
 8475      42617365 
 8475      00
 8476              	.LASF286:
 8477 016b 43795F53 		.ascii	"Cy_SCB_GetTxInterruptMask\000"
 8477      43425F47 
 8477      65745478 
 8477      496E7465 
 8477      72727570 
 8478              	.LASF99:
 8479 0185 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 8479      73436D30 
 8479      4E6D6943 
 8479      746C4F66 
 8479      66736574 
 8480              	.LASF69:
 8481 019a 64774368 		.ascii	"dwChSize\000"
 8481      53697A65 
 8481      00
 8482              	.LASF287:
 8483 01a3 43795F53 		.ascii	"Cy_SCB_GetTxInterruptStatusMasked\000"
 8483      43425F47 
 8483      65745478 
 8483      496E7465 
 8483      72727570 
 8484              	.LASF132:
 8485 01c5 54585F46 		.ascii	"TX_FIFO_STATUS\000"
 8485      49464F5F 
 8485      53544154 
 8485      555300
 8486              	.LASF338:
 8487 01d4 72784461 		.ascii	"rxData\000"
 8487      746100
 8488              	.LASF13:
 8489 01db 756E7369 		.ascii	"unsigned int\000"
 8489      676E6564 
 8489      20696E74 
 8489      00
 8490              	.LASF147:
 8491 01e8 494E5452 		.ascii	"INTR_CAUSE\000"
 8491      5F434155 
 8491      534500
 8492              	.LASF51:
 8493 01f3 736D6966 		.ascii	"smifDeviceNr\000"
 8493      44657669 
 8493      63654E72 
 8493      00
 8494              	.LASF220:
 8495 0200 43595F53 		.ascii	"CY_SCB_UART_ACTIVE_LOW\000"
 8495      43425F55 
 8495      4152545F 
 8495      41435449 
 8495      56455F4C 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 235


 8496              	.LASF81:
 8497 0217 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 8497      44697643 
 8497      6D645061 
 8497      54797065 
 8497      53656C50 
 8498              	.LASF233:
 8499 022e 656E6162 		.ascii	"enableMutliProcessorMode\000"
 8499      6C654D75 
 8499      746C6950 
 8499      726F6365 
 8499      73736F72 
 8500              	.LASF43:
 8501 0247 63707573 		.ascii	"cpussFlashPaSize\000"
 8501      73466C61 
 8501      73685061 
 8501      53697A65 
 8501      00
 8502              	.LASF137:
 8503 0258 52585F46 		.ascii	"RX_FIFO_CTRL\000"
 8503      49464F5F 
 8503      4354524C 
 8503      00
 8504              	.LASF7:
 8505 0265 5F5F696E 		.ascii	"__int32_t\000"
 8505      7433325F 
 8505      7400
 8506              	.LASF267:
 8507 026f 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 8507      74635F73 
 8507      63625F75 
 8507      6172745F 
 8507      636F6E74 
 8508              	.LASF21:
 8509 0289 63707573 		.ascii	"cpussBase\000"
 8509      73426173 
 8509      6500
 8510              	.LASF289:
 8511 0293 43795F53 		.ascii	"Cy_SCB_GetFifoSize\000"
 8511      43425F47 
 8511      65744669 
 8511      666F5369 
 8511      7A6500
 8512              	.LASF165:
 8513 02a6 494E5452 		.ascii	"INTR_S_SET\000"
 8513      5F535F53 
 8513      455400
 8514              	.LASF268:
 8515 02b1 6C657665 		.ascii	"level\000"
 8515      6C00
 8516              	.LASF170:
 8517 02b7 494E5452 		.ascii	"INTR_TX_SET\000"
 8517      5F54585F 
 8517      53455400 
 8518              	.LASF177:
 8519 02c3 494E5452 		.ascii	"INTR_RX_MASKED\000"
 8519      5F52585F 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 236


 8519      4D41534B 
 8519      454400
 8520              	.LASF230:
 8521 02d2 656E6162 		.ascii	"enableInputFilter\000"
 8521      6C65496E 
 8521      70757446 
 8521      696C7465 
 8521      7200
 8522              	.LASF213:
 8523 02e4 43595F53 		.ascii	"CY_SCB_UART_STOP_BITS_3_5\000"
 8523      43425F55 
 8523      4152545F 
 8523      53544F50 
 8523      5F424954 
 8524              	.LASF319:
 8525 02fe 6E756D54 		.ascii	"numToCopy\000"
 8525      6F436F70 
 8525      7900
 8526              	.LASF45:
 8527 0308 63707573 		.ascii	"cpussFmIrq\000"
 8527      73466D49 
 8527      727100
 8528              	.LASF77:
 8529 0313 70657269 		.ascii	"periTrGrSize\000"
 8529      54724772 
 8529      53697A65 
 8529      00
 8530              	.LASF80:
 8531 0320 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 8531      44697643 
 8531      6D645061 
 8531      44697653 
 8531      656C506F 
 8532              	.LASF329:
 8533 0336 43795F53 		.ascii	"Cy_SCB_UART_SendBreakBlocking\000"
 8533      43425F55 
 8533      4152545F 
 8533      53656E64 
 8533      42726561 
 8534              	.LASF57:
 8535 0354 63727970 		.ascii	"cryptoMemSize\000"
 8535      746F4D65 
 8535      6D53697A 
 8535      6500
 8536              	.LASF306:
 8537 0362 6D6F6465 		.ascii	"mode\000"
 8537      00
 8538              	.LASF103:
 8539 0367 63707573 		.ascii	"cpussRam1Ctl0\000"
 8539      7352616D 
 8539      3143746C 
 8539      3000
 8540              	.LASF203:
 8541 0375 63795F65 		.ascii	"cy_en_scb_uart_status_t\000"
 8541      6E5F7363 
 8541      625F7561 
 8541      72745F73 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 237


 8541      74617475 
 8542              	.LASF105:
 8543 038d 69706353 		.ascii	"ipcStructSize\000"
 8543      74727563 
 8543      7453697A 
 8543      6500
 8544              	.LASF333:
 8545 039b 6C6F6352 		.ascii	"locRxErr\000"
 8545      78457272 
 8545      00
 8546              	.LASF278:
 8547 03a4 43795F53 		.ascii	"Cy_SCB_ClearTxFifo\000"
 8547      43425F43 
 8547      6C656172 
 8547      54784669 
 8547      666F00
 8548              	.LASF39:
 8549 03b7 70726F74 		.ascii	"protVersion\000"
 8549      56657273 
 8549      696F6E00 
 8550              	.LASF118:
 8551 03c3 55415254 		.ascii	"UART_RX_CTRL\000"
 8551      5F52585F 
 8551      4354524C 
 8551      00
 8552              	.LASF79:
 8553 03d0 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 8553      44697643 
 8553      6D645479 
 8553      70655365 
 8553      6C506F73 
 8554              	.LASF96:
 8555 03e5 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 8555      73547269 
 8555      6D52616D 
 8555      43746C4F 
 8555      66667365 
 8556              	.LASF179:
 8557 03fb 43795343 		.ascii	"CySCB_Type\000"
 8557      425F5479 
 8557      706500
 8558              	.LASF192:
 8559 0406 43595F53 		.ascii	"CY_SYSPM_CHECK_FAIL\000"
 8559      5953504D 
 8559      5F434845 
 8559      434B5F46 
 8559      41494C00 
 8560              	.LASF217:
 8561 041a 43595F53 		.ascii	"CY_SCB_UART_PARITY_EVEN\000"
 8561      43425F55 
 8561      4152545F 
 8561      50415249 
 8561      54595F45 
 8562              	.LASF254:
 8563 0432 72785374 		.ascii	"rxStatus\000"
 8563      61747573 
 8563      00
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 238


 8564              	.LASF126:
 8565 043b 4932435F 		.ascii	"I2C_CFG\000"
 8565      43464700 
 8566              	.LASF143:
 8567 0443 52585F46 		.ascii	"RX_FIFO_RD_SILENT\000"
 8567      49464F5F 
 8567      52445F53 
 8567      494C454E 
 8567      5400
 8568              	.LASF270:
 8569 0455 43795F53 		.ascii	"Cy_SCB_GetNumInRxFifo\000"
 8569      43425F47 
 8569      65744E75 
 8569      6D496E52 
 8569      78466966 
 8570              	.LASF206:
 8571 046b 43595F53 		.ascii	"CY_SCB_UART_IRDA\000"
 8571      43425F55 
 8571      4152545F 
 8571      49524441 
 8571      00
 8572              	.LASF18:
 8573 047c 75696E74 		.ascii	"uint32_t\000"
 8573      33325F74 
 8573      00
 8574              	.LASF291:
 8575 0485 43795F53 		.ascii	"Cy_SCB_IsTxDataWidthByte\000"
 8575      43425F49 
 8575      73547844 
 8575      61746157 
 8575      69647468 
 8576              	.LASF245:
 8577 049e 72784669 		.ascii	"rxFifoTriggerLevel\000"
 8577      666F5472 
 8577      69676765 
 8577      724C6576 
 8577      656C00
 8578              	.LASF160:
 8579 04b1 494E5452 		.ascii	"INTR_M_SET\000"
 8579      5F4D5F53 
 8579      455400
 8580              	.LASF237:
 8581 04bc 69726461 		.ascii	"irdaInvertRx\000"
 8581      496E7665 
 8581      72745278 
 8581      00
 8582              	.LASF256:
 8583 04c9 72785269 		.ascii	"rxRingBufSize\000"
 8583      6E674275 
 8583      6653697A 
 8583      6500
 8584              	.LASF89:
 8585 04d7 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 8585      50727443 
 8585      66674F75 
 8585      744F6666 
 8585      73657400 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 239


 8586              	.LASF335:
 8587 04eb 48616E64 		.ascii	"HandleDataReceive\000"
 8587      6C654461 
 8587      74615265 
 8587      63656976 
 8587      6500
 8588              	.LASF251:
 8589 04fd 7374635F 		.ascii	"stc_scb_uart_config\000"
 8589      7363625F 
 8589      75617274 
 8589      5F636F6E 
 8589      66696700 
 8590              	.LASF32:
 8591 0511 63727970 		.ascii	"cryptoVersion\000"
 8591      746F5665 
 8591      7273696F 
 8591      6E00
 8592              	.LASF162:
 8593 051f 494E5452 		.ascii	"INTR_M_MASKED\000"
 8593      5F4D5F4D 
 8593      41534B45 
 8593      4400
 8594              	.LASF61:
 8595 052d 666C6173 		.ascii	"flashProgramDelay\000"
 8595      6850726F 
 8595      6772616D 
 8595      44656C61 
 8595      7900
 8596              	.LASF323:
 8597 053f 43795F53 		.ascii	"Cy_SCB_UART_GetNumReceived\000"
 8597      43425F55 
 8597      4152545F 
 8597      4765744E 
 8597      756D5265 
 8598              	.LASF252:
 8599 055a 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 8599      74635F73 
 8599      63625F75 
 8599      6172745F 
 8599      636F6E74 
 8600              	.LASF15:
 8601 0572 696E7431 		.ascii	"int16_t\000"
 8601      365F7400 
 8602              	.LASF243:
 8603 057a 72747350 		.ascii	"rtsPolarity\000"
 8603      6F6C6172 
 8603      69747900 
 8604              	.LASF269:
 8605 0586 43795F53 		.ascii	"Cy_SCB_ReadRxFifo\000"
 8605      43425F52 
 8605      65616452 
 8605      78466966 
 8605      6F00
 8606              	.LASF202:
 8607 0598 43595F53 		.ascii	"CY_SCB_UART_TRANSMIT_BUSY\000"
 8607      43425F55 
 8607      4152545F 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 240


 8607      5452414E 
 8607      534D4954 
 8608              	.LASF12:
 8609 05b2 6C6F6E67 		.ascii	"long long unsigned int\000"
 8609      206C6F6E 
 8609      6720756E 
 8609      7369676E 
 8609      65642069 
 8610              	.LASF85:
 8611 05c9 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 8611      44697632 
 8611      345F3543 
 8611      746C4F66 
 8611      66736574 
 8612              	.LASF90:
 8613 05de 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 8613      50727443 
 8613      66675369 
 8613      6F4F6666 
 8613      73657400 
 8614              	.LASF298:
 8615 05f2 43795F53 		.ascii	"Cy_SCB_UART_IsTxComplete\000"
 8615      43425F55 
 8615      4152545F 
 8615      49735478 
 8615      436F6D70 
 8616              	.LASF44:
 8617 060b 63707573 		.ascii	"cpussIpc0Irq\000"
 8617      73497063 
 8617      30497271 
 8617      00
 8618              	.LASF334:
 8619 0618 6C6F6354 		.ascii	"locTxErr\000"
 8619      78457272 
 8619      00
 8620              	.LASF221:
 8621 0621 43595F53 		.ascii	"CY_SCB_UART_ACTIVE_HIGH\000"
 8621      43425F55 
 8621      4152545F 
 8621      41435449 
 8621      56455F48 
 8622              	.LASF5:
 8623 0639 5F5F7569 		.ascii	"__uint16_t\000"
 8623      6E743136 
 8623      5F7400
 8624              	.LASF50:
 8625 0644 70657269 		.ascii	"periClockNr\000"
 8625      436C6F63 
 8625      6B4E7200 
 8626              	.LASF130:
 8627 0650 54585F43 		.ascii	"TX_CTRL\000"
 8627      54524C00 
 8628              	.LASF117:
 8629 0658 55415254 		.ascii	"UART_TX_CTRL\000"
 8629      5F54585F 
 8629      4354524C 
 8629      00
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 241


 8630              	.LASF326:
 8631 0665 43795F53 		.ascii	"Cy_SCB_UART_AbortTransmit\000"
 8631      43425F55 
 8631      4152545F 
 8631      41626F72 
 8631      74547261 
 8632              	.LASF62:
 8633 067f 666C6173 		.ascii	"flashEraseDelay\000"
 8633      68457261 
 8633      73654465 
 8633      6C617900 
 8634              	.LASF282:
 8635 068f 43795F53 		.ascii	"Cy_SCB_GetRxInterruptStatusMasked\000"
 8635      43425F47 
 8635      65745278 
 8635      496E7465 
 8635      72727570 
 8636              	.LASF259:
 8637 06b1 72784275 		.ascii	"rxBuf\000"
 8637      6600
 8638              	.LASF184:
 8639 06b7 43595F53 		.ascii	"CY_SYSPM_SUCCESS\000"
 8639      5953504D 
 8639      5F535543 
 8639      43455353 
 8639      00
 8640              	.LASF302:
 8641 06c8 43795F53 		.ascii	"Cy_SCB_UART_Disable\000"
 8641      43425F55 
 8641      4152545F 
 8641      44697361 
 8641      626C6500 
 8642              	.LASF66:
 8643 06dc 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 8643      6843746C 
 8643      4D61696E 
 8643      57733346 
 8643      72657100 
 8644              	.LASF48:
 8645 06f0 73727373 		.ascii	"srssNumPll\000"
 8645      4E756D50 
 8645      6C6C00
 8646              	.LASF222:
 8647 06fb 63795F65 		.ascii	"cy_en_scb_uart_polarity_t\000"
 8647      6E5F7363 
 8647      625F7561 
 8647      72745F70 
 8647      6F6C6172 
 8648              	.LASF154:
 8649 0715 494E5452 		.ascii	"INTR_SPI_EC\000"
 8649      5F535049 
 8649      5F454300 
 8650              	.LASF211:
 8651 0721 43595F53 		.ascii	"CY_SCB_UART_STOP_BITS_2_5\000"
 8651      43425F55 
 8651      4152545F 
 8651      53544F50 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 242


 8651      5F424954 
 8652              	.LASF59:
 8653 073b 666C6173 		.ascii	"flashPipeRequired\000"
 8653      68506970 
 8653      65526571 
 8653      75697265 
 8653      6400
 8654              	.LASF205:
 8655 074d 43595F53 		.ascii	"CY_SCB_UART_SMARTCARD\000"
 8655      43425F55 
 8655      4152545F 
 8655      534D4152 
 8655      54434152 
 8656              	.LASF265:
 8657 0763 63624576 		.ascii	"cbEvents\000"
 8657      656E7473 
 8657      00
 8658              	.LASF330:
 8659 076c 74784374 		.ascii	"txCtrlReg\000"
 8659      726C5265 
 8659      6700
 8660              	.LASF249:
 8661 0776 5F426F6F 		.ascii	"_Bool\000"
 8661      6C00
 8662              	.LASF288:
 8663 077c 43795F53 		.ascii	"Cy_SCB_ClearTxInterrupt\000"
 8663      43425F43 
 8663      6C656172 
 8663      5478496E 
 8663      74657272 
 8664              	.LASF209:
 8665 0794 43595F53 		.ascii	"CY_SCB_UART_STOP_BITS_1_5\000"
 8665      43425F55 
 8665      4152545F 
 8665      53544F50 
 8665      5F424954 
 8666              	.LASF63:
 8667 07ae 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 8667      6843746C 
 8667      4D61696E 
 8667      57733046 
 8667      72657100 
 8668              	.LASF344:
 8669 07c2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8669      52784275 
 8669      66666572 
 8669      00
 8670              	.LASF27:
 8671 07cf 6770696F 		.ascii	"gpioBase\000"
 8671      42617365 
 8671      00
 8672              	.LASF149:
 8673 07d8 494E5452 		.ascii	"INTR_I2C_EC\000"
 8673      5F493243 
 8673      5F454300 
 8674              	.LASF275:
 8675 07e4 43795F53 		.ascii	"Cy_SCB_GetNumInTxFifo\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 243


 8675      43425F47 
 8675      65744E75 
 8675      6D496E54 
 8675      78466966 
 8676              	.LASF167:
 8677 07fa 494E5452 		.ascii	"INTR_S_MASKED\000"
 8677      5F535F4D 
 8677      41534B45 
 8677      4400
 8678              	.LASF219:
 8679 0808 63795F65 		.ascii	"cy_en_scb_uart_parity_t\000"
 8679      6E5F7363 
 8679      625F7561 
 8679      72745F70 
 8679      61726974 
 8680              	.LASF98:
 8681 0820 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 8681      73537973 
 8681      5469636B 
 8681      43746C4F 
 8681      66667365 
 8682              	.LASF54:
 8683 0836 75646250 		.ascii	"udbPresent\000"
 8683      72657365 
 8683      6E7400
 8684              	.LASF346:
 8685 0841 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers\\peripheral\\"
 8685      72617465 
 8685      645F536F 
 8685      75726365 
 8685      5C50536F 
 8686 086f 7363625C 		.ascii	"scb\\cy_scb_uart.c\000"
 8686      63795F73 
 8686      63625F75 
 8686      6172742E 
 8686      6300
 8687              	.LASF72:
 8688 0881 64775374 		.ascii	"dwStatusChIdxPos\000"
 8688      61747573 
 8688      43684964 
 8688      78506F73 
 8688      00
 8689              	.LASF236:
 8690 0892 61636365 		.ascii	"acceptAddrInFifo\000"
 8690      70744164 
 8690      6472496E 
 8690      4669666F 
 8690      00
 8691              	.LASF320:
 8692 08a3 6C6F6354 		.ascii	"locTail\000"
 8692      61696C00 
 8693              	.LASF186:
 8694 08ab 43595F53 		.ascii	"CY_SYSPM_TIMEOUT\000"
 8694      5953504D 
 8694      5F54494D 
 8694      454F5554 
 8694      00
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 244


 8695              	.LASF187:
 8696 08bc 43595F53 		.ascii	"CY_SYSPM_INVALID_STATE\000"
 8696      5953504D 
 8696      5F494E56 
 8696      414C4944 
 8696      5F535441 
 8697              	.LASF312:
 8698 08d3 68616C66 		.ascii	"halfFifoSize\000"
 8698      4669666F 
 8698      53697A65 
 8698      00
 8699              	.LASF337:
 8700 08e0 48616E64 		.ascii	"HandleRingBuffer\000"
 8700      6C655269 
 8700      6E674275 
 8700      66666572 
 8700      00
 8701              	.LASF188:
 8702 08f1 43595F53 		.ascii	"CY_SYSPM_CANCELED\000"
 8702      5953504D 
 8702      5F43414E 
 8702      43454C45 
 8702      4400
 8703              	.LASF22:
 8704 0903 666C6173 		.ascii	"flashcBase\000"
 8704      68634261 
 8704      736500
 8705              	.LASF181:
 8706 090e 63686172 		.ascii	"char\000"
 8706      00
 8707              	.LASF128:
 8708 0913 44444654 		.ascii	"DDFT_CTRL\000"
 8708      5F435452 
 8708      4C00
 8709              	.LASF178:
 8710 091d 43795343 		.ascii	"CySCB_V1_Type\000"
 8710      425F5631 
 8710      5F547970 
 8710      6500
 8711              	.LASF258:
 8712 092b 72785269 		.ascii	"rxRingBufTail\000"
 8712      6E674275 
 8712      66546169 
 8712      6C00
 8713              	.LASF234:
 8714 0939 72656365 		.ascii	"receiverAddress\000"
 8714      69766572 
 8714      41646472 
 8714      65737300 
 8715              	.LASF244:
 8716 0949 62726561 		.ascii	"breakWidth\000"
 8716      6B576964 
 8716      746800
 8717              	.LASF166:
 8718 0954 494E5452 		.ascii	"INTR_S_MASK\000"
 8718      5F535F4D 
 8718      41534B00 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 245


 8719              	.LASF55:
 8720 0960 73797350 		.ascii	"sysPmSimoPresent\000"
 8720      6D53696D 
 8720      6F507265 
 8720      73656E74 
 8720      00
 8721              	.LASF152:
 8722 0971 494E5452 		.ascii	"INTR_I2C_EC_MASKED\000"
 8722      5F493243 
 8722      5F45435F 
 8722      4D41534B 
 8722      454400
 8723              	.LASF277:
 8724 0984 43795F53 		.ascii	"Cy_SCB_IsTxComplete\000"
 8724      43425F49 
 8724      73547843 
 8724      6F6D706C 
 8724      65746500 
 8725              	.LASF273:
 8726 0998 64617461 		.ascii	"data\000"
 8726      00
 8727              	.LASF231:
 8728 099d 64726F70 		.ascii	"dropOnParityError\000"
 8728      4F6E5061 
 8728      72697479 
 8728      4572726F 
 8728      7200
 8729              	.LASF261:
 8730 09af 72784275 		.ascii	"rxBufIdx\000"
 8730      66496478 
 8730      00
 8731              	.LASF274:
 8732 09b8 43795F53 		.ascii	"Cy_SCB_SetTxFifoLevel\000"
 8732      43425F53 
 8732      65745478 
 8732      4669666F 
 8732      4C657665 
 8733              	.LASF316:
 8734 09ce 43795F53 		.ascii	"Cy_SCB_UART_ClearRingBuffer\000"
 8734      43425F55 
 8734      4152545F 
 8734      436C6561 
 8734      7252696E 
 8735              	.LASF266:
 8736 09ea 696E6974 		.ascii	"initKey\000"
 8736      4B657900 
 8737              	.LASF73:
 8738 09f2 64775374 		.ascii	"dwStatusChIdxMsk\000"
 8738      61747573 
 8738      43684964 
 8738      784D736B 
 8738      00
 8739              	.LASF14:
 8740 0a03 75696E74 		.ascii	"uint8_t\000"
 8740      385F7400 
 8741              	.LASF328:
 8742 0a0b 43795F53 		.ascii	"Cy_SCB_UART_GetTransmitStatus\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 246


 8742      43425F55 
 8742      4152545F 
 8742      47657454 
 8742      72616E73 
 8743              	.LASF78:
 8744 0a29 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 8744      44697643 
 8744      6D644469 
 8744      7653656C 
 8744      4D736B00 
 8745              	.LASF4:
 8746 0a3d 73686F72 		.ascii	"short int\000"
 8746      7420696E 
 8746      7400
 8747              	.LASF84:
 8748 0a47 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 8748      44697631 
 8748      365F3543 
 8748      746C4F66 
 8748      66736574 
 8749              	.LASF284:
 8750 0a5c 43795F53 		.ascii	"Cy_SCB_GetTxInterruptStatus\000"
 8750      43425F47 
 8750      65745478 
 8750      496E7465 
 8750      72727570 
 8751              	.LASF313:
 8752 0a78 43795F53 		.ascii	"Cy_SCB_UART_StopRingBuffer\000"
 8752      43425F55 
 8752      4152545F 
 8752      53746F70 
 8752      52696E67 
 8753              	.LASF223:
 8754 0a93 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 8754      625F7363 
 8754      625F7561 
 8754      72745F68 
 8754      616E646C 
 8755              	.LASF239:
 8756 0ab2 736D6172 		.ascii	"smartCardRetryOnNack\000"
 8756      74436172 
 8756      64526574 
 8756      72794F6E 
 8756      4E61636B 
 8757              	.LASF142:
 8758 0ac7 52585F46 		.ascii	"RX_FIFO_RD\000"
 8758      49464F5F 
 8758      524400
 8759              	.LASF102:
 8760 0ad2 63707573 		.ascii	"cpussRam0Ctl0\000"
 8760      7352616D 
 8760      3043746C 
 8760      3000
 8761              	.LASF11:
 8762 0ae0 6C6F6E67 		.ascii	"long long int\000"
 8762      206C6F6E 
 8762      6720696E 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 247


 8762      7400
 8763              	.LASF29:
 8764 0aee 69706342 		.ascii	"ipcBase\000"
 8764      61736500 
 8765              	.LASF70:
 8766 0af6 64774368 		.ascii	"dwChCtlPrioPos\000"
 8766      43746C50 
 8766      72696F50 
 8766      6F7300
 8767              	.LASF30:
 8768 0b05 63727970 		.ascii	"cryptoBase\000"
 8768      746F4261 
 8768      736500
 8769              	.LASF200:
 8770 0b10 43595F53 		.ascii	"CY_SCB_UART_BAD_PARAM\000"
 8770      43425F55 
 8770      4152545F 
 8770      4241445F 
 8770      50415241 
 8771              	.LASF60:
 8772 0b26 666C6173 		.ascii	"flashWriteDelay\000"
 8772      68577269 
 8772      74654465 
 8772      6C617900 
 8773              	.LASF197:
 8774 0b36 636F6E74 		.ascii	"context\000"
 8774      65787400 
 8775              	.LASF238:
 8776 0b3e 69726461 		.ascii	"irdaEnableLowPowerReceiver\000"
 8776      456E6162 
 8776      6C654C6F 
 8776      77506F77 
 8776      65725265 
 8777              	.LASF315:
 8778 0b59 6C6F6348 		.ascii	"locHead\000"
 8778      65616400 
 8779              	.LASF208:
 8780 0b61 43595F53 		.ascii	"CY_SCB_UART_STOP_BITS_1\000"
 8780      43425F55 
 8780      4152545F 
 8780      53544F50 
 8780      5F424954 
 8781              	.LASF210:
 8782 0b79 43595F53 		.ascii	"CY_SCB_UART_STOP_BITS_2\000"
 8782      43425F55 
 8782      4152545F 
 8782      53544F50 
 8782      5F424954 
 8783              	.LASF212:
 8784 0b91 43595F53 		.ascii	"CY_SCB_UART_STOP_BITS_3\000"
 8784      43425F55 
 8784      4152545F 
 8784      53544F50 
 8784      5F424954 
 8785              	.LASF279:
 8786 0ba9 43795F53 		.ascii	"Cy_SCB_GetInterruptCause\000"
 8786      43425F47 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 248


 8786      6574496E 
 8786      74657272 
 8786      75707443 
 8787              	.LASF304:
 8788 0bc2 43795F53 		.ascii	"Cy_SCB_UART_DeepSleepCallback\000"
 8788      43425F55 
 8788      4152545F 
 8788      44656570 
 8788      536C6565 
 8789              	.LASF88:
 8790 0be0 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 8790      50727443 
 8790      6667496E 
 8790      4F666673 
 8790      657400
 8791              	.LASF3:
 8792 0bf3 5F5F696E 		.ascii	"__int16_t\000"
 8792      7431365F 
 8792      7400
 8793              	.LASF120:
 8794 0bfd 55415254 		.ascii	"UART_FLOW_CTRL\000"
 8794      5F464C4F 
 8794      575F4354 
 8794      524C00
 8795              	.LASF201:
 8796 0c0c 43595F53 		.ascii	"CY_SCB_UART_RECEIVE_BUSY\000"
 8796      43425F55 
 8796      4152545F 
 8796      52454345 
 8796      4956455F 
 8797              	.LASF228:
 8798 0c25 73746F70 		.ascii	"stopBits\000"
 8798      42697473 
 8798      00
 8799              	.LASF26:
 8800 0c2e 6873696F 		.ascii	"hsiomBase\000"
 8800      6D426173 
 8800      6500
 8801              	.LASF92:
 8802 0c38 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 8802      73436D34 
 8802      436C6F63 
 8802      6B43746C 
 8802      4F666673 
 8803              	.LASF76:
 8804 0c4f 70657269 		.ascii	"periTrGrOffset\000"
 8804      54724772 
 8804      4F666673 
 8804      657400
 8805              	.LASF46:
 8806 0c5e 63707573 		.ascii	"cpussNotConnectedIrq\000"
 8806      734E6F74 
 8806      436F6E6E 
 8806      65637465 
 8806      64497271 
 8807              	.LASF257:
 8808 0c73 72785269 		.ascii	"rxRingBufHead\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 249


 8808      6E674275 
 8808      66486561 
 8808      6400
 8809              	.LASF42:
 8810 0c81 63707573 		.ascii	"cpussDwChNr\000"
 8810      73447743 
 8810      684E7200 
 8811              	.LASF294:
 8812 0c8d 62756666 		.ascii	"buffer\000"
 8812      657200
 8813              	.LASF295:
 8814 0c94 73697A65 		.ascii	"size\000"
 8814      00
 8815              	.LASF263:
 8816 0c99 74784275 		.ascii	"txBufSize\000"
 8816      6653697A 
 8816      6500
 8817              	.LASF40:
 8818 0ca3 63707573 		.ascii	"cpussIpcNr\000"
 8818      73497063 
 8818      4E7200
 8819              	.LASF93:
 8820 0cae 63707573 		.ascii	"cpussCm4StatusOffset\000"
 8820      73436D34 
 8820      53746174 
 8820      75734F66 
 8820      66736574 
 8821              	.LASF218:
 8822 0cc3 43595F53 		.ascii	"CY_SCB_UART_PARITY_ODD\000"
 8822      43425F55 
 8822      4152545F 
 8822      50415249 
 8822      54595F4F 
 8823              	.LASF52:
 8824 0cda 70617373 		.ascii	"passSarChannels\000"
 8824      53617243 
 8824      68616E6E 
 8824      656C7300 
 8825              	.LASF104:
 8826 0cea 63707573 		.ascii	"cpussRam2Ctl0\000"
 8826      7352616D 
 8826      3243746C 
 8826      3000
 8827              	.LASF138:
 8828 0cf8 52585F46 		.ascii	"RX_FIFO_STATUS\000"
 8828      49464F5F 
 8828      53544154 
 8828      555300
 8829              	.LASF95:
 8830 0d07 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 8830      73436D34 
 8830      50777243 
 8830      746C4F66 
 8830      66736574 
 8831              	.LASF174:
 8832 0d1c 494E5452 		.ascii	"INTR_RX\000"
 8832      5F525800 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 250


 8833              	.LASF325:
 8834 0d24 43795F53 		.ascii	"Cy_SCB_UART_Transmit\000"
 8834      43425F55 
 8834      4152545F 
 8834      5472616E 
 8834      736D6974 
 8835              	.LASF262:
 8836 0d39 74784275 		.ascii	"txBuf\000"
 8836      6600
 8837              	.LASF83:
 8838 0d3f 70657269 		.ascii	"periDiv16CtlOffset\000"
 8838      44697631 
 8838      3643746C 
 8838      4F666673 
 8838      657400
 8839              	.LASF58:
 8840 0d52 666C6173 		.ascii	"flashRwwRequired\000"
 8840      68527777 
 8840      52657175 
 8840      69726564 
 8840      00
 8841              	.LASF6:
 8842 0d63 73686F72 		.ascii	"short unsigned int\000"
 8842      7420756E 
 8842      7369676E 
 8842      65642069 
 8842      6E7400
 8843              	.LASF283:
 8844 0d76 43795F53 		.ascii	"Cy_SCB_ClearRxInterrupt\000"
 8844      43425F43 
 8844      6C656172 
 8844      5278496E 
 8844      74657272 
 8845              	.LASF255:
 8846 0d8e 72785269 		.ascii	"rxRingBuf\000"
 8846      6E674275 
 8846      6600
 8847              	.LASF19:
 8848 0d98 6C6F6E67 		.ascii	"long double\000"
 8848      20646F75 
 8848      626C6500 
 8849              	.LASF16:
 8850 0da4 75696E74 		.ascii	"uint16_t\000"
 8850      31365F74 
 8850      00
 8851              	.LASF151:
 8852 0dad 494E5452 		.ascii	"INTR_I2C_EC_MASK\000"
 8852      5F493243 
 8852      5F45435F 
 8852      4D41534B 
 8852      00
 8853              	.LASF25:
 8854 0dbe 70726F74 		.ascii	"protBase\000"
 8854      42617365 
 8854      00
 8855              	.LASF75:
 8856 0dc7 70657269 		.ascii	"periTrCmdGrSelMsk\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 251


 8856      5472436D 
 8856      64477253 
 8856      656C4D73 
 8856      6B00
 8857              	.LASF276:
 8858 0dd9 43795F53 		.ascii	"Cy_SCB_GetTxSrValid\000"
 8858      43425F47 
 8858      65745478 
 8858      53725661 
 8858      6C696400 
 8859              	.LASF49:
 8860 0ded 73727373 		.ascii	"srssNumHfroot\000"
 8860      4E756D48 
 8860      66726F6F 
 8860      7400
 8861              	.LASF314:
 8862 0dfb 43795F53 		.ascii	"Cy_SCB_UART_GetNumInRingBuffer\000"
 8862      43425F55 
 8862      4152545F 
 8862      4765744E 
 8862      756D496E 
 8863              	.LASF33:
 8864 0e1a 64775665 		.ascii	"dwVersion\000"
 8864      7273696F 
 8864      6E00
 8865              	.LASF156:
 8866 0e24 494E5452 		.ascii	"INTR_SPI_EC_MASK\000"
 8866      5F535049 
 8866      5F45435F 
 8866      4D41534B 
 8866      00
 8867              	.LASF308:
 8868 0e35 6C6F6342 		.ascii	"locBase\000"
 8868      61736500 
 8869              	.LASF300:
 8870 0e3d 636F6E66 		.ascii	"config\000"
 8870      696700
 8871              	.LASF235:
 8872 0e44 72656365 		.ascii	"receiverAddressMask\000"
 8872      69766572 
 8872      41646472 
 8872      6573734D 
 8872      61736B00 
 8873              	.LASF20:
 8874 0e58 73697A65 		.ascii	"sizetype\000"
 8874      74797065 
 8874      00
 8875              	.LASF307:
 8876 0e61 72657453 		.ascii	"retStatus\000"
 8876      74617475 
 8876      7300
 8877              	.LASF125:
 8878 0e6b 4932435F 		.ascii	"I2C_S_CMD\000"
 8878      535F434D 
 8878      4400
 8879              	.LASF100:
 8880 0e75 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 252


 8880      73436D34 
 8880      4E6D6943 
 8880      746C4F66 
 8880      66736574 
 8881              	.LASF321:
 8882 0e8a 62797465 		.ascii	"byteMode\000"
 8882      4D6F6465 
 8882      00
 8883              	.LASF82:
 8884 0e93 70657269 		.ascii	"periDiv8CtlOffset\000"
 8884      44697638 
 8884      43746C4F 
 8884      66667365 
 8884      7400
 8885              	.LASF121:
 8886 0ea5 52455345 		.ascii	"RESERVED2\000"
 8886      52564544 
 8886      3200
 8887              	.LASF127:
 8888 0eaf 52455345 		.ascii	"RESERVED3\000"
 8888      52564544 
 8888      3300
 8889              	.LASF129:
 8890 0eb9 52455345 		.ascii	"RESERVED4\000"
 8890      52564544 
 8890      3400
 8891              	.LASF133:
 8892 0ec3 52455345 		.ascii	"RESERVED5\000"
 8892      52564544 
 8892      3500
 8893              	.LASF135:
 8894 0ecd 52455345 		.ascii	"RESERVED6\000"
 8894      52564544 
 8894      3600
 8895              	.LASF139:
 8896 0ed7 52455345 		.ascii	"RESERVED7\000"
 8896      52564544 
 8896      3700
 8897              	.LASF141:
 8898 0ee1 52455345 		.ascii	"RESERVED8\000"
 8898      52564544 
 8898      3800
 8899              	.LASF144:
 8900 0eeb 52455345 		.ascii	"RESERVED9\000"
 8900      52564544 
 8900      3900
 8901              	.LASF292:
 8902 0ef5 43795F53 		.ascii	"Cy_SCB_UART_Enable\000"
 8902      43425F55 
 8902      4152545F 
 8902      456E6162 
 8902      6C6500
 8903              	.LASF195:
 8904 0f08 63795F65 		.ascii	"cy_en_syspm_callback_mode_t\000"
 8904      6E5F7379 
 8904      73706D5F 
 8904      63616C6C 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 253


 8904      6261636B 
 8905              	.LASF8:
 8906 0f24 6C6F6E67 		.ascii	"long int\000"
 8906      20696E74 
 8906      00
 8907              	.LASF31:
 8908 0f2d 63707573 		.ascii	"cpussVersion\000"
 8908      73566572 
 8908      73696F6E 
 8908      00
 8909              	.LASF123:
 8910 0f3a 4932435F 		.ascii	"I2C_STATUS\000"
 8910      53544154 
 8910      555300
 8911              	.LASF35:
 8912 0f45 6770696F 		.ascii	"gpioVersion\000"
 8912      56657273 
 8912      696F6E00 
 8913              	.LASF172:
 8914 0f51 494E5452 		.ascii	"INTR_TX_MASKED\000"
 8914      5F54585F 
 8914      4D41534B 
 8914      454400
 8915              	.LASF34:
 8916 0f60 666C6173 		.ascii	"flashcVersion\000"
 8916      68635665 
 8916      7273696F 
 8916      6E00
 8917              	.LASF56:
 8918 0f6e 70726F74 		.ascii	"protBusMasterMask\000"
 8918      4275734D 
 8918      61737465 
 8918      724D6173 
 8918      6B00
 8919              	.LASF290:
 8920 0f80 43795F53 		.ascii	"Cy_SCB_IsRxDataWidthByte\000"
 8920      43425F49 
 8920      73527844 
 8920      61746157 
 8920      69647468 
 8921              	.LASF285:
 8922 0f99 43795F53 		.ascii	"Cy_SCB_SetTxInterruptMask\000"
 8922      43425F53 
 8922      65745478 
 8922      496E7465 
 8922      72727570 
 8923              	.LASF324:
 8924 0fb3 43795F53 		.ascii	"Cy_SCB_UART_GetReceiveStatus\000"
 8924      43425F55 
 8924      4152545F 
 8924      47657452 
 8924      65636569 
 8925              	.LASF180:
 8926 0fd0 63686172 		.ascii	"char_t\000"
 8926      5F7400
 8927              	.LASF140:
 8928 0fd7 52585F4D 		.ascii	"RX_MATCH\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 254


 8928      41544348 
 8928      00
 8929              	.LASF305:
 8930 0fe0 63616C6C 		.ascii	"callbackParams\000"
 8930      6261636B 
 8930      50617261 
 8930      6D7300
 8931              	.LASF169:
 8932 0fef 494E5452 		.ascii	"INTR_TX\000"
 8932      5F545800 
 8933              	.LASF119:
 8934 0ff7 55415254 		.ascii	"UART_RX_STATUS\000"
 8934      5F52585F 
 8934      53544154 
 8934      555300
 8935              	.LASF264:
 8936 1006 74784C65 		.ascii	"txLeftToTransmit\000"
 8936      6674546F 
 8936      5472616E 
 8936      736D6974 
 8936      00
 8937              	.LASF336:
 8938 1017 6E756D43 		.ascii	"numCopied\000"
 8938      6F706965 
 8938      6400
 8939              	.LASF224:
 8940 1021 75617274 		.ascii	"uartMode\000"
 8940      4D6F6465 
 8940      00
 8941              	.LASF2:
 8942 102a 5F5F7569 		.ascii	"__uint8_t\000"
 8942      6E74385F 
 8942      7400
 8943              	.LASF131:
 8944 1034 54585F46 		.ascii	"TX_FIFO_CTRL\000"
 8944      49464F5F 
 8944      4354524C 
 8944      00
 8945              	.LASF280:
 8946 1041 43795F53 		.ascii	"Cy_SCB_SetRxInterruptMask\000"
 8946      43425F53 
 8946      65745278 
 8946      496E7465 
 8946      72727570 
 8947              	.LASF124:
 8948 105b 4932435F 		.ascii	"I2C_M_CMD\000"
 8948      4D5F434D 
 8948      4400
 8949              	.LASF157:
 8950 1065 494E5452 		.ascii	"INTR_SPI_EC_MASKED\000"
 8950      5F535049 
 8950      5F45435F 
 8950      4D41534B 
 8950      454400
 8951              	.LASF331:
 8952 1078 7478496E 		.ascii	"txIntrReg\000"
 8952      74725265 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 255


 8952      6700
 8953              	.LASF86:
 8954 1082 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 8954      50727449 
 8954      6E747243 
 8954      66674F66 
 8954      66736574 
 8955              	.LASF113:
 8956 1097 5350495F 		.ascii	"SPI_CTRL\000"
 8956      4354524C 
 8956      00
 8957              	.LASF207:
 8958 10a0 63795F65 		.ascii	"cy_en_scb_uart_mode_t\000"
 8958      6E5F7363 
 8958      625F7561 
 8958      72745F6D 
 8958      6F64655F 
 8959              	.LASF340:
 8960 10b6 6669666F 		.ascii	"fifoSize\000"
 8960      53697A65 
 8960      00
 8961              	.LASF136:
 8962 10bf 52585F43 		.ascii	"RX_CTRL\000"
 8962      54524C00 
 8963              	.LASF97:
 8964 10c7 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 8964      73547269 
 8964      6D526F6D 
 8964      43746C4F 
 8964      66667365 
 8965              	.LASF293:
 8966 10dd 43795F53 		.ascii	"Cy_SCB_UART_GetArray\000"
 8966      43425F55 
 8966      4152545F 
 8966      47657441 
 8966      72726179 
 8967              	.LASF122:
 8968 10f2 4932435F 		.ascii	"I2C_CTRL\000"
 8968      4354524C 
 8968      00
 8969              	.LASF36:
 8970 10fb 6873696F 		.ascii	"hsiomVersion\000"
 8970      6D566572 
 8970      73696F6E 
 8970      00
 8971              	.LASF10:
 8972 1108 6C6F6E67 		.ascii	"long unsigned int\000"
 8972      20756E73 
 8972      69676E65 
 8972      6420696E 
 8972      7400
 8973              	.LASF159:
 8974 111a 494E5452 		.ascii	"INTR_M\000"
 8974      5F4D00
 8975              	.LASF101:
 8976 1121 63707573 		.ascii	"cpussRomCtl\000"
 8976      73526F6D 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 256


 8976      43746C00 
 8977              	.LASF182:
 8978 112d 666C6F61 		.ascii	"float\000"
 8978      7400
 8979              	.LASF164:
 8980 1133 494E5452 		.ascii	"INTR_S\000"
 8980      5F5300
 8981              	.LASF17:
 8982 113a 696E7433 		.ascii	"int32_t\000"
 8982      325F7400 
 8983              	.LASF327:
 8984 1142 43795F53 		.ascii	"Cy_SCB_UART_GetNumLeftToTransmit\000"
 8984      43425F55 
 8984      4152545F 
 8984      4765744E 
 8984      756D4C65 
 8985              	.LASF339:
 8986 1163 48616E64 		.ascii	"HandleDataTransmit\000"
 8986      6C654461 
 8986      74615472 
 8986      616E736D 
 8986      697400
 8987              	.LASF161:
 8988 1176 494E5452 		.ascii	"INTR_M_MASK\000"
 8988      5F4D5F4D 
 8988      41534B00 
 8989              	.LASF296:
 8990 1182 43795F53 		.ascii	"Cy_SCB_UART_GetNumInRxFifo\000"
 8990      43425F55 
 8990      4152545F 
 8990      4765744E 
 8990      756D496E 
 8991              	.LASF247:
 8992 119d 74784669 		.ascii	"txFifoTriggerLevel\000"
 8992      666F5472 
 8992      69676765 
 8992      724C6576 
 8992      656C00
 8993              	.LASF204:
 8994 11b0 43595F53 		.ascii	"CY_SCB_UART_STANDARD\000"
 8994      43425F55 
 8994      4152545F 
 8994      5354414E 
 8994      44415244 
 8995              	.LASF309:
 8996 11c5 6C6F6343 		.ascii	"locContext\000"
 8996      6F6E7465 
 8996      787400
 8997              	.LASF94:
 8998 11d0 63707573 		.ascii	"cpussCm0StatusOffset\000"
 8998      73436D30 
 8998      53746174 
 8998      75734F66 
 8998      66736574 
 8999              	.LASF240:
 9000 11e5 656E6162 		.ascii	"enableCts\000"
 9000      6C654374 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 257


 9000      7300
 9001              	.LASF114:
 9002 11ef 5350495F 		.ascii	"SPI_STATUS\000"
 9002      53544154 
 9002      555300
 9003              	.LASF189:
 9004 11fa 43595F53 		.ascii	"CY_SYSPM_FAIL\000"
 9004      5953504D 
 9004      5F464149 
 9004      4C00
 9005              	.LASF1:
 9006 1208 756E7369 		.ascii	"unsigned char\000"
 9006      676E6564 
 9006      20636861 
 9006      7200
 9007              	.LASF214:
 9008 1216 43595F53 		.ascii	"CY_SCB_UART_STOP_BITS_4\000"
 9008      43425F55 
 9008      4152545F 
 9008      53544F50 
 9008      5F424954 
 9009              	.LASF271:
 9010 122e 43795F53 		.ascii	"Cy_SCB_SetRxFifoLevel\000"
 9010      43425F53 
 9010      65745278 
 9010      4669666F 
 9010      4C657665 
 9011              	.LASF9:
 9012 1244 5F5F7569 		.ascii	"__uint32_t\000"
 9012      6E743332 
 9012      5F7400
 9013              	.LASF106:
 9014 124f 6970634C 		.ascii	"ipcLockStatusOffset\000"
 9014      6F636B53 
 9014      74617475 
 9014      734F6666 
 9014      73657400 
 9015              	.LASF146:
 9016 1263 52455345 		.ascii	"RESERVED10\000"
 9016      52564544 
 9016      313000
 9017              	.LASF148:
 9018 126e 52455345 		.ascii	"RESERVED11\000"
 9018      52564544 
 9018      313100
 9019              	.LASF150:
 9020 1279 52455345 		.ascii	"RESERVED12\000"
 9020      52564544 
 9020      313200
 9021              	.LASF153:
 9022 1284 52455345 		.ascii	"RESERVED13\000"
 9022      52564544 
 9022      313300
 9023              	.LASF155:
 9024 128f 52455345 		.ascii	"RESERVED14\000"
 9024      52564544 
 9024      313400
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 258


 9025              	.LASF158:
 9026 129a 52455345 		.ascii	"RESERVED15\000"
 9026      52564544 
 9026      313500
 9027              	.LASF163:
 9028 12a5 52455345 		.ascii	"RESERVED16\000"
 9028      52564544 
 9028      313600
 9029              	.LASF168:
 9030 12b0 52455345 		.ascii	"RESERVED17\000"
 9030      52564544 
 9030      313700
 9031              	.LASF173:
 9032 12bb 52455345 		.ascii	"RESERVED18\000"
 9032      52564544 
 9032      313800
 9033              	.LASF87:
 9034 12c6 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 9034      50727443 
 9034      66674F66 
 9034      66736574 
 9034      00
 9035              	.LASF134:
 9036 12d7 54585F46 		.ascii	"TX_FIFO_WR\000"
 9036      49464F5F 
 9036      575200
 9037              	.LASF241:
 9038 12e2 63747350 		.ascii	"ctsPolarity\000"
 9038      6F6C6172 
 9038      69747900 
 9039              	.LASF250:
 9040 12ee 63795F73 		.ascii	"cy_stc_scb_uart_config_t\000"
 9040      74635F73 
 9040      63625F75 
 9040      6172745F 
 9040      636F6E66 
 9041              	.LASF332:
 9042 1307 43795F53 		.ascii	"Cy_SCB_UART_Interrupt\000"
 9042      43425F55 
 9042      4152545F 
 9042      496E7465 
 9042      72727570 
 9043              	.LASF242:
 9044 131d 72747352 		.ascii	"rtsRxFifoLevel\000"
 9044      78466966 
 9044      6F4C6576 
 9044      656C00
 9045              	.LASF216:
 9046 132c 43595F53 		.ascii	"CY_SCB_UART_PARITY_NONE\000"
 9046      43425F55 
 9046      4152545F 
 9046      50415249 
 9046      54595F4E 
 9047              	.LASF248:
 9048 1344 74784669 		.ascii	"txFifoIntEnableMask\000"
 9048      666F496E 
 9048      74456E61 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 259


 9048      626C654D 
 9048      61736B00 
 9049              	.LASF341:
 9050 1358 74784461 		.ascii	"txData\000"
 9050      746100
 9051              	.LASF53:
 9052 135f 65704D6F 		.ascii	"epMonitorNr\000"
 9052      6E69746F 
 9052      724E7200 
 9053              	.LASF185:
 9054 136b 43595F53 		.ascii	"CY_SYSPM_BAD_PARAM\000"
 9054      5953504D 
 9054      5F424144 
 9054      5F504152 
 9054      414D00
 9055              	.LASF301:
 9056 137e 43795F53 		.ascii	"Cy_SCB_UART_DeInit\000"
 9056      43425F55 
 9056      4152545F 
 9056      4465496E 
 9056      697400
 9057              	.LASF0:
 9058 1391 7369676E 		.ascii	"signed char\000"
 9058      65642063 
 9058      68617200 
 9059              	.LASF68:
 9060 139d 64774368 		.ascii	"dwChOffset\000"
 9060      4F666673 
 9060      657400
 9061              	.LASF116:
 9062 13a8 55415254 		.ascii	"UART_CTRL\000"
 9062      5F435452 
 9062      4C00
 9063              	.LASF41:
 9064 13b2 63707573 		.ascii	"cpussIpcIrqNr\000"
 9064      73497063 
 9064      4972714E 
 9064      7200
 9065              	.LASF176:
 9066 13c0 494E5452 		.ascii	"INTR_RX_MASK\000"
 9066      5F52585F 
 9066      4D41534B 
 9066      00
 9067              	.LASF71:
 9068 13cd 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 9068      43746C50 
 9068      7265656D 
 9068      70746162 
 9068      6C65506F 
 9069              	.LASF110:
 9070 13e3 434D445F 		.ascii	"CMD_RESP_CTRL\000"
 9070      52455350 
 9070      5F435452 
 9070      4C00
 9071              	.LASF107:
 9072 13f1 63795F73 		.ascii	"cy_stc_device_t\000"
 9072      74635F64 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 260


 9072      65766963 
 9072      655F7400 
 9073              	.LASF310:
 9074 1401 43795F53 		.ascii	"Cy_SCB_UART_HibernateCallback\000"
 9074      43425F55 
 9074      4152545F 
 9074      48696265 
 9074      726E6174 
 9075              	.LASF303:
 9076 141f 43795F53 		.ascii	"Cy_SCB_UART_Init\000"
 9076      43425F55 
 9076      4152545F 
 9076      496E6974 
 9076      00
 9077              	.LASF38:
 9078 1430 70657269 		.ascii	"periVersion\000"
 9078      56657273 
 9078      696F6E00 
 9079              	.LASF183:
 9080 143c 646F7562 		.ascii	"double\000"
 9080      6C6500
 9081              	.LASF28:
 9082 1443 70617373 		.ascii	"passBase\000"
 9082      42617365 
 9082      00
 9083              	.LASF65:
 9084 144c 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 9084      6843746C 
 9084      4D61696E 
 9084      57733246 
 9084      72657100 
 9085              	.LASF318:
 9086 1460 746D7042 		.ascii	"tmpBuf\000"
 9086      756600
 9087              	.LASF175:
 9088 1467 494E5452 		.ascii	"INTR_RX_SET\000"
 9088      5F52585F 
 9088      53455400 
 9089              	.LASF115:
 9090 1473 52455345 		.ascii	"RESERVED1\000"
 9090      52564544 
 9090      3100
 9091              	.LASF47:
 9092 147d 73727373 		.ascii	"srssNumClkpath\000"
 9092      4E756D43 
 9092      6C6B7061 
 9092      746800
 9093              	.LASF109:
 9094 148c 53544154 		.ascii	"STATUS\000"
 9094      555300
 9095              	.LASF67:
 9096 1493 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 9096      6843746C 
 9096      4D61696E 
 9096      57733446 
 9096      72657100 
 9097              	.LASF299:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 261


 9098 14a7 43795F53 		.ascii	"Cy_SCB_UART_ClearTxFifo\000"
 9098      43425F55 
 9098      4152545F 
 9098      436C6561 
 9098      72547846 
 9099              	.LASF225:
 9100 14bf 6F766572 		.ascii	"oversample\000"
 9100      73616D70 
 9100      6C6500
 9101              	.LASF226:
 9102 14ca 64617461 		.ascii	"dataWidth\000"
 9102      57696474 
 9102      6800
 9103              	.LASF345:
 9104 14d4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 9104      43313120 
 9104      352E342E 
 9104      31203230 
 9104      31363036 
 9105 1507 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 9105      20726576 
 9105      6973696F 
 9105      6E203233 
 9105      37373135 
 9106 153a 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 9106      70202D6D 
 9106      6670753D 
 9106      66707634 
 9106      2D73702D 
 9107 156d 65637469 		.ascii	"ections -ffat-lto-objects\000"
 9107      6F6E7320 
 9107      2D666661 
 9107      742D6C74 
 9107      6F2D6F62 
 9108              	.LASF297:
 9109 1587 43795F53 		.ascii	"Cy_SCB_UART_PutArray\000"
 9109      43425F55 
 9109      4152545F 
 9109      50757441 
 9109      72726179 
 9110              	.LASF322:
 9111 159c 43795F53 		.ascii	"Cy_SCB_UART_AbortReceive\000"
 9111      43425F55 
 9111      4152545F 
 9111      41626F72 
 9111      74526563 
 9112              	.LASF281:
 9113 15b5 696E7465 		.ascii	"interruptMask\000"
 9113      72727570 
 9113      744D6173 
 9113      6B00
 9114              	.LASF232:
 9115 15c3 64726F70 		.ascii	"dropOnFrameError\000"
 9115      4F6E4672 
 9115      616D6545 
 9115      72726F72 
 9115      00
ARM GAS  C:\Users\stijn\AppData\Local\Temp\ccL80sAV.s 			page 262


 9116              	.LASF246:
 9117 15d4 72784669 		.ascii	"rxFifoIntEnableMask\000"
 9117      666F496E 
 9117      74456E61 
 9117      626C654D 
 9117      61736B00 
 9118              	.LASF145:
 9119 15e8 455A5F44 		.ascii	"EZ_DATA\000"
 9119      41544100 
 9120              	.LASF342:
 9121 15f0 696E7472 		.ascii	"intrStatus\000"
 9121      53746174 
 9121      757300
 9122              	.LASF37:
 9123 15fb 69706356 		.ascii	"ipcVersion\000"
 9123      65727369 
 9123      6F6E00
 9124              	.LASF215:
 9125 1606 63795F65 		.ascii	"cy_en_scb_uart_stop_bits_t\000"
 9125      6E5F7363 
 9125      625F7561 
 9125      72745F73 
 9125      746F705F 
 9126              	.LASF74:
 9127 1621 70657269 		.ascii	"periTrCmdOffset\000"
 9127      5472436D 
 9127      644F6666 
 9127      73657400 
 9128              	.LASF260:
 9129 1631 72784275 		.ascii	"rxBufSize\000"
 9129      6653697A 
 9129      6500
 9130              	.LASF108:
 9131 163b 4354524C 		.ascii	"CTRL\000"
 9131      00
 9132              	.LASF193:
 9133 1640 43595F53 		.ascii	"CY_SYSPM_BEFORE_TRANSITION\000"
 9133      5953504D 
 9133      5F424546 
 9133      4F52455F 
 9133      5452414E 
 9134              	.LASF194:
 9135 165b 43595F53 		.ascii	"CY_SYSPM_AFTER_TRANSITION\000"
 9135      5953504D 
 9135      5F414654 
 9135      45525F54 
 9135      52414E53 
 9136              	.LASF191:
 9137 1675 43595F53 		.ascii	"CY_SYSPM_CHECK_READY\000"
 9137      5953504D 
 9137      5F434845 
 9137      434B5F52 
 9137      45414459 
 9138              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
