ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"timers.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.bss
  21              		.align	2
  22              	xActiveTimerList1:
  23 0000 00000000 		.space	20
  23      00000000 
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.align	2
  25              	xActiveTimerList2:
  26 0014 00000000 		.space	20
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              		.align	2
  28              	pxCurrentTimerList:
  29 0028 00000000 		.space	4
  30              		.align	2
  31              	pxOverflowTimerList:
  32 002c 00000000 		.space	4
  33              		.align	2
  34              	xTimerQueue:
  35 0030 00000000 		.space	4
  36              		.align	2
  37              	xTimerTaskHandle:
  38 0034 00000000 		.space	4
  39              		.section	.rodata
  40              		.align	2
  41              	.LC0:
  42 0000 546D7220 		.ascii	"Tmr Svc\000"
  42      53766300 
  43              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
  44              		.align	2
  45              		.global	xTimerCreateTimerTask
  46              		.thumb
  47              		.thumb_func
  48              		.type	xTimerCreateTimerTask, %function
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 2


  49              	xTimerCreateTimerTask:
  50              	.LFB136:
  51              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\timers.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** task.h is included from an application file. */
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #include "FreeRTOS.h"
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #include "task.h"
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #include "queue.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #include "timers.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #endif
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 3


  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* Misc definitions. */
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* The definition of the timers themselves. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** typedef struct tmrTimerControl
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	#endif
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	#endif
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** } xTIMER;
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** typedef xTIMER Timer_t;
  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** and xCallbackParametersType respectively. */
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** typedef struct tmrTimerParameters
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** } TimerParameter_t;
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** typedef struct tmrCallbackParameters
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** } CallbackParameters_t;
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** that is used to determine which message type is valid. */
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 4


 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	union
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	} u;
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** } DaemonTaskMessage_t;
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** which static variables must be declared volatile. */
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** timer service task is allowed to access these lists. */
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*lint -restore */
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	following callback function - which enables the application to optionally
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	and TCB. */
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #endif
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * been initialised already.
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * xTimerQueue queue.
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * Called by the timer service task to interpret and process a command it
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 5


 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * received on the timer queue.
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * auto reload timer, then call its callback.
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * current timer list does not still reference some timers.
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * to pdTRUE.
 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * until either a timer does expire or a command is received.
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  * dynamically to fill in the structure's members.
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c ****  */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									void * const pvTimerID,
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
  52              		.loc 1 224 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 6


  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 8
  55              		@ frame_needed = 1, uses_anonymous_args = 0
  56 0000 80B5     		push	{r7, lr}
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 7, -8
  59              		.cfi_offset 14, -4
  60 0002 84B0     		sub	sp, sp, #16
  61              		.cfi_def_cfa_offset 24
  62 0004 02AF     		add	r7, sp, #8
  63              		.cfi_def_cfa 7, 16
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xReturn = pdFAIL;
  64              		.loc 1 225 0
  65 0006 0023     		movs	r3, #0
  66 0008 7B60     		str	r3, [r7, #4]
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	prvCheckForValidListAndQueue();
  67              		.loc 1 231 0
  68 000a FFF7FEFF 		bl	prvCheckForValidListAndQueue
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	if( xTimerQueue != NULL )
  69              		.loc 1 233 0
  70 000e 104B     		ldr	r3, .L6
  71 0010 1B68     		ldr	r3, [r3]
  72 0012 002B     		cmp	r3, #0
  73 0014 0AD0     		beq	.L2
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 													ulTimerTaskStackSize,
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 													NULL,
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				xReturn = pdPASS;
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#else
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
  74              		.loc 1 257 0
  75 0016 0F4B     		ldr	r3, .L6+4
  76 0018 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 7


  77 001a 0323     		movs	r3, #3
  78 001c 0093     		str	r3, [sp]
  79 001e 0023     		movs	r3, #0
  80 0020 8022     		movs	r2, #128
  81 0022 0D49     		ldr	r1, .L6+8
  82 0024 0D48     		ldr	r0, .L6+12
  83 0026 FFF7FEFF 		bl	xTaskCreate
  84 002a 7860     		str	r0, [r7, #4]
  85              	.L2:
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									NULL,
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									&xTimerTaskHandle );
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	else
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xReturn );
  86              		.loc 1 271 0
  87 002c 7B68     		ldr	r3, [r7, #4]
  88 002e 002B     		cmp	r3, #0
  89 0030 09D1     		bne	.L3
  90              	.LBB30:
  91              	.LBB31:
  92              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 8


  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 9


  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 10


 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  93              		.loc 2 156 0 discriminator 1
  94              		.syntax unified
  95              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
  96 0032 4FF03F03 			mov r3, #63												
  97 0036 83F31188 		msr basepri, r3											
  98 003a BFF36F8F 		isb														
  99 003e BFF34F8F 		dsb														
 100              	
 101              	@ 0 "" 2
 102              		.thumb
 103              		.syntax unified
 104 0042 3B60     		str	r3, [r7]
 105              	.L4:
 106              	.LBE31:
 107              	.LBE30:
 108              		.loc 1 271 0 discriminator 1
 109 0044 FEE7     		b	.L4
 110              	.L3:
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 111              		.loc 1 272 0
 112 0046 7B68     		ldr	r3, [r7, #4]
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 113              		.loc 1 273 0
 114 0048 1846     		mov	r0, r3
 115 004a 0837     		adds	r7, r7, #8
 116              		.cfi_def_cfa_offset 8
 117 004c BD46     		mov	sp, r7
 118              		.cfi_def_cfa_register 13
 119              		@ sp needed
 120 004e 80BD     		pop	{r7, pc}
 121              	.L7:
 122              		.align	2
 123              	.L6:
 124 0050 30000000 		.word	xTimerQueue
 125 0054 34000000 		.word	xTimerTaskHandle
 126 0058 00000000 		.word	.LC0
 127 005c 00000000 		.word	prvTimerTask
 128              		.cfi_endproc
 129              	.LFE136:
 130              		.size	xTimerCreateTimerTask, .-xTimerCreateTimerTask
 131              		.section	.text.xTimerCreate,"ax",%progbits
 132              		.align	2
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 11


 133              		.global	xTimerCreate
 134              		.thumb
 135              		.thumb_func
 136              		.type	xTimerCreate, %function
 137              	xTimerCreate:
 138              	.LFB137:
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 								void * const pvTimerID,
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 139              		.loc 1 283 0
 140              		.cfi_startproc
 141              		@ args = 4, pretend = 0, frame = 24
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 88B0     		sub	sp, sp, #32
 148              		.cfi_def_cfa_offset 40
 149 0004 02AF     		add	r7, sp, #8
 150              		.cfi_def_cfa 7, 32
 151 0006 F860     		str	r0, [r7, #12]
 152 0008 B960     		str	r1, [r7, #8]
 153 000a 7A60     		str	r2, [r7, #4]
 154 000c 3B60     		str	r3, [r7]
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	Timer_t *pxNewTimer;
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 155              		.loc 1 286 0
 156 000e 2820     		movs	r0, #40
 157 0010 FFF7FEFF 		bl	pvPortMalloc
 158 0014 7861     		str	r0, [r7, #20]
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( pxNewTimer != NULL )
 159              		.loc 1 288 0
 160 0016 7B69     		ldr	r3, [r7, #20]
 161 0018 002B     		cmp	r3, #0
 162 001a 09D0     		beq	.L9
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 163              		.loc 1 290 0
 164 001c 7B69     		ldr	r3, [r7, #20]
 165 001e 0193     		str	r3, [sp, #4]
 166 0020 3B6A     		ldr	r3, [r7, #32]
 167 0022 0093     		str	r3, [sp]
 168 0024 3B68     		ldr	r3, [r7]
 169 0026 7A68     		ldr	r2, [r7, #4]
 170 0028 B968     		ldr	r1, [r7, #8]
 171 002a F868     		ldr	r0, [r7, #12]
 172 002c FFF7FEFF 		bl	prvInitialiseNewTimer
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 12


 173              	.L9:
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				deleted. */
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		return pxNewTimer;
 174              		.loc 1 302 0
 175 0030 7B69     		ldr	r3, [r7, #20]
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 176              		.loc 1 303 0
 177 0032 1846     		mov	r0, r3
 178 0034 1837     		adds	r7, r7, #24
 179              		.cfi_def_cfa_offset 8
 180 0036 BD46     		mov	sp, r7
 181              		.cfi_def_cfa_register 13
 182              		@ sp needed
 183 0038 80BD     		pop	{r7, pc}
 184              		.cfi_endproc
 185              	.LFE137:
 186              		.size	xTimerCreate, .-xTimerCreate
 187 003a 00BF     		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	prvInitialiseNewTimer, %function
 192              	prvInitialiseNewTimer:
 193              	.LFB138:
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 										void * const pvTimerID,
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	Timer_t *pxNewTimer;
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			structure. */
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 13


 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		return pxNewTimer;
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									void * const pvTimerID,
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 									Timer_t *pxNewTimer )
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 194              		.loc 1 358 0
 195              		.cfi_startproc
 196              		@ args = 8, pretend = 0, frame = 24
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 86B0     		sub	sp, sp, #24
 203              		.cfi_def_cfa_offset 32
 204 0004 00AF     		add	r7, sp, #0
 205              		.cfi_def_cfa_register 7
 206 0006 F860     		str	r0, [r7, #12]
 207 0008 B960     		str	r1, [r7, #8]
 208 000a 7A60     		str	r2, [r7, #4]
 209 000c 3B60     		str	r3, [r7]
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 210              		.loc 1 360 0
 211 000e BB68     		ldr	r3, [r7, #8]
 212 0010 002B     		cmp	r3, #0
 213 0012 09D1     		bne	.L12
 214              	.LBB32:
 215              	.LBB33:
 216              		.loc 2 156 0 discriminator 1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 14


 217              		.syntax unified
 218              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 219 0014 4FF03F03 			mov r3, #63												
 220 0018 83F31188 		msr basepri, r3											
 221 001c BFF36F8F 		isb														
 222 0020 BFF34F8F 		dsb														
 223              	
 224              	@ 0 "" 2
 225              		.thumb
 226              		.syntax unified
 227 0024 7B61     		str	r3, [r7, #20]
 228              	.L13:
 229              	.LBE33:
 230              	.LBE32:
 231              		.loc 1 360 0 discriminator 1
 232 0026 FEE7     		b	.L13
 233              	.L12:
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	if( pxNewTimer != NULL )
 234              		.loc 1 362 0
 235 0028 7B6A     		ldr	r3, [r7, #36]
 236 002a 002B     		cmp	r3, #0
 237 002c 15D0     		beq	.L15
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		created/initialised. */
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		prvCheckForValidListAndQueue();
 238              		.loc 1 366 0
 239 002e FFF7FEFF 		bl	prvCheckForValidListAndQueue
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		parameters. */
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 240              		.loc 1 370 0
 241 0032 7B6A     		ldr	r3, [r7, #36]
 242 0034 FA68     		ldr	r2, [r7, #12]
 243 0036 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 244              		.loc 1 371 0
 245 0038 7B6A     		ldr	r3, [r7, #36]
 246 003a BA68     		ldr	r2, [r7, #8]
 247 003c 9A61     		str	r2, [r3, #24]
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 248              		.loc 1 372 0
 249 003e 7B6A     		ldr	r3, [r7, #36]
 250 0040 7A68     		ldr	r2, [r7, #4]
 251 0042 DA61     		str	r2, [r3, #28]
 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 252              		.loc 1 373 0
 253 0044 7B6A     		ldr	r3, [r7, #36]
 254 0046 3A68     		ldr	r2, [r7]
 255 0048 1A62     		str	r2, [r3, #32]
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 256              		.loc 1 374 0
 257 004a 7B6A     		ldr	r3, [r7, #36]
 258 004c 3A6A     		ldr	r2, [r7, #32]
 259 004e 5A62     		str	r2, [r3, #36]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 15


 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 260              		.loc 1 375 0
 261 0050 7B6A     		ldr	r3, [r7, #36]
 262 0052 0433     		adds	r3, r3, #4
 263 0054 1846     		mov	r0, r3
 264 0056 FFF7FEFF 		bl	vListInitialiseItem
 265              	.L15:
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 266              		.loc 1 378 0
 267 005a 00BF     		nop
 268 005c 1837     		adds	r7, r7, #24
 269              		.cfi_def_cfa_offset 8
 270 005e BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0060 80BD     		pop	{r7, pc}
 274              		.cfi_endproc
 275              	.LFE138:
 276              		.size	prvInitialiseNewTimer, .-prvInitialiseNewTimer
 277 0062 00BF     		.section	.text.xTimerGenericCommand,"ax",%progbits
 278              		.align	2
 279              		.global	xTimerGenericCommand
 280              		.thumb
 281              		.thumb_func
 282              		.type	xTimerGenericCommand, %function
 283              	xTimerGenericCommand:
 284              	.LFB139:
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 285              		.loc 1 382 0
 286              		.cfi_startproc
 287              		@ args = 4, pretend = 0, frame = 40
 288              		@ frame_needed = 1, uses_anonymous_args = 0
 289 0000 80B5     		push	{r7, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 8AB0     		sub	sp, sp, #40
 294              		.cfi_def_cfa_offset 48
 295 0004 00AF     		add	r7, sp, #0
 296              		.cfi_def_cfa_register 7
 297 0006 F860     		str	r0, [r7, #12]
 298 0008 B960     		str	r1, [r7, #8]
 299 000a 7A60     		str	r2, [r7, #4]
 300 000c 3B60     		str	r3, [r7]
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xReturn = pdFAIL;
 301              		.loc 1 383 0
 302 000e 0023     		movs	r3, #0
 303 0010 7B62     		str	r3, [r7, #36]
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 304              		.loc 1 386 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 16


 305 0012 FB68     		ldr	r3, [r7, #12]
 306 0014 002B     		cmp	r3, #0
 307 0016 09D1     		bne	.L17
 308              	.LBB34:
 309              	.LBB35:
 310              		.loc 2 156 0 discriminator 1
 311              		.syntax unified
 312              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 313 0018 4FF03F03 			mov r3, #63												
 314 001c 83F31188 		msr basepri, r3											
 315 0020 BFF36F8F 		isb														
 316 0024 BFF34F8F 		dsb														
 317              	
 318              	@ 0 "" 2
 319              		.thumb
 320              		.syntax unified
 321 0028 3B62     		str	r3, [r7, #32]
 322              	.L18:
 323              	.LBE35:
 324              	.LBE34:
 325              		.loc 1 386 0 discriminator 1
 326 002a FEE7     		b	.L18
 327              	.L17:
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	on a particular timer definition. */
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	if( xTimerQueue != NULL )
 328              		.loc 1 390 0
 329 002c 194B     		ldr	r3, .L25
 330 002e 1B68     		ldr	r3, [r3]
 331 0030 002B     		cmp	r3, #0
 332 0032 2AD0     		beq	.L19
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 333              		.loc 1 393 0
 334 0034 BB68     		ldr	r3, [r7, #8]
 335 0036 7B61     		str	r3, [r7, #20]
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 336              		.loc 1 394 0
 337 0038 7B68     		ldr	r3, [r7, #4]
 338 003a BB61     		str	r3, [r7, #24]
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 339              		.loc 1 395 0
 340 003c FB68     		ldr	r3, [r7, #12]
 341 003e FB61     		str	r3, [r7, #28]
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 342              		.loc 1 397 0
 343 0040 BB68     		ldr	r3, [r7, #8]
 344 0042 052B     		cmp	r3, #5
 345 0044 18DC     		bgt	.L20
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 346              		.loc 1 399 0
 347 0046 FFF7FEFF 		bl	xTaskGetSchedulerState
 348 004a 0346     		mov	r3, r0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 17


 349 004c 022B     		cmp	r3, #2
 350 004e 09D1     		bne	.L21
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 351              		.loc 1 401 0
 352 0050 104B     		ldr	r3, .L25
 353 0052 1868     		ldr	r0, [r3]
 354 0054 07F11401 		add	r1, r7, #20
 355 0058 0023     		movs	r3, #0
 356 005a 3A6B     		ldr	r2, [r7, #48]
 357 005c FFF7FEFF 		bl	xQueueGenericSend
 358 0060 7862     		str	r0, [r7, #36]
 359 0062 12E0     		b	.L19
 360              	.L21:
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			else
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 361              		.loc 1 405 0
 362 0064 0B4B     		ldr	r3, .L25
 363 0066 1868     		ldr	r0, [r3]
 364 0068 07F11401 		add	r1, r7, #20
 365 006c 0023     		movs	r3, #0
 366 006e 0022     		movs	r2, #0
 367 0070 FFF7FEFF 		bl	xQueueGenericSend
 368 0074 7862     		str	r0, [r7, #36]
 369 0076 08E0     		b	.L19
 370              	.L20:
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		else
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 371              		.loc 1 410 0
 372 0078 064B     		ldr	r3, .L25
 373 007a 1868     		ldr	r0, [r3]
 374 007c 07F11401 		add	r1, r7, #20
 375 0080 0023     		movs	r3, #0
 376 0082 3A68     		ldr	r2, [r7]
 377 0084 FFF7FEFF 		bl	xQueueGenericSendFromISR
 378 0088 7862     		str	r0, [r7, #36]
 379              	.L19:
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	else
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 380              		.loc 1 420 0
 381 008a 7B6A     		ldr	r3, [r7, #36]
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 382              		.loc 1 421 0
 383 008c 1846     		mov	r0, r3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 18


 384 008e 2837     		adds	r7, r7, #40
 385              		.cfi_def_cfa_offset 8
 386 0090 BD46     		mov	sp, r7
 387              		.cfi_def_cfa_register 13
 388              		@ sp needed
 389 0092 80BD     		pop	{r7, pc}
 390              	.L26:
 391              		.align	2
 392              	.L25:
 393 0094 30000000 		.word	xTimerQueue
 394              		.cfi_endproc
 395              	.LFE139:
 396              		.size	xTimerGenericCommand, .-xTimerGenericCommand
 397              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 398              		.align	2
 399              		.global	xTimerGetTimerDaemonTaskHandle
 400              		.thumb
 401              		.thumb_func
 402              		.type	xTimerGetTimerDaemonTaskHandle, %function
 403              	xTimerGetTimerDaemonTaskHandle:
 404              	.LFB140:
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 405              		.loc 1 425 0
 406              		.cfi_startproc
 407              		@ args = 0, pretend = 0, frame = 8
 408              		@ frame_needed = 1, uses_anonymous_args = 0
 409              		@ link register save eliminated.
 410 0000 80B4     		push	{r7}
 411              		.cfi_def_cfa_offset 4
 412              		.cfi_offset 7, -4
 413 0002 83B0     		sub	sp, sp, #12
 414              		.cfi_def_cfa_offset 16
 415 0004 00AF     		add	r7, sp, #0
 416              		.cfi_def_cfa_register 7
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 417              		.loc 1 428 0
 418 0006 0B4B     		ldr	r3, .L31
 419 0008 1B68     		ldr	r3, [r3]
 420 000a 002B     		cmp	r3, #0
 421 000c 09D1     		bne	.L28
 422              	.LBB36:
 423              	.LBB37:
 424              		.loc 2 156 0 discriminator 1
 425              		.syntax unified
 426              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 427 000e 4FF03F03 			mov r3, #63												
 428 0012 83F31188 		msr basepri, r3											
 429 0016 BFF36F8F 		isb														
 430 001a BFF34F8F 		dsb														
 431              	
 432              	@ 0 "" 2
 433              		.thumb
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 19


 434              		.syntax unified
 435 001e 7B60     		str	r3, [r7, #4]
 436              	.L29:
 437              	.LBE37:
 438              	.LBE36:
 439              		.loc 1 428 0 discriminator 1
 440 0020 FEE7     		b	.L29
 441              	.L28:
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return xTimerTaskHandle;
 442              		.loc 1 429 0
 443 0022 044B     		ldr	r3, .L31
 444 0024 1B68     		ldr	r3, [r3]
 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 445              		.loc 1 430 0
 446 0026 1846     		mov	r0, r3
 447 0028 0C37     		adds	r7, r7, #12
 448              		.cfi_def_cfa_offset 4
 449 002a BD46     		mov	sp, r7
 450              		.cfi_def_cfa_register 13
 451              		@ sp needed
 452 002c 5DF8047B 		ldr	r7, [sp], #4
 453              		.cfi_restore 7
 454              		.cfi_def_cfa_offset 0
 455 0030 7047     		bx	lr
 456              	.L32:
 457 0032 00BF     		.align	2
 458              	.L31:
 459 0034 34000000 		.word	xTimerTaskHandle
 460              		.cfi_endproc
 461              	.LFE140:
 462              		.size	xTimerGetTimerDaemonTaskHandle, .-xTimerGetTimerDaemonTaskHandle
 463              		.section	.text.xTimerGetPeriod,"ax",%progbits
 464              		.align	2
 465              		.global	xTimerGetPeriod
 466              		.thumb
 467              		.thumb_func
 468              		.type	xTimerGetPeriod, %function
 469              	xTimerGetPeriod:
 470              	.LFB141:
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 471              		.loc 1 434 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 16
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476 0000 80B4     		push	{r7}
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 85B0     		sub	sp, sp, #20
 480              		.cfi_def_cfa_offset 24
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 483 0006 7860     		str	r0, [r7, #4]
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 20


 484              		.loc 1 435 0
 485 0008 7B68     		ldr	r3, [r7, #4]
 486 000a FB60     		str	r3, [r7, #12]
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 487              		.loc 1 437 0
 488 000c 7B68     		ldr	r3, [r7, #4]
 489 000e 002B     		cmp	r3, #0
 490 0010 09D1     		bne	.L34
 491              	.LBB38:
 492              	.LBB39:
 493              		.loc 2 156 0 discriminator 1
 494              		.syntax unified
 495              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 496 0012 4FF03F03 			mov r3, #63												
 497 0016 83F31188 		msr basepri, r3											
 498 001a BFF36F8F 		isb														
 499 001e BFF34F8F 		dsb														
 500              	
 501              	@ 0 "" 2
 502              		.thumb
 503              		.syntax unified
 504 0022 BB60     		str	r3, [r7, #8]
 505              	.L35:
 506              	.LBE39:
 507              	.LBE38:
 508              		.loc 1 437 0 discriminator 1
 509 0024 FEE7     		b	.L35
 510              	.L34:
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 511              		.loc 1 438 0
 512 0026 FB68     		ldr	r3, [r7, #12]
 513 0028 9B69     		ldr	r3, [r3, #24]
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 514              		.loc 1 439 0
 515 002a 1846     		mov	r0, r3
 516 002c 1437     		adds	r7, r7, #20
 517              		.cfi_def_cfa_offset 4
 518 002e BD46     		mov	sp, r7
 519              		.cfi_def_cfa_register 13
 520              		@ sp needed
 521 0030 5DF8047B 		ldr	r7, [sp], #4
 522              		.cfi_restore 7
 523              		.cfi_def_cfa_offset 0
 524 0034 7047     		bx	lr
 525              		.cfi_endproc
 526              	.LFE141:
 527              		.size	xTimerGetPeriod, .-xTimerGetPeriod
 528 0036 00BF     		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 529              		.align	2
 530              		.global	xTimerGetExpiryTime
 531              		.thumb
 532              		.thumb_func
 533              		.type	xTimerGetExpiryTime, %function
 534              	xTimerGetExpiryTime:
 535              	.LFB142:
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 21


 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 536              		.loc 1 443 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 24
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541 0000 80B4     		push	{r7}
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 0002 87B0     		sub	sp, sp, #28
 545              		.cfi_def_cfa_offset 32
 546 0004 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 548 0006 7860     		str	r0, [r7, #4]
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 549              		.loc 1 444 0
 550 0008 7B68     		ldr	r3, [r7, #4]
 551 000a 7B61     		str	r3, [r7, #20]
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xReturn;
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 552              		.loc 1 447 0
 553 000c 7B68     		ldr	r3, [r7, #4]
 554 000e 002B     		cmp	r3, #0
 555 0010 09D1     		bne	.L38
 556              	.LBB40:
 557              	.LBB41:
 558              		.loc 2 156 0 discriminator 1
 559              		.syntax unified
 560              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 561 0012 4FF03F03 			mov r3, #63												
 562 0016 83F31188 		msr basepri, r3											
 563 001a BFF36F8F 		isb														
 564 001e BFF34F8F 		dsb														
 565              	
 566              	@ 0 "" 2
 567              		.thumb
 568              		.syntax unified
 569 0022 FB60     		str	r3, [r7, #12]
 570              	.L39:
 571              	.LBE41:
 572              	.LBE40:
 573              		.loc 1 447 0 discriminator 1
 574 0024 FEE7     		b	.L39
 575              	.L38:
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 576              		.loc 1 448 0
 577 0026 7B69     		ldr	r3, [r7, #20]
 578 0028 5B68     		ldr	r3, [r3, #4]
 579 002a 3B61     		str	r3, [r7, #16]
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return xReturn;
 580              		.loc 1 449 0
 581 002c 3B69     		ldr	r3, [r7, #16]
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 582              		.loc 1 450 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 22


 583 002e 1846     		mov	r0, r3
 584 0030 1C37     		adds	r7, r7, #28
 585              		.cfi_def_cfa_offset 4
 586 0032 BD46     		mov	sp, r7
 587              		.cfi_def_cfa_register 13
 588              		@ sp needed
 589 0034 5DF8047B 		ldr	r7, [sp], #4
 590              		.cfi_restore 7
 591              		.cfi_def_cfa_offset 0
 592 0038 7047     		bx	lr
 593              		.cfi_endproc
 594              	.LFE142:
 595              		.size	xTimerGetExpiryTime, .-xTimerGetExpiryTime
 596 003a 00BF     		.section	.text.pcTimerGetName,"ax",%progbits
 597              		.align	2
 598              		.global	pcTimerGetName
 599              		.thumb
 600              		.thumb_func
 601              		.type	pcTimerGetName, %function
 602              	pcTimerGetName:
 603              	.LFB143:
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 604              		.loc 1 454 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 16
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 609 0000 80B4     		push	{r7}
 610              		.cfi_def_cfa_offset 4
 611              		.cfi_offset 7, -4
 612 0002 85B0     		sub	sp, sp, #20
 613              		.cfi_def_cfa_offset 24
 614 0004 00AF     		add	r7, sp, #0
 615              		.cfi_def_cfa_register 7
 616 0006 7860     		str	r0, [r7, #4]
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 617              		.loc 1 455 0
 618 0008 7B68     		ldr	r3, [r7, #4]
 619 000a FB60     		str	r3, [r7, #12]
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 620              		.loc 1 457 0
 621 000c 7B68     		ldr	r3, [r7, #4]
 622 000e 002B     		cmp	r3, #0
 623 0010 09D1     		bne	.L42
 624              	.LBB42:
 625              	.LBB43:
 626              		.loc 2 156 0 discriminator 1
 627              		.syntax unified
 628              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 629 0012 4FF03F03 			mov r3, #63												
 630 0016 83F31188 		msr basepri, r3											
 631 001a BFF36F8F 		isb														
 632 001e BFF34F8F 		dsb														
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 23


 633              	
 634              	@ 0 "" 2
 635              		.thumb
 636              		.syntax unified
 637 0022 BB60     		str	r3, [r7, #8]
 638              	.L43:
 639              	.LBE43:
 640              	.LBE42:
 641              		.loc 1 457 0 discriminator 1
 642 0024 FEE7     		b	.L43
 643              	.L42:
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return pxTimer->pcTimerName;
 644              		.loc 1 458 0
 645 0026 FB68     		ldr	r3, [r7, #12]
 646 0028 1B68     		ldr	r3, [r3]
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 647              		.loc 1 459 0
 648 002a 1846     		mov	r0, r3
 649 002c 1437     		adds	r7, r7, #20
 650              		.cfi_def_cfa_offset 4
 651 002e BD46     		mov	sp, r7
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed
 654 0030 5DF8047B 		ldr	r7, [sp], #4
 655              		.cfi_restore 7
 656              		.cfi_def_cfa_offset 0
 657 0034 7047     		bx	lr
 658              		.cfi_endproc
 659              	.LFE143:
 660              		.size	pcTimerGetName, .-pcTimerGetName
 661 0036 00BF     		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 662              		.align	2
 663              		.thumb
 664              		.thumb_func
 665              		.type	prvProcessExpiredTimer, %function
 666              	prvProcessExpiredTimer:
 667              	.LFB144:
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 668              		.loc 1 463 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 24
 671              		@ frame_needed = 1, uses_anonymous_args = 0
 672 0000 80B5     		push	{r7, lr}
 673              		.cfi_def_cfa_offset 8
 674              		.cfi_offset 7, -8
 675              		.cfi_offset 14, -4
 676 0002 88B0     		sub	sp, sp, #32
 677              		.cfi_def_cfa_offset 40
 678 0004 02AF     		add	r7, sp, #8
 679              		.cfi_def_cfa 7, 32
 680 0006 7860     		str	r0, [r7, #4]
 681 0008 3960     		str	r1, [r7]
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xResult;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 24


 682              		.loc 1 465 0
 683 000a 1C4B     		ldr	r3, .L48
 684 000c 1B68     		ldr	r3, [r3]
 685 000e DB68     		ldr	r3, [r3, #12]
 686 0010 DB68     		ldr	r3, [r3, #12]
 687 0012 7B61     		str	r3, [r7, #20]
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 688              		.loc 1 469 0
 689 0014 7B69     		ldr	r3, [r7, #20]
 690 0016 0433     		adds	r3, r3, #4
 691 0018 1846     		mov	r0, r3
 692 001a FFF7FEFF 		bl	uxListRemove
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 693              		.loc 1 474 0
 694 001e 7B69     		ldr	r3, [r7, #20]
 695 0020 DB69     		ldr	r3, [r3, #28]
 696 0022 012B     		cmp	r3, #1
 697 0024 21D1     		bne	.L46
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 698              		.loc 1 479 0
 699 0026 7B69     		ldr	r3, [r7, #20]
 700 0028 9A69     		ldr	r2, [r3, #24]
 701 002a 7B68     		ldr	r3, [r7, #4]
 702 002c D118     		adds	r1, r2, r3
 703 002e 7B68     		ldr	r3, [r7, #4]
 704 0030 3A68     		ldr	r2, [r7]
 705 0032 7869     		ldr	r0, [r7, #20]
 706 0034 FFF7FEFF 		bl	prvInsertTimerInActiveList
 707 0038 0346     		mov	r3, r0
 708 003a 002B     		cmp	r3, #0
 709 003c 15D0     		beq	.L46
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			list.  Reload it now.  */
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 710              		.loc 1 483 0
 711 003e 0023     		movs	r3, #0
 712 0040 0093     		str	r3, [sp]
 713 0042 0023     		movs	r3, #0
 714 0044 7A68     		ldr	r2, [r7, #4]
 715 0046 0021     		movs	r1, #0
 716 0048 7869     		ldr	r0, [r7, #20]
 717 004a FFF7FEFF 		bl	xTimerGenericCommand
 718 004e 3861     		str	r0, [r7, #16]
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			configASSERT( xResult );
 719              		.loc 1 484 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 25


 720 0050 3B69     		ldr	r3, [r7, #16]
 721 0052 002B     		cmp	r3, #0
 722 0054 09D1     		bne	.L46
 723              	.LBB44:
 724              	.LBB45:
 725              		.loc 2 156 0 discriminator 1
 726              		.syntax unified
 727              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 728 0056 4FF03F03 			mov r3, #63												
 729 005a 83F31188 		msr basepri, r3											
 730 005e BFF36F8F 		isb														
 731 0062 BFF34F8F 		dsb														
 732              	
 733              	@ 0 "" 2
 734              		.thumb
 735              		.syntax unified
 736 0066 FB60     		str	r3, [r7, #12]
 737              	.L47:
 738              	.LBE45:
 739              	.LBE44:
 740              		.loc 1 484 0 discriminator 1
 741 0068 FEE7     		b	.L47
 742              	.L46:
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			( void ) xResult;
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		else
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	else
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* Call the timer callback. */
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 743              		.loc 1 498 0
 744 006a 7B69     		ldr	r3, [r7, #20]
 745 006c 5B6A     		ldr	r3, [r3, #36]
 746 006e 7869     		ldr	r0, [r7, #20]
 747 0070 9847     		blx	r3
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 748              		.loc 1 499 0
 749 0072 00BF     		nop
 750 0074 1837     		adds	r7, r7, #24
 751              		.cfi_def_cfa_offset 8
 752 0076 BD46     		mov	sp, r7
 753              		.cfi_def_cfa_register 13
 754              		@ sp needed
 755 0078 80BD     		pop	{r7, pc}
 756              	.L49:
 757 007a 00BF     		.align	2
 758              	.L48:
 759 007c 28000000 		.word	pxCurrentTimerList
 760              		.cfi_endproc
 761              	.LFE144:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 26


 762              		.size	prvProcessExpiredTimer, .-prvProcessExpiredTimer
 763              		.section	.text.prvTimerTask,"ax",%progbits
 764              		.align	2
 765              		.thumb
 766              		.thumb_func
 767              		.type	prvTimerTask, %function
 768              	prvTimerTask:
 769              	.LFB145:
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 770              		.loc 1 503 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 16
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774 0000 80B5     		push	{r7, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 84B0     		sub	sp, sp, #16
 779              		.cfi_def_cfa_offset 24
 780 0004 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 782 0006 7860     		str	r0, [r7, #4]
 783              	.L51:
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xNextExpireTime;
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xListWasEmpty;
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	( void ) pvParameters;
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		application includes initialisation code that would benefit from
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		executing after the scheduler has been started. */
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	for( ;; )
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 784              		.loc 1 526 0 discriminator 1
 785 0008 07F10803 		add	r3, r7, #8
 786 000c 1846     		mov	r0, r3
 787 000e FFF7FEFF 		bl	prvGetNextExpireTime
 788 0012 F860     		str	r0, [r7, #12]
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		until either a timer does expire, or a command is received. */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 27


 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 789              		.loc 1 530 0 discriminator 1
 790 0014 BB68     		ldr	r3, [r7, #8]
 791 0016 1946     		mov	r1, r3
 792 0018 F868     		ldr	r0, [r7, #12]
 793 001a FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Empty the command queue. */
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		prvProcessReceivedCommands();
 794              		.loc 1 533 0 discriminator 1
 795 001e FFF7FEFF 		bl	prvProcessReceivedCommands
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 796              		.loc 1 534 0 discriminator 1
 797 0022 F1E7     		b	.L51
 798              		.cfi_endproc
 799              	.LFE145:
 800              		.size	prvTimerTask, .-prvTimerTask
 801              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 802              		.align	2
 803              		.thumb
 804              		.thumb_func
 805              		.type	prvProcessTimerOrBlockTask, %function
 806              	prvProcessTimerOrBlockTask:
 807              	.LFB146:
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 808              		.loc 1 539 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 16
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812 0000 80B5     		push	{r7, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 7, -8
 815              		.cfi_offset 14, -4
 816 0002 84B0     		sub	sp, sp, #16
 817              		.cfi_def_cfa_offset 24
 818 0004 00AF     		add	r7, sp, #0
 819              		.cfi_def_cfa_register 7
 820 0006 7860     		str	r0, [r7, #4]
 821 0008 3960     		str	r1, [r7]
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimeNow;
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	vTaskSuspendAll();
 822              		.loc 1 543 0
 823 000a FFF7FEFF 		bl	vTaskSuspendAll
 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		when the lists were switched will have been processed within the
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		prvSampleTimeNow() function. */
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 824              		.loc 1 550 0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 28


 825 000e 07F10803 		add	r3, r7, #8
 826 0012 1846     		mov	r0, r3
 827 0014 FFF7FEFF 		bl	prvSampleTimeNow
 828 0018 F860     		str	r0, [r7, #12]
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 829              		.loc 1 551 0
 830 001a BB68     		ldr	r3, [r7, #8]
 831 001c 002B     		cmp	r3, #0
 832 001e 30D1     		bne	.L53
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 833              		.loc 1 554 0
 834 0020 3B68     		ldr	r3, [r7]
 835 0022 002B     		cmp	r3, #0
 836 0024 0AD1     		bne	.L54
 837              		.loc 1 554 0 is_stmt 0 discriminator 1
 838 0026 7A68     		ldr	r2, [r7, #4]
 839 0028 FB68     		ldr	r3, [r7, #12]
 840 002a 9A42     		cmp	r2, r3
 841 002c 06D8     		bhi	.L54
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				( void ) xTaskResumeAll();
 842              		.loc 1 556 0 is_stmt 1
 843 002e FFF7FEFF 		bl	xTaskResumeAll
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 844              		.loc 1 557 0
 845 0032 F968     		ldr	r1, [r7, #12]
 846 0034 7868     		ldr	r0, [r7, #4]
 847 0036 FFF7FEFF 		bl	prvProcessExpiredTimer
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			else
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				case when the current timer list is empty. */
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				{
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					also empty? */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				}
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				{
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					critical section being exited and this yield then the yield
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					will not cause the task to block. */
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					portYIELD_WITHIN_API();
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				}
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				else
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 29


 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				{
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				}
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		else
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			( void ) xTaskResumeAll();
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 848              		.loc 1 595 0
 849 003a 24E0     		b	.L58
 850              	.L54:
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				{
 851              		.loc 1 567 0
 852 003c 3B68     		ldr	r3, [r7]
 853 003e 002B     		cmp	r3, #0
 854 0040 08D0     		beq	.L56
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				}
 855              		.loc 1 571 0
 856 0042 134B     		ldr	r3, .L59
 857 0044 1B68     		ldr	r3, [r3]
 858 0046 1B68     		ldr	r3, [r3]
 859 0048 002B     		cmp	r3, #0
 860 004a 0CBF     		ite	eq
 861 004c 0123     		moveq	r3, #1
 862 004e 0023     		movne	r3, #0
 863 0050 DBB2     		uxtb	r3, r3
 864 0052 3B60     		str	r3, [r7]
 865              	.L56:
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 866              		.loc 1 574 0
 867 0054 0F4B     		ldr	r3, .L59+4
 868 0056 1868     		ldr	r0, [r3]
 869 0058 7A68     		ldr	r2, [r7, #4]
 870 005a FB68     		ldr	r3, [r7, #12]
 871 005c D31A     		subs	r3, r2, r3
 872 005e 3A68     		ldr	r2, [r7]
 873 0060 1946     		mov	r1, r3
 874 0062 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				{
 875              		.loc 1 576 0
 876 0066 FFF7FEFF 		bl	xTaskResumeAll
 877 006a 0346     		mov	r3, r0
 878 006c 002B     		cmp	r3, #0
 879 006e 0AD1     		bne	.L58
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				}
 880              		.loc 1 582 0
 881 0070 094B     		ldr	r3, .L59+8
 882 0072 4FF08052 		mov	r2, #268435456
 883 0076 1A60     		str	r2, [r3]
 884              		.syntax unified
 885              	@ 582 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\timers.c" 1
 886 0078 BFF34F8F 		dsb
 887              	@ 0 "" 2
 888              	@ 582 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\timers.c" 1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 30


 889 007c BFF36F8F 		isb
 890              	@ 0 "" 2
 891              		.loc 1 595 0
 892              		.thumb
 893              		.syntax unified
 894 0080 01E0     		b	.L58
 895              	.L53:
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 896              		.loc 1 592 0
 897 0082 FFF7FEFF 		bl	xTaskResumeAll
 898              	.L58:
 899              		.loc 1 595 0
 900 0086 00BF     		nop
 901 0088 1037     		adds	r7, r7, #16
 902              		.cfi_def_cfa_offset 8
 903 008a BD46     		mov	sp, r7
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 008c 80BD     		pop	{r7, pc}
 907              	.L60:
 908 008e 00BF     		.align	2
 909              	.L59:
 910 0090 2C000000 		.word	pxOverflowTimerList
 911 0094 30000000 		.word	xTimerQueue
 912 0098 04ED00E0 		.word	-536810236
 913              		.cfi_endproc
 914              	.LFE146:
 915              		.size	prvProcessTimerOrBlockTask, .-prvProcessTimerOrBlockTask
 916              		.section	.text.prvGetNextExpireTime,"ax",%progbits
 917              		.align	2
 918              		.thumb
 919              		.thumb_func
 920              		.type	prvGetNextExpireTime, %function
 921              	prvGetNextExpireTime:
 922              	.LFB147:
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 923              		.loc 1 599 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 16
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 928 0000 80B4     		push	{r7}
 929              		.cfi_def_cfa_offset 4
 930              		.cfi_offset 7, -4
 931 0002 85B0     		sub	sp, sp, #20
 932              		.cfi_def_cfa_offset 24
 933 0004 00AF     		add	r7, sp, #0
 934              		.cfi_def_cfa_register 7
 935 0006 7860     		str	r0, [r7, #4]
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xNextExpireTime;
 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 31


 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	re-assessed.  */
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 936              		.loc 1 609 0
 937 0008 0E4B     		ldr	r3, .L65
 938 000a 1B68     		ldr	r3, [r3]
 939 000c 1B68     		ldr	r3, [r3]
 940 000e 002B     		cmp	r3, #0
 941 0010 0CBF     		ite	eq
 942 0012 0123     		moveq	r3, #1
 943 0014 0023     		movne	r3, #0
 944 0016 DBB2     		uxtb	r3, r3
 945 0018 1A46     		mov	r2, r3
 946 001a 7B68     		ldr	r3, [r7, #4]
 947 001c 1A60     		str	r2, [r3]
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
 948              		.loc 1 610 0
 949 001e 7B68     		ldr	r3, [r7, #4]
 950 0020 1B68     		ldr	r3, [r3]
 951 0022 002B     		cmp	r3, #0
 952 0024 05D1     		bne	.L62
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 953              		.loc 1 612 0
 954 0026 074B     		ldr	r3, .L65
 955 0028 1B68     		ldr	r3, [r3]
 956 002a DB68     		ldr	r3, [r3, #12]
 957 002c 1B68     		ldr	r3, [r3]
 958 002e FB60     		str	r3, [r7, #12]
 959 0030 01E0     		b	.L63
 960              	.L62:
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	else
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
 961              		.loc 1 617 0
 962 0032 0023     		movs	r3, #0
 963 0034 FB60     		str	r3, [r7, #12]
 964              	.L63:
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return xNextExpireTime;
 965              		.loc 1 620 0
 966 0036 FB68     		ldr	r3, [r7, #12]
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 967              		.loc 1 621 0
 968 0038 1846     		mov	r0, r3
 969 003a 1437     		adds	r7, r7, #20
 970              		.cfi_def_cfa_offset 4
 971 003c BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 003e 5DF8047B 		ldr	r7, [sp], #4
 975              		.cfi_restore 7
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 32


 976              		.cfi_def_cfa_offset 0
 977 0042 7047     		bx	lr
 978              	.L66:
 979              		.align	2
 980              	.L65:
 981 0044 28000000 		.word	pxCurrentTimerList
 982              		.cfi_endproc
 983              	.LFE147:
 984              		.size	prvGetNextExpireTime, .-prvGetNextExpireTime
 985              		.section	.text.prvSampleTimeNow,"ax",%progbits
 986              		.align	2
 987              		.thumb
 988              		.thumb_func
 989              		.type	prvSampleTimeNow, %function
 990              	prvSampleTimeNow:
 991              	.LFB148:
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 992              		.loc 1 625 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 16
 995              		@ frame_needed = 1, uses_anonymous_args = 0
 996 0000 80B5     		push	{r7, lr}
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 84B0     		sub	sp, sp, #16
 1001              		.cfi_def_cfa_offset 24
 1002 0004 00AF     		add	r7, sp, #0
 1003              		.cfi_def_cfa_register 7
 1004 0006 7860     		str	r0, [r7, #4]
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimeNow;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 1005              		.loc 1 629 0
 1006 0008 FFF7FEFF 		bl	xTaskGetTickCount
 1007 000c F860     		str	r0, [r7, #12]
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	if( xTimeNow < xLastTime )
 1008              		.loc 1 631 0
 1009 000e 0B4B     		ldr	r3, .L71
 1010 0010 1B68     		ldr	r3, [r3]
 1011 0012 FA68     		ldr	r2, [r7, #12]
 1012 0014 9A42     		cmp	r2, r3
 1013 0016 05D2     		bcs	.L68
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		prvSwitchTimerLists();
 1014              		.loc 1 633 0
 1015 0018 FFF7FEFF 		bl	prvSwitchTimerLists
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 1016              		.loc 1 634 0
 1017 001c 7B68     		ldr	r3, [r7, #4]
 1018 001e 0122     		movs	r2, #1
 1019 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 33


 1020 0022 02E0     		b	.L69
 1021              	.L68:
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	else
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 1022              		.loc 1 638 0
 1023 0024 7B68     		ldr	r3, [r7, #4]
 1024 0026 0022     		movs	r2, #0
 1025 0028 1A60     		str	r2, [r3]
 1026              	.L69:
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	xLastTime = xTimeNow;
 1027              		.loc 1 641 0
 1028 002a 044A     		ldr	r2, .L71
 1029 002c FB68     		ldr	r3, [r7, #12]
 1030 002e 1360     		str	r3, [r2]
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return xTimeNow;
 1031              		.loc 1 643 0
 1032 0030 FB68     		ldr	r3, [r7, #12]
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 1033              		.loc 1 644 0
 1034 0032 1846     		mov	r0, r3
 1035 0034 1037     		adds	r7, r7, #16
 1036              		.cfi_def_cfa_offset 8
 1037 0036 BD46     		mov	sp, r7
 1038              		.cfi_def_cfa_register 13
 1039              		@ sp needed
 1040 0038 80BD     		pop	{r7, pc}
 1041              	.L72:
 1042 003a 00BF     		.align	2
 1043              	.L71:
 1044 003c 38000000 		.word	xLastTime.12425
 1045              		.cfi_endproc
 1046              	.LFE148:
 1047              		.size	prvSampleTimeNow, .-prvSampleTimeNow
 1048              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
 1049              		.align	2
 1050              		.thumb
 1051              		.thumb_func
 1052              		.type	prvInsertTimerInActiveList, %function
 1053              	prvInsertTimerInActiveList:
 1054              	.LFB149:
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 1055              		.loc 1 648 0
 1056              		.cfi_startproc
 1057              		@ args = 0, pretend = 0, frame = 24
 1058              		@ frame_needed = 1, uses_anonymous_args = 0
 1059 0000 80B5     		push	{r7, lr}
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 7, -8
 1062              		.cfi_offset 14, -4
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 34


 1063 0002 86B0     		sub	sp, sp, #24
 1064              		.cfi_def_cfa_offset 32
 1065 0004 00AF     		add	r7, sp, #0
 1066              		.cfi_def_cfa_register 7
 1067 0006 F860     		str	r0, [r7, #12]
 1068 0008 B960     		str	r1, [r7, #8]
 1069 000a 7A60     		str	r2, [r7, #4]
 1070 000c 3B60     		str	r3, [r7]
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 1071              		.loc 1 649 0
 1072 000e 0023     		movs	r3, #0
 1073 0010 7B61     		str	r3, [r7, #20]
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 1074              		.loc 1 651 0
 1075 0012 FB68     		ldr	r3, [r7, #12]
 1076 0014 BA68     		ldr	r2, [r7, #8]
 1077 0016 5A60     		str	r2, [r3, #4]
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1078              		.loc 1 652 0
 1079 0018 FB68     		ldr	r3, [r7, #12]
 1080 001a FA68     		ldr	r2, [r7, #12]
 1081 001c 1A61     		str	r2, [r3, #16]
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
 1082              		.loc 1 654 0
 1083 001e BA68     		ldr	r2, [r7, #8]
 1084 0020 7B68     		ldr	r3, [r7, #4]
 1085 0022 9A42     		cmp	r2, r3
 1086 0024 12D8     		bhi	.L74
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		timer was issued, and the time the command was processed? */
 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
 1087              		.loc 1 658 0
 1088 0026 7A68     		ldr	r2, [r7, #4]
 1089 0028 3B68     		ldr	r3, [r7]
 1090 002a D21A     		subs	r2, r2, r3
 1091 002c FB68     		ldr	r3, [r7, #12]
 1092 002e 9B69     		ldr	r3, [r3, #24]
 1093 0030 9A42     		cmp	r2, r3
 1094 0032 02D3     		bcc	.L75
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* The time between a command being issued and the command being
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 1095              		.loc 1 662 0
 1096 0034 0123     		movs	r3, #1
 1097 0036 7B61     		str	r3, [r7, #20]
 1098 0038 1BE0     		b	.L77
 1099              	.L75:
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		else
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 1100              		.loc 1 666 0
 1101 003a 104B     		ldr	r3, .L80
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 35


 1102 003c 1A68     		ldr	r2, [r3]
 1103 003e FB68     		ldr	r3, [r7, #12]
 1104 0040 0433     		adds	r3, r3, #4
 1105 0042 1946     		mov	r1, r3
 1106 0044 1046     		mov	r0, r2
 1107 0046 FFF7FEFF 		bl	vListInsert
 1108 004a 12E0     		b	.L77
 1109              	.L74:
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	else
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 1110              		.loc 1 671 0
 1111 004c 7A68     		ldr	r2, [r7, #4]
 1112 004e 3B68     		ldr	r3, [r7]
 1113 0050 9A42     		cmp	r2, r3
 1114 0052 06D2     		bcs	.L78
 1115              		.loc 1 671 0 is_stmt 0 discriminator 1
 1116 0054 BA68     		ldr	r2, [r7, #8]
 1117 0056 3B68     		ldr	r3, [r7]
 1118 0058 9A42     		cmp	r2, r3
 1119 005a 02D3     		bcc	.L78
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 1120              		.loc 1 676 0 is_stmt 1
 1121 005c 0123     		movs	r3, #1
 1122 005e 7B61     		str	r3, [r7, #20]
 1123 0060 07E0     		b	.L77
 1124              	.L78:
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		else
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1125              		.loc 1 680 0
 1126 0062 074B     		ldr	r3, .L80+4
 1127 0064 1A68     		ldr	r2, [r3]
 1128 0066 FB68     		ldr	r3, [r7, #12]
 1129 0068 0433     		adds	r3, r3, #4
 1130 006a 1946     		mov	r1, r3
 1131 006c 1046     		mov	r0, r2
 1132 006e FFF7FEFF 		bl	vListInsert
 1133              	.L77:
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return xProcessTimerNow;
 1134              		.loc 1 684 0
 1135 0072 7B69     		ldr	r3, [r7, #20]
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 1136              		.loc 1 685 0
 1137 0074 1846     		mov	r0, r3
 1138 0076 1837     		adds	r7, r7, #24
 1139              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 36


 1140 0078 BD46     		mov	sp, r7
 1141              		.cfi_def_cfa_register 13
 1142              		@ sp needed
 1143 007a 80BD     		pop	{r7, pc}
 1144              	.L81:
 1145              		.align	2
 1146              	.L80:
 1147 007c 2C000000 		.word	pxOverflowTimerList
 1148 0080 28000000 		.word	pxCurrentTimerList
 1149              		.cfi_endproc
 1150              	.LFE149:
 1151              		.size	prvInsertTimerInActiveList, .-prvInsertTimerInActiveList
 1152              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1153              		.align	2
 1154              		.thumb
 1155              		.thumb_func
 1156              		.type	prvProcessReceivedCommands, %function
 1157              	prvProcessReceivedCommands:
 1158              	.LFB150:
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 1159              		.loc 1 689 0
 1160              		.cfi_startproc
 1161              		@ args = 0, pretend = 0, frame = 40
 1162              		@ frame_needed = 1, uses_anonymous_args = 0
 1163 0000 80B5     		push	{r7, lr}
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 7, -8
 1166              		.cfi_offset 14, -4
 1167 0002 8CB0     		sub	sp, sp, #48
 1168              		.cfi_def_cfa_offset 56
 1169 0004 02AF     		add	r7, sp, #8
 1170              		.cfi_def_cfa 7, 48
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer;
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xTimeNow;
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 1171              		.loc 1 695 0
 1172 0006 7AE0     		b	.L83
 1173              	.L95:
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			commands. */
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				configASSERT( pxCallback );
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 37


 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				/* Call the function. */
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			else
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		function calls. */
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 1174              		.loc 1 721 0
 1175 0008 BB68     		ldr	r3, [r7, #8]
 1176 000a 002B     		cmp	r3, #0
 1177 000c 77DB     		blt	.L83
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			software timer. */
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 1178              		.loc 1 725 0
 1179 000e 3B69     		ldr	r3, [r7, #16]
 1180 0010 7B62     		str	r3, [r7, #36]
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 1181              		.loc 1 727 0
 1182 0012 7B6A     		ldr	r3, [r7, #36]
 1183 0014 5B69     		ldr	r3, [r3, #20]
 1184 0016 002B     		cmp	r3, #0
 1185 0018 04D0     		beq	.L84
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1186              		.loc 1 730 0
 1187 001a 7B6A     		ldr	r3, [r7, #36]
 1188 001c 0433     		adds	r3, r3, #4
 1189 001e 1846     		mov	r0, r3
 1190 0020 FFF7FEFF 		bl	uxListRemove
 1191              	.L84:
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			else
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 1192              		.loc 1 745 0
 1193 0024 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 38


 1194 0026 1846     		mov	r0, r3
 1195 0028 FFF7FEFF 		bl	prvSampleTimeNow
 1196 002c 3862     		str	r0, [r7, #32]
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			switch( xMessage.xMessageID )
 1197              		.loc 1 747 0
 1198 002e BB68     		ldr	r3, [r7, #8]
 1199 0030 092B     		cmp	r3, #9
 1200 0032 63D8     		bhi	.L96
 1201 0034 01A2     		adr	r2, .L87
 1202 0036 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1203 003a 00BF     		.p2align 2
 1204              	.L87:
 1205 003c 65000000 		.word	.L86+1
 1206 0040 65000000 		.word	.L86+1
 1207 0044 65000000 		.word	.L86+1
 1208 0048 FF000000 		.word	.L83+1
 1209 004c BF000000 		.word	.L89+1
 1210 0050 F5000000 		.word	.L90+1
 1211 0054 65000000 		.word	.L86+1
 1212 0058 65000000 		.word	.L86+1
 1213 005c FF000000 		.word	.L83+1
 1214 0060 BF000000 		.word	.L89+1
 1215              		.p2align 1
 1216              	.L86:
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_START :
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					/* Start or restart a timer. */
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1217              		.loc 1 755 0
 1218 0064 FA68     		ldr	r2, [r7, #12]
 1219 0066 7B6A     		ldr	r3, [r7, #36]
 1220 0068 9B69     		ldr	r3, [r3, #24]
 1221 006a D118     		adds	r1, r2, r3
 1222 006c FB68     		ldr	r3, [r7, #12]
 1223 006e 3A6A     		ldr	r2, [r7, #32]
 1224 0070 786A     		ldr	r0, [r7, #36]
 1225 0072 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1226 0076 0346     		mov	r3, r0
 1227 0078 002B     		cmp	r3, #0
 1228 007a 40D0     		beq	.L83
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					{
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						/* The timer expired before it was added to the active
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						timer list.  Process it now. */
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1229              		.loc 1 759 0
 1230 007c 7B6A     		ldr	r3, [r7, #36]
 1231 007e 5B6A     		ldr	r3, [r3, #36]
 1232 0080 786A     		ldr	r0, [r7, #36]
 1233 0082 9847     		blx	r3
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 39


 1234              		.loc 1 762 0
 1235 0084 7B6A     		ldr	r3, [r7, #36]
 1236 0086 DB69     		ldr	r3, [r3, #28]
 1237 0088 012B     		cmp	r3, #1
 1238 008a 38D1     		bne	.L83
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						{
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 1239              		.loc 1 764 0
 1240 008c FA68     		ldr	r2, [r7, #12]
 1241 008e 7B6A     		ldr	r3, [r7, #36]
 1242 0090 9B69     		ldr	r3, [r3, #24]
 1243 0092 1A44     		add	r2, r2, r3
 1244 0094 0023     		movs	r3, #0
 1245 0096 0093     		str	r3, [sp]
 1246 0098 0023     		movs	r3, #0
 1247 009a 0021     		movs	r1, #0
 1248 009c 786A     		ldr	r0, [r7, #36]
 1249 009e FFF7FEFF 		bl	xTimerGenericCommand
 1250 00a2 F861     		str	r0, [r7, #28]
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 							configASSERT( xResult );
 1251              		.loc 1 765 0
 1252 00a4 FB69     		ldr	r3, [r7, #28]
 1253 00a6 002B     		cmp	r3, #0
 1254 00a8 29D1     		bne	.L83
 1255              	.LBB46:
 1256              	.LBB47:
 1257              		.loc 2 156 0 discriminator 1
 1258              		.syntax unified
 1259              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1260 00aa 4FF03F03 			mov r3, #63												
 1261 00ae 83F31188 		msr basepri, r3											
 1262 00b2 BFF36F8F 		isb														
 1263 00b6 BFF34F8F 		dsb														
 1264              	
 1265              	@ 0 "" 2
 1266              		.thumb
 1267              		.syntax unified
 1268 00ba 7B61     		str	r3, [r7, #20]
 1269              	.L92:
 1270              	.LBE47:
 1271              	.LBE46:
 1272              		.loc 1 765 0 discriminator 1
 1273 00bc FEE7     		b	.L92
 1274              	.L89:
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 							( void ) xResult;
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						}
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						else
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						{
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						}
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					}
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					else
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					{
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					}
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 40


 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					There is nothing to do here. */
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1275              		.loc 1 787 0
 1276 00be FA68     		ldr	r2, [r7, #12]
 1277 00c0 7B6A     		ldr	r3, [r7, #36]
 1278 00c2 9A61     		str	r2, [r3, #24]
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1279              		.loc 1 788 0
 1280 00c4 7B6A     		ldr	r3, [r7, #36]
 1281 00c6 9B69     		ldr	r3, [r3, #24]
 1282 00c8 002B     		cmp	r3, #0
 1283 00ca 09D1     		bne	.L93
 1284              	.LBB48:
 1285              	.LBB49:
 1286              		.loc 2 156 0 discriminator 1
 1287              		.syntax unified
 1288              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1289 00cc 4FF03F03 			mov r3, #63												
 1290 00d0 83F31188 		msr basepri, r3											
 1291 00d4 BFF36F8F 		isb														
 1292 00d8 BFF34F8F 		dsb														
 1293              	
 1294              	@ 0 "" 2
 1295              		.thumb
 1296              		.syntax unified
 1297 00dc BB61     		str	r3, [r7, #24]
 1298              	.L94:
 1299              	.LBE49:
 1300              	.LBE48:
 1301              		.loc 1 788 0 discriminator 4
 1302 00de FEE7     		b	.L94
 1303              	.L93:
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					no fail case that needs to be handled here. */
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 1304              		.loc 1 796 0
 1305 00e0 7B6A     		ldr	r3, [r7, #36]
 1306 00e2 9A69     		ldr	r2, [r3, #24]
 1307 00e4 3B6A     		ldr	r3, [r7, #32]
 1308 00e6 D118     		adds	r1, r2, r3
 1309 00e8 3B6A     		ldr	r3, [r7, #32]
 1310 00ea 3A6A     		ldr	r2, [r7, #32]
 1311 00ec 786A     		ldr	r0, [r7, #36]
 1312 00ee FFF7FEFF 		bl	prvInsertTimerInActiveList
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					break;
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 41


 1313              		.loc 1 797 0
 1314 00f2 04E0     		b	.L83
 1315              	.L90:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					allocated. */
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					{
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						free it again. */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						vPortFree( pxTimer );
 1316              		.loc 1 807 0
 1317 00f4 786A     		ldr	r0, [r7, #36]
 1318 00f6 FFF7FEFF 		bl	vPortFree
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					}
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					{
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						/* The timer could have been allocated statically or
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						dynamically, so check before attempting to free the
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						memory. */
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						{
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 							vPortFree( pxTimer );
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						}
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						else
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						{
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 						}
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					}
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 1319              		.loc 1 824 0
 1320 00fa 00E0     		b	.L83
 1321              	.L96:
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				default	:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					/* Don't expect to get here. */
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					break;
 1322              		.loc 1 828 0
 1323 00fc 00BF     		nop
 1324              	.L83:
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 1325              		.loc 1 695 0
 1326 00fe 084B     		ldr	r3, .L97
 1327 0100 1B68     		ldr	r3, [r3]
 1328 0102 07F10801 		add	r1, r7, #8
 1329 0106 0022     		movs	r2, #0
 1330 0108 1846     		mov	r0, r3
 1331 010a FFF7FEFF 		bl	xQueueReceive
 1332 010e 0346     		mov	r3, r0
 1333 0110 002B     		cmp	r3, #0
 1334 0112 7FF479AF 		bne	.L95
 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 42


 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 1335              		.loc 1 832 0
 1336 0116 00BF     		nop
 1337 0118 2837     		adds	r7, r7, #40
 1338              		.cfi_def_cfa_offset 8
 1339 011a BD46     		mov	sp, r7
 1340              		.cfi_def_cfa_register 13
 1341              		@ sp needed
 1342 011c 80BD     		pop	{r7, pc}
 1343              	.L98:
 1344 011e 00BF     		.align	2
 1345              	.L97:
 1346 0120 30000000 		.word	xTimerQueue
 1347              		.cfi_endproc
 1348              	.LFE150:
 1349              		.size	prvProcessReceivedCommands, .-prvProcessReceivedCommands
 1350              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 1351              		.align	2
 1352              		.thumb
 1353              		.thumb_func
 1354              		.type	prvSwitchTimerLists, %function
 1355              	prvSwitchTimerLists:
 1356              	.LFB151:
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvSwitchTimerLists( void )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 1357              		.loc 1 836 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 24
 1360              		@ frame_needed = 1, uses_anonymous_args = 0
 1361 0000 80B5     		push	{r7, lr}
 1362              		.cfi_def_cfa_offset 8
 1363              		.cfi_offset 7, -8
 1364              		.cfi_offset 14, -4
 1365 0002 88B0     		sub	sp, sp, #32
 1366              		.cfi_def_cfa_offset 40
 1367 0004 02AF     		add	r7, sp, #8
 1368              		.cfi_def_cfa 7, 32
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** List_t *pxTemp;
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer;
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xResult;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	are switched. */
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 1369              		.loc 1 846 0
 1370 0006 44E0     		b	.L100
 1371              	.L103:
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 1372              		.loc 1 848 0
 1373 0008 2B4B     		ldr	r3, .L104
 1374 000a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 43


 1375 000c DB68     		ldr	r3, [r3, #12]
 1376 000e 1B68     		ldr	r3, [r3]
 1377 0010 7B61     		str	r3, [r7, #20]
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Remove the timer from the list. */
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 1378              		.loc 1 851 0
 1379 0012 294B     		ldr	r3, .L104
 1380 0014 1B68     		ldr	r3, [r3]
 1381 0016 DB68     		ldr	r3, [r3, #12]
 1382 0018 DB68     		ldr	r3, [r3, #12]
 1383 001a 3B61     		str	r3, [r7, #16]
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 1384              		.loc 1 852 0
 1385 001c 3B69     		ldr	r3, [r7, #16]
 1386 001e 0433     		adds	r3, r3, #4
 1387 0020 1846     		mov	r0, r3
 1388 0022 FFF7FEFF 		bl	uxListRemove
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		have not yet been switched. */
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 1389              		.loc 1 858 0
 1390 0026 3B69     		ldr	r3, [r7, #16]
 1391 0028 5B6A     		ldr	r3, [r3, #36]
 1392 002a 3869     		ldr	r0, [r7, #16]
 1393 002c 9847     		blx	r3
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 1394              		.loc 1 860 0
 1395 002e 3B69     		ldr	r3, [r7, #16]
 1396 0030 DB69     		ldr	r3, [r3, #28]
 1397 0032 012B     		cmp	r3, #1
 1398 0034 2DD1     		bne	.L100
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			the timer going into the same timer list then it has already expired
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			the lists have been swapped. */
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 1399              		.loc 1 868 0
 1400 0036 3B69     		ldr	r3, [r7, #16]
 1401 0038 9A69     		ldr	r2, [r3, #24]
 1402 003a 7B69     		ldr	r3, [r7, #20]
 1403 003c 1344     		add	r3, r3, r2
 1404 003e FB60     		str	r3, [r7, #12]
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 1405              		.loc 1 869 0
 1406 0040 FA68     		ldr	r2, [r7, #12]
 1407 0042 7B69     		ldr	r3, [r7, #20]
 1408 0044 9A42     		cmp	r2, r3
 1409 0046 0ED9     		bls	.L101
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 44


 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 1410              		.loc 1 871 0
 1411 0048 3B69     		ldr	r3, [r7, #16]
 1412 004a FA68     		ldr	r2, [r7, #12]
 1413 004c 5A60     		str	r2, [r3, #4]
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 1414              		.loc 1 872 0
 1415 004e 3B69     		ldr	r3, [r7, #16]
 1416 0050 3A69     		ldr	r2, [r7, #16]
 1417 0052 1A61     		str	r2, [r3, #16]
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 1418              		.loc 1 873 0
 1419 0054 184B     		ldr	r3, .L104
 1420 0056 1A68     		ldr	r2, [r3]
 1421 0058 3B69     		ldr	r3, [r7, #16]
 1422 005a 0433     		adds	r3, r3, #4
 1423 005c 1946     		mov	r1, r3
 1424 005e 1046     		mov	r0, r2
 1425 0060 FFF7FEFF 		bl	vListInsert
 1426 0064 15E0     		b	.L100
 1427              	.L101:
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			else
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 1428              		.loc 1 877 0
 1429 0066 0023     		movs	r3, #0
 1430 0068 0093     		str	r3, [sp]
 1431 006a 0023     		movs	r3, #0
 1432 006c 7A69     		ldr	r2, [r7, #20]
 1433 006e 0021     		movs	r1, #0
 1434 0070 3869     		ldr	r0, [r7, #16]
 1435 0072 FFF7FEFF 		bl	xTimerGenericCommand
 1436 0076 B860     		str	r0, [r7, #8]
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				configASSERT( xResult );
 1437              		.loc 1 878 0
 1438 0078 BB68     		ldr	r3, [r7, #8]
 1439 007a 002B     		cmp	r3, #0
 1440 007c 09D1     		bne	.L100
 1441              	.LBB50:
 1442              	.LBB51:
 1443              		.loc 2 156 0 discriminator 1
 1444              		.syntax unified
 1445              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1446 007e 4FF03F03 			mov r3, #63												
 1447 0082 83F31188 		msr basepri, r3											
 1448 0086 BFF36F8F 		isb														
 1449 008a BFF34F8F 		dsb														
 1450              	
 1451              	@ 0 "" 2
 1452              		.thumb
 1453              		.syntax unified
 1454 008e 3B60     		str	r3, [r7]
 1455              	.L102:
 1456              	.LBE51:
 1457              	.LBE50:
 1458              		.loc 1 878 0 discriminator 1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 45


 1459 0090 FEE7     		b	.L102
 1460              	.L100:
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 1461              		.loc 1 846 0
 1462 0092 094B     		ldr	r3, .L104
 1463 0094 1B68     		ldr	r3, [r3]
 1464 0096 1B68     		ldr	r3, [r3]
 1465 0098 002B     		cmp	r3, #0
 1466 009a B5D1     		bne	.L103
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				( void ) xResult;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		else
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 1467              		.loc 1 888 0
 1468 009c 064B     		ldr	r3, .L104
 1469 009e 1B68     		ldr	r3, [r3]
 1470 00a0 7B60     		str	r3, [r7, #4]
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 1471              		.loc 1 889 0
 1472 00a2 064B     		ldr	r3, .L104+4
 1473 00a4 1B68     		ldr	r3, [r3]
 1474 00a6 044A     		ldr	r2, .L104
 1475 00a8 1360     		str	r3, [r2]
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 1476              		.loc 1 890 0
 1477 00aa 044A     		ldr	r2, .L104+4
 1478 00ac 7B68     		ldr	r3, [r7, #4]
 1479 00ae 1360     		str	r3, [r2]
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 1480              		.loc 1 891 0
 1481 00b0 00BF     		nop
 1482 00b2 1837     		adds	r7, r7, #24
 1483              		.cfi_def_cfa_offset 8
 1484 00b4 BD46     		mov	sp, r7
 1485              		.cfi_def_cfa_register 13
 1486              		@ sp needed
 1487 00b6 80BD     		pop	{r7, pc}
 1488              	.L105:
 1489              		.align	2
 1490              	.L104:
 1491 00b8 28000000 		.word	pxCurrentTimerList
 1492 00bc 2C000000 		.word	pxOverflowTimerList
 1493              		.cfi_endproc
 1494              	.LFE151:
 1495              		.size	prvSwitchTimerLists, .-prvSwitchTimerLists
 1496              		.section	.rodata
 1497              		.align	2
 1498              	.LC1:
 1499 0008 546D7251 		.ascii	"TmrQ\000"
 1499      00
 1500              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 46


 1501              		.align	2
 1502              		.thumb
 1503              		.thumb_func
 1504              		.type	prvCheckForValidListAndQueue, %function
 1505              	prvCheckForValidListAndQueue:
 1506              	.LFB152:
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 1507              		.loc 1 895 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 1, uses_anonymous_args = 0
 1511 0000 80B5     		push	{r7, lr}
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 7, -8
 1514              		.cfi_offset 14, -4
 1515 0002 00AF     		add	r7, sp, #0
 1516              		.cfi_def_cfa_register 7
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	initialised. */
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	taskENTER_CRITICAL();
 1517              		.loc 1 899 0
 1518 0004 FFF7FEFF 		bl	vPortEnterCritical
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		if( xTimerQueue == NULL )
 1519              		.loc 1 901 0
 1520 0008 124B     		ldr	r3, .L108
 1521 000a 1B68     		ldr	r3, [r3]
 1522 000c 002B     		cmp	r3, #0
 1523 000e 1DD1     		bne	.L107
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 1524              		.loc 1 903 0
 1525 0010 1148     		ldr	r0, .L108+4
 1526 0012 FFF7FEFF 		bl	vListInitialise
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 1527              		.loc 1 904 0
 1528 0016 1148     		ldr	r0, .L108+8
 1529 0018 FFF7FEFF 		bl	vListInitialise
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 1530              		.loc 1 905 0
 1531 001c 104B     		ldr	r3, .L108+12
 1532 001e 0E4A     		ldr	r2, .L108+4
 1533 0020 1A60     		str	r2, [r3]
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 1534              		.loc 1 906 0
 1535 0022 104B     		ldr	r3, .L108+16
 1536 0024 0D4A     		ldr	r2, .L108+8
 1537 0026 1A60     		str	r2, [r3]
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 47


 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#else
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 1538              		.loc 1 919 0
 1539 0028 0022     		movs	r2, #0
 1540 002a 0C21     		movs	r1, #12
 1541 002c 0A20     		movs	r0, #10
 1542 002e FFF7FEFF 		bl	xQueueGenericCreate
 1543 0032 0246     		mov	r2, r0
 1544 0034 074B     		ldr	r3, .L108
 1545 0036 1A60     		str	r2, [r3]
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#endif
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			{
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				if( xTimerQueue != NULL )
 1546              		.loc 1 925 0
 1547 0038 064B     		ldr	r3, .L108
 1548 003a 1B68     		ldr	r3, [r3]
 1549 003c 002B     		cmp	r3, #0
 1550 003e 05D0     		beq	.L107
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				{
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 1551              		.loc 1 927 0
 1552 0040 044B     		ldr	r3, .L108
 1553 0042 1B68     		ldr	r3, [r3]
 1554 0044 0849     		ldr	r1, .L108+20
 1555 0046 1846     		mov	r0, r3
 1556 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 1557              	.L107:
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				else
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				{
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 				}
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			}
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		else
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		{
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		}
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	taskEXIT_CRITICAL();
 1558              		.loc 1 941 0
 1559 004c FFF7FEFF 		bl	vPortExitCritical
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 1560              		.loc 1 942 0
 1561 0050 00BF     		nop
 1562 0052 80BD     		pop	{r7, pc}
 1563              	.L109:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 48


 1564              		.align	2
 1565              	.L108:
 1566 0054 30000000 		.word	xTimerQueue
 1567 0058 00000000 		.word	xActiveTimerList1
 1568 005c 14000000 		.word	xActiveTimerList2
 1569 0060 28000000 		.word	pxCurrentTimerList
 1570 0064 2C000000 		.word	pxOverflowTimerList
 1571 0068 08000000 		.word	.LC1
 1572              		.cfi_endproc
 1573              	.LFE152:
 1574              		.size	prvCheckForValidListAndQueue, .-prvCheckForValidListAndQueue
 1575              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1576              		.align	2
 1577              		.global	xTimerIsTimerActive
 1578              		.thumb
 1579              		.thumb_func
 1580              		.type	xTimerIsTimerActive, %function
 1581              	xTimerIsTimerActive:
 1582              	.LFB153:
 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 1583              		.loc 1 946 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 24
 1586              		@ frame_needed = 1, uses_anonymous_args = 0
 1587 0000 80B5     		push	{r7, lr}
 1588              		.cfi_def_cfa_offset 8
 1589              		.cfi_offset 7, -8
 1590              		.cfi_offset 14, -4
 1591 0002 86B0     		sub	sp, sp, #24
 1592              		.cfi_def_cfa_offset 32
 1593 0004 00AF     		add	r7, sp, #0
 1594              		.cfi_def_cfa_register 7
 1595 0006 7860     		str	r0, [r7, #4]
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1596              		.loc 1 948 0
 1597 0008 7B68     		ldr	r3, [r7, #4]
 1598 000a 7B61     		str	r3, [r7, #20]
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 1599              		.loc 1 950 0
 1600 000c 7B68     		ldr	r3, [r7, #4]
 1601 000e 002B     		cmp	r3, #0
 1602 0010 09D1     		bne	.L111
 1603              	.LBB52:
 1604              	.LBB53:
 1605              		.loc 2 156 0 discriminator 1
 1606              		.syntax unified
 1607              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1608 0012 4FF03F03 			mov r3, #63												
 1609 0016 83F31188 		msr basepri, r3											
 1610 001a BFF36F8F 		isb														
 1611 001e BFF34F8F 		dsb														
 1612              	
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 49


 1613              	@ 0 "" 2
 1614              		.thumb
 1615              		.syntax unified
 1616 0022 FB60     		str	r3, [r7, #12]
 1617              	.L112:
 1618              	.LBE53:
 1619              	.LBE52:
 1620              		.loc 1 950 0 discriminator 1
 1621 0024 FEE7     		b	.L112
 1622              	.L111:
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	taskENTER_CRITICAL();
 1623              		.loc 1 953 0
 1624 0026 FFF7FEFF 		bl	vPortEnterCritical
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1625              		.loc 1 958 0
 1626 002a 7B69     		ldr	r3, [r7, #20]
 1627 002c 5B69     		ldr	r3, [r3, #20]
 1628 002e 002B     		cmp	r3, #0
 1629 0030 14BF     		ite	ne
 1630 0032 0123     		movne	r3, #1
 1631 0034 0023     		moveq	r3, #0
 1632 0036 DBB2     		uxtb	r3, r3
 1633 0038 3B61     		str	r3, [r7, #16]
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	taskEXIT_CRITICAL();
 1634              		.loc 1 960 0
 1635 003a FFF7FEFF 		bl	vPortExitCritical
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return xTimerIsInActiveList;
 1636              		.loc 1 962 0
 1637 003e 3B69     		ldr	r3, [r7, #16]
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1638              		.loc 1 963 0
 1639 0040 1846     		mov	r0, r3
 1640 0042 1837     		adds	r7, r7, #24
 1641              		.cfi_def_cfa_offset 8
 1642 0044 BD46     		mov	sp, r7
 1643              		.cfi_def_cfa_register 13
 1644              		@ sp needed
 1645 0046 80BD     		pop	{r7, pc}
 1646              		.cfi_endproc
 1647              	.LFE153:
 1648              		.size	xTimerIsTimerActive, .-xTimerIsTimerActive
 1649              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1650              		.align	2
 1651              		.global	pvTimerGetTimerID
 1652              		.thumb
 1653              		.thumb_func
 1654              		.type	pvTimerGetTimerID, %function
 1655              	pvTimerGetTimerID:
 1656              	.LFB154:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 50


 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 1657              		.loc 1 967 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 24
 1660              		@ frame_needed = 1, uses_anonymous_args = 0
 1661 0000 80B5     		push	{r7, lr}
 1662              		.cfi_def_cfa_offset 8
 1663              		.cfi_offset 7, -8
 1664              		.cfi_offset 14, -4
 1665 0002 86B0     		sub	sp, sp, #24
 1666              		.cfi_def_cfa_offset 32
 1667 0004 00AF     		add	r7, sp, #0
 1668              		.cfi_def_cfa_register 7
 1669 0006 7860     		str	r0, [r7, #4]
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1670              		.loc 1 968 0
 1671 0008 7B68     		ldr	r3, [r7, #4]
 1672 000a 7B61     		str	r3, [r7, #20]
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** void *pvReturn;
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 1673              		.loc 1 971 0
 1674 000c 7B68     		ldr	r3, [r7, #4]
 1675 000e 002B     		cmp	r3, #0
 1676 0010 09D1     		bne	.L115
 1677              	.LBB54:
 1678              	.LBB55:
 1679              		.loc 2 156 0 discriminator 1
 1680              		.syntax unified
 1681              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1682 0012 4FF03F03 			mov r3, #63												
 1683 0016 83F31188 		msr basepri, r3											
 1684 001a BFF36F8F 		isb														
 1685 001e BFF34F8F 		dsb														
 1686              	
 1687              	@ 0 "" 2
 1688              		.thumb
 1689              		.syntax unified
 1690 0022 FB60     		str	r3, [r7, #12]
 1691              	.L116:
 1692              	.LBE55:
 1693              	.LBE54:
 1694              		.loc 1 971 0 discriminator 1
 1695 0024 FEE7     		b	.L116
 1696              	.L115:
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	taskENTER_CRITICAL();
 1697              		.loc 1 973 0
 1698 0026 FFF7FEFF 		bl	vPortEnterCritical
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1699              		.loc 1 975 0
 1700 002a 7B69     		ldr	r3, [r7, #20]
 1701 002c 1B6A     		ldr	r3, [r3, #32]
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 51


 1702 002e 3B61     		str	r3, [r7, #16]
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	taskEXIT_CRITICAL();
 1703              		.loc 1 977 0
 1704 0030 FFF7FEFF 		bl	vPortExitCritical
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	return pvReturn;
 1705              		.loc 1 979 0
 1706 0034 3B69     		ldr	r3, [r7, #16]
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 1707              		.loc 1 980 0
 1708 0036 1846     		mov	r0, r3
 1709 0038 1837     		adds	r7, r7, #24
 1710              		.cfi_def_cfa_offset 8
 1711 003a BD46     		mov	sp, r7
 1712              		.cfi_def_cfa_register 13
 1713              		@ sp needed
 1714 003c 80BD     		pop	{r7, pc}
 1715              		.cfi_endproc
 1716              	.LFE154:
 1717              		.size	pvTimerGetTimerID, .-pvTimerGetTimerID
 1718 003e 00BF     		.section	.text.vTimerSetTimerID,"ax",%progbits
 1719              		.align	2
 1720              		.global	vTimerSetTimerID
 1721              		.thumb
 1722              		.thumb_func
 1723              		.type	vTimerSetTimerID, %function
 1724              	vTimerSetTimerID:
 1725              	.LFB155:
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** /*-----------------------------------------------------------*/
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** {
 1726              		.loc 1 984 0
 1727              		.cfi_startproc
 1728              		@ args = 0, pretend = 0, frame = 16
 1729              		@ frame_needed = 1, uses_anonymous_args = 0
 1730 0000 80B5     		push	{r7, lr}
 1731              		.cfi_def_cfa_offset 8
 1732              		.cfi_offset 7, -8
 1733              		.cfi_offset 14, -4
 1734 0002 84B0     		sub	sp, sp, #16
 1735              		.cfi_def_cfa_offset 24
 1736 0004 00AF     		add	r7, sp, #0
 1737              		.cfi_def_cfa_register 7
 1738 0006 7860     		str	r0, [r7, #4]
 1739 0008 3960     		str	r1, [r7]
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1740              		.loc 1 985 0
 1741 000a 7B68     		ldr	r3, [r7, #4]
 1742 000c FB60     		str	r3, [r7, #12]
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	configASSERT( xTimer );
 1743              		.loc 1 987 0
 1744 000e 7B68     		ldr	r3, [r7, #4]
 1745 0010 002B     		cmp	r3, #0
 1746 0012 09D1     		bne	.L119
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 52


 1747              	.LBB56:
 1748              	.LBB57:
 1749              		.loc 2 156 0 discriminator 1
 1750              		.syntax unified
 1751              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1752 0014 4FF03F03 			mov r3, #63												
 1753 0018 83F31188 		msr basepri, r3											
 1754 001c BFF36F8F 		isb														
 1755 0020 BFF34F8F 		dsb														
 1756              	
 1757              	@ 0 "" 2
 1758              		.thumb
 1759              		.syntax unified
 1760 0024 BB60     		str	r3, [r7, #8]
 1761              	.L120:
 1762              	.LBE57:
 1763              	.LBE56:
 1764              		.loc 1 987 0 discriminator 1
 1765 0026 FEE7     		b	.L120
 1766              	.L119:
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	taskENTER_CRITICAL();
 1767              		.loc 1 989 0
 1768 0028 FFF7FEFF 		bl	vPortEnterCritical
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	{
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1769              		.loc 1 991 0
 1770 002c FB68     		ldr	r3, [r7, #12]
 1771 002e 3A68     		ldr	r2, [r7]
 1772 0030 1A62     		str	r2, [r3, #32]
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	}
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** 	taskEXIT_CRITICAL();
 1773              		.loc 1 993 0
 1774 0032 FFF7FEFF 		bl	vPortExitCritical
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/timers.c **** }
 1775              		.loc 1 994 0
 1776 0036 00BF     		nop
 1777 0038 1037     		adds	r7, r7, #16
 1778              		.cfi_def_cfa_offset 8
 1779 003a BD46     		mov	sp, r7
 1780              		.cfi_def_cfa_register 13
 1781              		@ sp needed
 1782 003c 80BD     		pop	{r7, pc}
 1783              		.cfi_endproc
 1784              	.LFE155:
 1785              		.size	vTimerSetTimerID, .-vTimerSetTimerID
 1786 003e 00BF     		.bss
 1787              		.align	2
 1788              	xLastTime.12425:
 1789 0038 00000000 		.space	4
 1790              		.text
 1791              	.Letext0:
 1792              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1793              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1794              		.file 5 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 1795              		.file 6 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 1796              		.file 7 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/queue.h"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 53


 1797              		.file 8 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 1798              		.file 9 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 1799              		.section	.debug_info,"",%progbits
 1800              	.Ldebug_info0:
 1801 0000 8E0B0000 		.4byte	0xb8e
 1802 0004 0400     		.2byte	0x4
 1803 0006 00000000 		.4byte	.Ldebug_abbrev0
 1804 000a 04       		.byte	0x4
 1805 000b 01       		.uleb128 0x1
 1806 000c C6020000 		.4byte	.LASF106
 1807 0010 0C       		.byte	0xc
 1808 0011 3D000000 		.4byte	.LASF107
 1809 0015 2E020000 		.4byte	.LASF108
 1810 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1811 001d 00000000 		.4byte	0
 1812 0021 00000000 		.4byte	.Ldebug_line0
 1813 0025 02       		.uleb128 0x2
 1814 0026 04       		.byte	0x4
 1815 0027 07       		.byte	0x7
 1816 0028 C2050000 		.4byte	.LASF0
 1817 002c 03       		.uleb128 0x3
 1818 002d 04       		.byte	0x4
 1819 002e 05       		.byte	0x5
 1820 002f 696E7400 		.ascii	"int\000"
 1821 0033 02       		.uleb128 0x2
 1822 0034 08       		.byte	0x8
 1823 0035 05       		.byte	0x5
 1824 0036 92020000 		.4byte	.LASF1
 1825 003a 02       		.uleb128 0x2
 1826 003b 08       		.byte	0x8
 1827 003c 04       		.byte	0x4
 1828 003d 1B040000 		.4byte	.LASF2
 1829 0041 02       		.uleb128 0x2
 1830 0042 01       		.byte	0x1
 1831 0043 06       		.byte	0x6
 1832 0044 70040000 		.4byte	.LASF3
 1833 0048 04       		.uleb128 0x4
 1834 0049 B6030000 		.4byte	.LASF7
 1835 004d 03       		.byte	0x3
 1836 004e 1D       		.byte	0x1d
 1837 004f 53000000 		.4byte	0x53
 1838 0053 02       		.uleb128 0x2
 1839 0054 01       		.byte	0x1
 1840 0055 08       		.byte	0x8
 1841 0056 46040000 		.4byte	.LASF4
 1842 005a 02       		.uleb128 0x2
 1843 005b 02       		.byte	0x2
 1844 005c 05       		.byte	0x5
 1845 005d A2000000 		.4byte	.LASF5
 1846 0061 02       		.uleb128 0x2
 1847 0062 02       		.byte	0x2
 1848 0063 07       		.byte	0x7
 1849 0064 30050000 		.4byte	.LASF6
 1850 0068 04       		.uleb128 0x4
 1851 0069 5B060000 		.4byte	.LASF8
 1852 006d 03       		.byte	0x3
 1853 006e 3F       		.byte	0x3f
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 54


 1854 006f 73000000 		.4byte	0x73
 1855 0073 02       		.uleb128 0x2
 1856 0074 04       		.byte	0x4
 1857 0075 05       		.byte	0x5
 1858 0076 74050000 		.4byte	.LASF9
 1859 007a 04       		.uleb128 0x4
 1860 007b 2C010000 		.4byte	.LASF10
 1861 007f 03       		.byte	0x3
 1862 0080 41       		.byte	0x41
 1863 0081 85000000 		.4byte	0x85
 1864 0085 02       		.uleb128 0x2
 1865 0086 04       		.byte	0x4
 1866 0087 07       		.byte	0x7
 1867 0088 08060000 		.4byte	.LASF11
 1868 008c 02       		.uleb128 0x2
 1869 008d 08       		.byte	0x8
 1870 008e 07       		.byte	0x7
 1871 008f 8B040000 		.4byte	.LASF12
 1872 0093 02       		.uleb128 0x2
 1873 0094 04       		.byte	0x4
 1874 0095 07       		.byte	0x7
 1875 0096 8F060000 		.4byte	.LASF13
 1876 009a 05       		.uleb128 0x5
 1877 009b 04       		.byte	0x4
 1878 009c 02       		.uleb128 0x2
 1879 009d 01       		.byte	0x1
 1880 009e 08       		.byte	0x8
 1881 009f C1020000 		.4byte	.LASF14
 1882 00a3 06       		.uleb128 0x6
 1883 00a4 04       		.byte	0x4
 1884 00a5 A9000000 		.4byte	0xa9
 1885 00a9 07       		.uleb128 0x7
 1886 00aa 9C000000 		.4byte	0x9c
 1887 00ae 04       		.uleb128 0x4
 1888 00af B4010000 		.4byte	.LASF15
 1889 00b3 04       		.byte	0x4
 1890 00b4 18       		.byte	0x18
 1891 00b5 48000000 		.4byte	0x48
 1892 00b9 04       		.uleb128 0x4
 1893 00ba A6030000 		.4byte	.LASF16
 1894 00be 04       		.byte	0x4
 1895 00bf 2C       		.byte	0x2c
 1896 00c0 68000000 		.4byte	0x68
 1897 00c4 04       		.uleb128 0x4
 1898 00c5 A2040000 		.4byte	.LASF17
 1899 00c9 04       		.byte	0x4
 1900 00ca 30       		.byte	0x30
 1901 00cb 7A000000 		.4byte	0x7a
 1902 00cf 02       		.uleb128 0x2
 1903 00d0 04       		.byte	0x4
 1904 00d1 04       		.byte	0x4
 1905 00d2 0D020000 		.4byte	.LASF18
 1906 00d6 02       		.uleb128 0x2
 1907 00d7 08       		.byte	0x8
 1908 00d8 04       		.byte	0x4
 1909 00d9 1A060000 		.4byte	.LASF19
 1910 00dd 04       		.uleb128 0x4
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 55


 1911 00de DC040000 		.4byte	.LASF20
 1912 00e2 02       		.byte	0x2
 1913 00e3 38       		.byte	0x38
 1914 00e4 73000000 		.4byte	0x73
 1915 00e8 04       		.uleb128 0x4
 1916 00e9 84050000 		.4byte	.LASF21
 1917 00ed 02       		.byte	0x2
 1918 00ee 39       		.byte	0x39
 1919 00ef 85000000 		.4byte	0x85
 1920 00f3 04       		.uleb128 0x4
 1921 00f4 A0020000 		.4byte	.LASF22
 1922 00f8 02       		.byte	0x2
 1923 00f9 3F       		.byte	0x3f
 1924 00fa C4000000 		.4byte	0xc4
 1925 00fe 08       		.uleb128 0x8
 1926 00ff 10040000 		.4byte	.LASF29
 1927 0103 14       		.byte	0x14
 1928 0104 05       		.byte	0x5
 1929 0105 8B       		.byte	0x8b
 1930 0106 47010000 		.4byte	0x147
 1931 010a 09       		.uleb128 0x9
 1932 010b C0030000 		.4byte	.LASF23
 1933 010f 05       		.byte	0x5
 1934 0110 8E       		.byte	0x8e
 1935 0111 F3000000 		.4byte	0xf3
 1936 0115 00       		.byte	0
 1937 0116 09       		.uleb128 0x9
 1938 0117 7D050000 		.4byte	.LASF24
 1939 011b 05       		.byte	0x5
 1940 011c 8F       		.byte	0x8f
 1941 011d 47010000 		.4byte	0x147
 1942 0121 04       		.byte	0x4
 1943 0122 09       		.uleb128 0x9
 1944 0123 D1000000 		.4byte	.LASF25
 1945 0127 05       		.byte	0x5
 1946 0128 90       		.byte	0x90
 1947 0129 47010000 		.4byte	0x147
 1948 012d 08       		.byte	0x8
 1949 012e 09       		.uleb128 0x9
 1950 012f D0060000 		.4byte	.LASF26
 1951 0133 05       		.byte	0x5
 1952 0134 91       		.byte	0x91
 1953 0135 9A000000 		.4byte	0x9a
 1954 0139 0C       		.byte	0xc
 1955 013a 09       		.uleb128 0x9
 1956 013b 7D000000 		.4byte	.LASF27
 1957 013f 05       		.byte	0x5
 1958 0140 92       		.byte	0x92
 1959 0141 9A000000 		.4byte	0x9a
 1960 0145 10       		.byte	0x10
 1961 0146 00       		.byte	0
 1962 0147 06       		.uleb128 0x6
 1963 0148 04       		.byte	0x4
 1964 0149 FE000000 		.4byte	0xfe
 1965 014d 04       		.uleb128 0x4
 1966 014e D1040000 		.4byte	.LASF28
 1967 0152 05       		.byte	0x5
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 56


 1968 0153 95       		.byte	0x95
 1969 0154 FE000000 		.4byte	0xfe
 1970 0158 08       		.uleb128 0x8
 1971 0159 48010000 		.4byte	.LASF30
 1972 015d 0C       		.byte	0xc
 1973 015e 05       		.byte	0x5
 1974 015f 97       		.byte	0x97
 1975 0160 89010000 		.4byte	0x189
 1976 0164 09       		.uleb128 0x9
 1977 0165 C0030000 		.4byte	.LASF23
 1978 0169 05       		.byte	0x5
 1979 016a 9A       		.byte	0x9a
 1980 016b F3000000 		.4byte	0xf3
 1981 016f 00       		.byte	0
 1982 0170 09       		.uleb128 0x9
 1983 0171 7D050000 		.4byte	.LASF24
 1984 0175 05       		.byte	0x5
 1985 0176 9B       		.byte	0x9b
 1986 0177 47010000 		.4byte	0x147
 1987 017b 04       		.byte	0x4
 1988 017c 09       		.uleb128 0x9
 1989 017d D1000000 		.4byte	.LASF25
 1990 0181 05       		.byte	0x5
 1991 0182 9C       		.byte	0x9c
 1992 0183 47010000 		.4byte	0x147
 1993 0187 08       		.byte	0x8
 1994 0188 00       		.byte	0
 1995 0189 04       		.uleb128 0x4
 1996 018a 26000000 		.4byte	.LASF31
 1997 018e 05       		.byte	0x5
 1998 018f 9E       		.byte	0x9e
 1999 0190 58010000 		.4byte	0x158
 2000 0194 08       		.uleb128 0x8
 2001 0195 8C030000 		.4byte	.LASF32
 2002 0199 14       		.byte	0x14
 2003 019a 05       		.byte	0x5
 2004 019b A3       		.byte	0xa3
 2005 019c C5010000 		.4byte	0x1c5
 2006 01a0 09       		.uleb128 0x9
 2007 01a1 3B060000 		.4byte	.LASF33
 2008 01a5 05       		.byte	0x5
 2009 01a6 A6       		.byte	0xa6
 2010 01a7 C5010000 		.4byte	0x1c5
 2011 01ab 00       		.byte	0
 2012 01ac 09       		.uleb128 0x9
 2013 01ad 2E070000 		.4byte	.LASF34
 2014 01b1 05       		.byte	0x5
 2015 01b2 A7       		.byte	0xa7
 2016 01b3 CA010000 		.4byte	0x1ca
 2017 01b7 04       		.byte	0x4
 2018 01b8 09       		.uleb128 0x9
 2019 01b9 AC000000 		.4byte	.LASF35
 2020 01bd 05       		.byte	0x5
 2021 01be A8       		.byte	0xa8
 2022 01bf 89010000 		.4byte	0x189
 2023 01c3 08       		.byte	0x8
 2024 01c4 00       		.byte	0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 57


 2025 01c5 0A       		.uleb128 0xa
 2026 01c6 E8000000 		.4byte	0xe8
 2027 01ca 06       		.uleb128 0x6
 2028 01cb 04       		.byte	0x4
 2029 01cc 4D010000 		.4byte	0x14d
 2030 01d0 04       		.uleb128 0x4
 2031 01d1 7E020000 		.4byte	.LASF36
 2032 01d5 05       		.byte	0x5
 2033 01d6 AA       		.byte	0xaa
 2034 01d7 94010000 		.4byte	0x194
 2035 01db 04       		.uleb128 0x4
 2036 01dc EC000000 		.4byte	.LASF37
 2037 01e0 06       		.byte	0x6
 2038 01e1 3D       		.byte	0x3d
 2039 01e2 9A000000 		.4byte	0x9a
 2040 01e6 07       		.uleb128 0x7
 2041 01e7 A3000000 		.4byte	0xa3
 2042 01eb 04       		.uleb128 0x4
 2043 01ec E8030000 		.4byte	.LASF38
 2044 01f0 07       		.byte	0x7
 2045 01f1 2E       		.byte	0x2e
 2046 01f2 9A000000 		.4byte	0x9a
 2047 01f6 04       		.uleb128 0x4
 2048 01f7 94000000 		.4byte	.LASF39
 2049 01fb 08       		.byte	0x8
 2050 01fc 4C       		.byte	0x4c
 2051 01fd 9A000000 		.4byte	0x9a
 2052 0201 04       		.uleb128 0x4
 2053 0202 27040000 		.4byte	.LASF40
 2054 0206 08       		.byte	0x8
 2055 0207 51       		.byte	0x51
 2056 0208 0C020000 		.4byte	0x20c
 2057 020c 06       		.uleb128 0x6
 2058 020d 04       		.byte	0x4
 2059 020e 12020000 		.4byte	0x212
 2060 0212 0B       		.uleb128 0xb
 2061 0213 1D020000 		.4byte	0x21d
 2062 0217 0C       		.uleb128 0xc
 2063 0218 F6010000 		.4byte	0x1f6
 2064 021c 00       		.byte	0
 2065 021d 08       		.uleb128 0x8
 2066 021e 4B060000 		.4byte	.LASF41
 2067 0222 28       		.byte	0x28
 2068 0223 01       		.byte	0x1
 2069 0224 44       		.byte	0x44
 2070 0225 72020000 		.4byte	0x272
 2071 0229 09       		.uleb128 0x9
 2072 022a C5000000 		.4byte	.LASF42
 2073 022e 01       		.byte	0x1
 2074 022f 46       		.byte	0x46
 2075 0230 A3000000 		.4byte	0xa3
 2076 0234 00       		.byte	0
 2077 0235 09       		.uleb128 0x9
 2078 0236 F9000000 		.4byte	.LASF43
 2079 023a 01       		.byte	0x1
 2080 023b 47       		.byte	0x47
 2081 023c 4D010000 		.4byte	0x14d
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 58


 2082 0240 04       		.byte	0x4
 2083 0241 09       		.uleb128 0x9
 2084 0242 92030000 		.4byte	.LASF44
 2085 0246 01       		.byte	0x1
 2086 0247 48       		.byte	0x48
 2087 0248 F3000000 		.4byte	0xf3
 2088 024c 18       		.byte	0x18
 2089 024d 09       		.uleb128 0x9
 2090 024e 98060000 		.4byte	.LASF45
 2091 0252 01       		.byte	0x1
 2092 0253 49       		.byte	0x49
 2093 0254 E8000000 		.4byte	0xe8
 2094 0258 1C       		.byte	0x1c
 2095 0259 09       		.uleb128 0x9
 2096 025a 85070000 		.4byte	.LASF46
 2097 025e 01       		.byte	0x1
 2098 025f 4A       		.byte	0x4a
 2099 0260 9A000000 		.4byte	0x9a
 2100 0264 20       		.byte	0x20
 2101 0265 09       		.uleb128 0x9
 2102 0266 79030000 		.4byte	.LASF47
 2103 026a 01       		.byte	0x1
 2104 026b 4B       		.byte	0x4b
 2105 026c 01020000 		.4byte	0x201
 2106 0270 24       		.byte	0x24
 2107 0271 00       		.byte	0
 2108 0272 04       		.uleb128 0x4
 2109 0273 AD010000 		.4byte	.LASF48
 2110 0277 01       		.byte	0x1
 2111 0278 53       		.byte	0x53
 2112 0279 1D020000 		.4byte	0x21d
 2113 027d 04       		.uleb128 0x4
 2114 027e AE030000 		.4byte	.LASF49
 2115 0282 01       		.byte	0x1
 2116 0283 57       		.byte	0x57
 2117 0284 72020000 		.4byte	0x272
 2118 0288 08       		.uleb128 0x8
 2119 0289 E7040000 		.4byte	.LASF50
 2120 028d 08       		.byte	0x8
 2121 028e 01       		.byte	0x1
 2122 028f 5E       		.byte	0x5e
 2123 0290 AD020000 		.4byte	0x2ad
 2124 0294 09       		.uleb128 0x9
 2125 0295 65060000 		.4byte	.LASF51
 2126 0299 01       		.byte	0x1
 2127 029a 60       		.byte	0x60
 2128 029b F3000000 		.4byte	0xf3
 2129 029f 00       		.byte	0
 2130 02a0 09       		.uleb128 0x9
 2131 02a1 43070000 		.4byte	.LASF52
 2132 02a5 01       		.byte	0x1
 2133 02a6 61       		.byte	0x61
 2134 02a7 AD020000 		.4byte	0x2ad
 2135 02ab 04       		.byte	0x4
 2136 02ac 00       		.byte	0
 2137 02ad 06       		.uleb128 0x6
 2138 02ae 04       		.byte	0x4
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 59


 2139 02af 7D020000 		.4byte	0x27d
 2140 02b3 04       		.uleb128 0x4
 2141 02b4 00000000 		.4byte	.LASF53
 2142 02b8 01       		.byte	0x1
 2143 02b9 62       		.byte	0x62
 2144 02ba 88020000 		.4byte	0x288
 2145 02be 0D       		.uleb128 0xd
 2146 02bf 08       		.byte	0x8
 2147 02c0 01       		.byte	0x1
 2148 02c1 71       		.byte	0x71
 2149 02c2 D2020000 		.4byte	0x2d2
 2150 02c6 0E       		.uleb128 0xe
 2151 02c7 9C010000 		.4byte	.LASF109
 2152 02cb 01       		.byte	0x1
 2153 02cc 73       		.byte	0x73
 2154 02cd B3020000 		.4byte	0x2b3
 2155 02d1 00       		.byte	0
 2156 02d2 08       		.uleb128 0x8
 2157 02d3 D8060000 		.4byte	.LASF54
 2158 02d7 0C       		.byte	0xc
 2159 02d8 01       		.byte	0x1
 2160 02d9 6E       		.byte	0x6e
 2161 02da F5020000 		.4byte	0x2f5
 2162 02de 09       		.uleb128 0x9
 2163 02df 30060000 		.4byte	.LASF55
 2164 02e3 01       		.byte	0x1
 2165 02e4 70       		.byte	0x70
 2166 02e5 DD000000 		.4byte	0xdd
 2167 02e9 00       		.byte	0
 2168 02ea 0F       		.uleb128 0xf
 2169 02eb 7500     		.ascii	"u\000"
 2170 02ed 01       		.byte	0x1
 2171 02ee 7A       		.byte	0x7a
 2172 02ef BE020000 		.4byte	0x2be
 2173 02f3 04       		.byte	0x4
 2174 02f4 00       		.byte	0
 2175 02f5 04       		.uleb128 0x4
 2176 02f6 1C050000 		.4byte	.LASF56
 2177 02fa 01       		.byte	0x1
 2178 02fb 7B       		.byte	0x7b
 2179 02fc D2020000 		.4byte	0x2d2
 2180 0300 10       		.uleb128 0x10
 2181 0301 FD060000 		.4byte	.LASF110
 2182 0305 02       		.byte	0x2
 2183 0306 98       		.byte	0x98
 2184 0307 03       		.byte	0x3
 2185 0308 18030000 		.4byte	0x318
 2186 030c 11       		.uleb128 0x11
 2187 030d 8F070000 		.4byte	.LASF111
 2188 0311 02       		.byte	0x2
 2189 0312 9A       		.byte	0x9a
 2190 0313 C4000000 		.4byte	0xc4
 2191 0317 00       		.byte	0
 2192 0318 12       		.uleb128 0x12
 2193 0319 AB020000 		.4byte	.LASF57
 2194 031d 01       		.byte	0x1
 2195 031e DF       		.byte	0xdf
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 60


 2196 031f DD000000 		.4byte	0xdd
 2197 0323 00000000 		.4byte	.LFB136
 2198 0327 60000000 		.4byte	.LFE136-.LFB136
 2199 032b 01       		.uleb128 0x1
 2200 032c 9C       		.byte	0x9c
 2201 032d 63030000 		.4byte	0x363
 2202 0331 13       		.uleb128 0x13
 2203 0332 87060000 		.4byte	.LASF59
 2204 0336 01       		.byte	0x1
 2205 0337 E1       		.byte	0xe1
 2206 0338 DD000000 		.4byte	0xdd
 2207 033c 02       		.uleb128 0x2
 2208 033d 91       		.byte	0x91
 2209 033e 74       		.sleb128 -12
 2210 033f 14       		.uleb128 0x14
 2211 0340 00030000 		.4byte	0x300
 2212 0344 32000000 		.4byte	.LBB30
 2213 0348 12000000 		.4byte	.LBE30-.LBB30
 2214 034c 01       		.byte	0x1
 2215 034d 0F01     		.2byte	0x10f
 2216 034f 15       		.uleb128 0x15
 2217 0350 32000000 		.4byte	.LBB31
 2218 0354 12000000 		.4byte	.LBE31-.LBB31
 2219 0358 16       		.uleb128 0x16
 2220 0359 0C030000 		.4byte	0x30c
 2221 035d 02       		.uleb128 0x2
 2222 035e 91       		.byte	0x91
 2223 035f 70       		.sleb128 -16
 2224 0360 00       		.byte	0
 2225 0361 00       		.byte	0
 2226 0362 00       		.byte	0
 2227 0363 17       		.uleb128 0x17
 2228 0364 BC010000 		.4byte	.LASF58
 2229 0368 01       		.byte	0x1
 2230 0369 1601     		.2byte	0x116
 2231 036b F6010000 		.4byte	0x1f6
 2232 036f 00000000 		.4byte	.LFB137
 2233 0373 3A000000 		.4byte	.LFE137-.LFB137
 2234 0377 01       		.uleb128 0x1
 2235 0378 9C       		.byte	0x9c
 2236 0379 D8030000 		.4byte	0x3d8
 2237 037d 18       		.uleb128 0x18
 2238 037e C5000000 		.4byte	.LASF42
 2239 0382 01       		.byte	0x1
 2240 0383 1601     		.2byte	0x116
 2241 0385 E6010000 		.4byte	0x1e6
 2242 0389 02       		.uleb128 0x2
 2243 038a 91       		.byte	0x91
 2244 038b 6C       		.sleb128 -20
 2245 038c 18       		.uleb128 0x18
 2246 038d 92030000 		.4byte	.LASF44
 2247 0391 01       		.byte	0x1
 2248 0392 1701     		.2byte	0x117
 2249 0394 D8030000 		.4byte	0x3d8
 2250 0398 02       		.uleb128 0x2
 2251 0399 91       		.byte	0x91
 2252 039a 68       		.sleb128 -24
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 61


 2253 039b 18       		.uleb128 0x18
 2254 039c 98060000 		.4byte	.LASF45
 2255 03a0 01       		.byte	0x1
 2256 03a1 1801     		.2byte	0x118
 2257 03a3 DD030000 		.4byte	0x3dd
 2258 03a7 02       		.uleb128 0x2
 2259 03a8 91       		.byte	0x91
 2260 03a9 64       		.sleb128 -28
 2261 03aa 18       		.uleb128 0x18
 2262 03ab 85070000 		.4byte	.LASF46
 2263 03af 01       		.byte	0x1
 2264 03b0 1901     		.2byte	0x119
 2265 03b2 E2030000 		.4byte	0x3e2
 2266 03b6 02       		.uleb128 0x2
 2267 03b7 91       		.byte	0x91
 2268 03b8 60       		.sleb128 -32
 2269 03b9 18       		.uleb128 0x18
 2270 03ba 79030000 		.4byte	.LASF47
 2271 03be 01       		.byte	0x1
 2272 03bf 1A01     		.2byte	0x11a
 2273 03c1 01020000 		.4byte	0x201
 2274 03c5 02       		.uleb128 0x2
 2275 03c6 91       		.byte	0x91
 2276 03c7 00       		.sleb128 0
 2277 03c8 19       		.uleb128 0x19
 2278 03c9 E6010000 		.4byte	.LASF60
 2279 03cd 01       		.byte	0x1
 2280 03ce 1C01     		.2byte	0x11c
 2281 03d0 AD020000 		.4byte	0x2ad
 2282 03d4 02       		.uleb128 0x2
 2283 03d5 91       		.byte	0x91
 2284 03d6 74       		.sleb128 -12
 2285 03d7 00       		.byte	0
 2286 03d8 07       		.uleb128 0x7
 2287 03d9 F3000000 		.4byte	0xf3
 2288 03dd 07       		.uleb128 0x7
 2289 03de E8000000 		.4byte	0xe8
 2290 03e2 07       		.uleb128 0x7
 2291 03e3 9A000000 		.4byte	0x9a
 2292 03e7 1A       		.uleb128 0x1a
 2293 03e8 D0010000 		.4byte	.LASF72
 2294 03ec 01       		.byte	0x1
 2295 03ed 6001     		.2byte	0x160
 2296 03ef 00000000 		.4byte	.LFB138
 2297 03f3 62000000 		.4byte	.LFE138-.LFB138
 2298 03f7 01       		.uleb128 0x1
 2299 03f8 9C       		.byte	0x9c
 2300 03f9 7B040000 		.4byte	0x47b
 2301 03fd 18       		.uleb128 0x18
 2302 03fe C5000000 		.4byte	.LASF42
 2303 0402 01       		.byte	0x1
 2304 0403 6001     		.2byte	0x160
 2305 0405 E6010000 		.4byte	0x1e6
 2306 0409 02       		.uleb128 0x2
 2307 040a 91       		.byte	0x91
 2308 040b 6C       		.sleb128 -20
 2309 040c 18       		.uleb128 0x18
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 62


 2310 040d 92030000 		.4byte	.LASF44
 2311 0411 01       		.byte	0x1
 2312 0412 6101     		.2byte	0x161
 2313 0414 D8030000 		.4byte	0x3d8
 2314 0418 02       		.uleb128 0x2
 2315 0419 91       		.byte	0x91
 2316 041a 68       		.sleb128 -24
 2317 041b 18       		.uleb128 0x18
 2318 041c 98060000 		.4byte	.LASF45
 2319 0420 01       		.byte	0x1
 2320 0421 6201     		.2byte	0x162
 2321 0423 DD030000 		.4byte	0x3dd
 2322 0427 02       		.uleb128 0x2
 2323 0428 91       		.byte	0x91
 2324 0429 64       		.sleb128 -28
 2325 042a 18       		.uleb128 0x18
 2326 042b 85070000 		.4byte	.LASF46
 2327 042f 01       		.byte	0x1
 2328 0430 6301     		.2byte	0x163
 2329 0432 E2030000 		.4byte	0x3e2
 2330 0436 02       		.uleb128 0x2
 2331 0437 91       		.byte	0x91
 2332 0438 60       		.sleb128 -32
 2333 0439 18       		.uleb128 0x18
 2334 043a 79030000 		.4byte	.LASF47
 2335 043e 01       		.byte	0x1
 2336 043f 6401     		.2byte	0x164
 2337 0441 01020000 		.4byte	0x201
 2338 0445 02       		.uleb128 0x2
 2339 0446 91       		.byte	0x91
 2340 0447 00       		.sleb128 0
 2341 0448 18       		.uleb128 0x18
 2342 0449 E6010000 		.4byte	.LASF60
 2343 044d 01       		.byte	0x1
 2344 044e 6501     		.2byte	0x165
 2345 0450 AD020000 		.4byte	0x2ad
 2346 0454 02       		.uleb128 0x2
 2347 0455 91       		.byte	0x91
 2348 0456 04       		.sleb128 4
 2349 0457 14       		.uleb128 0x14
 2350 0458 00030000 		.4byte	0x300
 2351 045c 14000000 		.4byte	.LBB32
 2352 0460 12000000 		.4byte	.LBE32-.LBB32
 2353 0464 01       		.byte	0x1
 2354 0465 6801     		.2byte	0x168
 2355 0467 15       		.uleb128 0x15
 2356 0468 14000000 		.4byte	.LBB33
 2357 046c 12000000 		.4byte	.LBE33-.LBB33
 2358 0470 16       		.uleb128 0x16
 2359 0471 0C030000 		.4byte	0x30c
 2360 0475 02       		.uleb128 0x2
 2361 0476 91       		.byte	0x91
 2362 0477 74       		.sleb128 -12
 2363 0478 00       		.byte	0
 2364 0479 00       		.byte	0
 2365 047a 00       		.byte	0
 2366 047b 17       		.uleb128 0x17
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 63


 2367 047c AB040000 		.4byte	.LASF61
 2368 0480 01       		.byte	0x1
 2369 0481 7D01     		.2byte	0x17d
 2370 0483 DD000000 		.4byte	0xdd
 2371 0487 00000000 		.4byte	.LFB139
 2372 048b 98000000 		.4byte	.LFE139-.LFB139
 2373 048f 01       		.uleb128 0x1
 2374 0490 9C       		.byte	0x9c
 2375 0491 22050000 		.4byte	0x522
 2376 0495 18       		.uleb128 0x18
 2377 0496 3F040000 		.4byte	.LASF62
 2378 049a 01       		.byte	0x1
 2379 049b 7D01     		.2byte	0x17d
 2380 049d F6010000 		.4byte	0x1f6
 2381 04a1 02       		.uleb128 0x2
 2382 04a2 91       		.byte	0x91
 2383 04a3 5C       		.sleb128 -36
 2384 04a4 18       		.uleb128 0x18
 2385 04a5 89000000 		.4byte	.LASF63
 2386 04a9 01       		.byte	0x1
 2387 04aa 7D01     		.2byte	0x17d
 2388 04ac 22050000 		.4byte	0x522
 2389 04b0 02       		.uleb128 0x2
 2390 04b1 91       		.byte	0x91
 2391 04b2 58       		.sleb128 -40
 2392 04b3 18       		.uleb128 0x18
 2393 04b4 43050000 		.4byte	.LASF64
 2394 04b8 01       		.byte	0x1
 2395 04b9 7D01     		.2byte	0x17d
 2396 04bb D8030000 		.4byte	0x3d8
 2397 04bf 02       		.uleb128 0x2
 2398 04c0 91       		.byte	0x91
 2399 04c1 54       		.sleb128 -44
 2400 04c2 18       		.uleb128 0x18
 2401 04c3 A5060000 		.4byte	.LASF65
 2402 04c7 01       		.byte	0x1
 2403 04c8 7D01     		.2byte	0x17d
 2404 04ca 2D050000 		.4byte	0x52d
 2405 04ce 02       		.uleb128 0x2
 2406 04cf 91       		.byte	0x91
 2407 04d0 50       		.sleb128 -48
 2408 04d1 18       		.uleb128 0x18
 2409 04d2 85020000 		.4byte	.LASF66
 2410 04d6 01       		.byte	0x1
 2411 04d7 7D01     		.2byte	0x17d
 2412 04d9 D8030000 		.4byte	0x3d8
 2413 04dd 02       		.uleb128 0x2
 2414 04de 91       		.byte	0x91
 2415 04df 00       		.sleb128 0
 2416 04e0 19       		.uleb128 0x19
 2417 04e1 87060000 		.4byte	.LASF59
 2418 04e5 01       		.byte	0x1
 2419 04e6 7F01     		.2byte	0x17f
 2420 04e8 DD000000 		.4byte	0xdd
 2421 04ec 02       		.uleb128 0x2
 2422 04ed 91       		.byte	0x91
 2423 04ee 74       		.sleb128 -12
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 64


 2424 04ef 19       		.uleb128 0x19
 2425 04f0 04020000 		.4byte	.LASF67
 2426 04f4 01       		.byte	0x1
 2427 04f5 8001     		.2byte	0x180
 2428 04f7 F5020000 		.4byte	0x2f5
 2429 04fb 02       		.uleb128 0x2
 2430 04fc 91       		.byte	0x91
 2431 04fd 64       		.sleb128 -28
 2432 04fe 14       		.uleb128 0x14
 2433 04ff 00030000 		.4byte	0x300
 2434 0503 18000000 		.4byte	.LBB34
 2435 0507 12000000 		.4byte	.LBE34-.LBB34
 2436 050b 01       		.byte	0x1
 2437 050c 8201     		.2byte	0x182
 2438 050e 15       		.uleb128 0x15
 2439 050f 18000000 		.4byte	.LBB35
 2440 0513 12000000 		.4byte	.LBE35-.LBB35
 2441 0517 16       		.uleb128 0x16
 2442 0518 0C030000 		.4byte	0x30c
 2443 051c 02       		.uleb128 0x2
 2444 051d 91       		.byte	0x91
 2445 051e 70       		.sleb128 -16
 2446 051f 00       		.byte	0
 2447 0520 00       		.byte	0
 2448 0521 00       		.byte	0
 2449 0522 07       		.uleb128 0x7
 2450 0523 DD000000 		.4byte	0xdd
 2451 0527 06       		.uleb128 0x6
 2452 0528 04       		.byte	0x4
 2453 0529 DD000000 		.4byte	0xdd
 2454 052d 07       		.uleb128 0x7
 2455 052e 27050000 		.4byte	0x527
 2456 0532 1B       		.uleb128 0x1b
 2457 0533 0F070000 		.4byte	.LASF68
 2458 0537 01       		.byte	0x1
 2459 0538 A801     		.2byte	0x1a8
 2460 053a DB010000 		.4byte	0x1db
 2461 053e 00000000 		.4byte	.LFB140
 2462 0542 38000000 		.4byte	.LFE140-.LFB140
 2463 0546 01       		.uleb128 0x1
 2464 0547 9C       		.byte	0x9c
 2465 0548 70050000 		.4byte	0x570
 2466 054c 14       		.uleb128 0x14
 2467 054d 00030000 		.4byte	0x300
 2468 0551 0E000000 		.4byte	.LBB36
 2469 0555 12000000 		.4byte	.LBE36-.LBB36
 2470 0559 01       		.byte	0x1
 2471 055a AC01     		.2byte	0x1ac
 2472 055c 15       		.uleb128 0x15
 2473 055d 0E000000 		.4byte	.LBB37
 2474 0561 12000000 		.4byte	.LBE37-.LBB37
 2475 0565 16       		.uleb128 0x16
 2476 0566 0C030000 		.4byte	0x30c
 2477 056a 02       		.uleb128 0x2
 2478 056b 91       		.byte	0x91
 2479 056c 74       		.sleb128 -12
 2480 056d 00       		.byte	0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 65


 2481 056e 00       		.byte	0
 2482 056f 00       		.byte	0
 2483 0570 1B       		.uleb128 0x1b
 2484 0571 ED060000 		.4byte	.LASF69
 2485 0575 01       		.byte	0x1
 2486 0576 B101     		.2byte	0x1b1
 2487 0578 F3000000 		.4byte	0xf3
 2488 057c 00000000 		.4byte	.LFB141
 2489 0580 36000000 		.4byte	.LFE141-.LFB141
 2490 0584 01       		.uleb128 0x1
 2491 0585 9C       		.byte	0x9c
 2492 0586 CC050000 		.4byte	0x5cc
 2493 058a 18       		.uleb128 0x18
 2494 058b 3F040000 		.4byte	.LASF62
 2495 058f 01       		.byte	0x1
 2496 0590 B101     		.2byte	0x1b1
 2497 0592 F6010000 		.4byte	0x1f6
 2498 0596 02       		.uleb128 0x2
 2499 0597 91       		.byte	0x91
 2500 0598 6C       		.sleb128 -20
 2501 0599 19       		.uleb128 0x19
 2502 059a 43070000 		.4byte	.LASF52
 2503 059e 01       		.byte	0x1
 2504 059f B301     		.2byte	0x1b3
 2505 05a1 AD020000 		.4byte	0x2ad
 2506 05a5 02       		.uleb128 0x2
 2507 05a6 91       		.byte	0x91
 2508 05a7 74       		.sleb128 -12
 2509 05a8 14       		.uleb128 0x14
 2510 05a9 00030000 		.4byte	0x300
 2511 05ad 12000000 		.4byte	.LBB38
 2512 05b1 12000000 		.4byte	.LBE38-.LBB38
 2513 05b5 01       		.byte	0x1
 2514 05b6 B501     		.2byte	0x1b5
 2515 05b8 15       		.uleb128 0x15
 2516 05b9 12000000 		.4byte	.LBB39
 2517 05bd 12000000 		.4byte	.LBE39-.LBB39
 2518 05c1 16       		.uleb128 0x16
 2519 05c2 0C030000 		.4byte	0x30c
 2520 05c6 02       		.uleb128 0x2
 2521 05c7 91       		.byte	0x91
 2522 05c8 70       		.sleb128 -16
 2523 05c9 00       		.byte	0
 2524 05ca 00       		.byte	0
 2525 05cb 00       		.byte	0
 2526 05cc 1B       		.uleb128 0x1b
 2527 05cd 73060000 		.4byte	.LASF70
 2528 05d1 01       		.byte	0x1
 2529 05d2 BA01     		.2byte	0x1ba
 2530 05d4 F3000000 		.4byte	0xf3
 2531 05d8 00000000 		.4byte	.LFB142
 2532 05dc 3A000000 		.4byte	.LFE142-.LFB142
 2533 05e0 01       		.uleb128 0x1
 2534 05e1 9C       		.byte	0x9c
 2535 05e2 37060000 		.4byte	0x637
 2536 05e6 18       		.uleb128 0x18
 2537 05e7 3F040000 		.4byte	.LASF62
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 66


 2538 05eb 01       		.byte	0x1
 2539 05ec BA01     		.2byte	0x1ba
 2540 05ee F6010000 		.4byte	0x1f6
 2541 05f2 02       		.uleb128 0x2
 2542 05f3 91       		.byte	0x91
 2543 05f4 64       		.sleb128 -28
 2544 05f5 19       		.uleb128 0x19
 2545 05f6 43070000 		.4byte	.LASF52
 2546 05fa 01       		.byte	0x1
 2547 05fb BC01     		.2byte	0x1bc
 2548 05fd AD020000 		.4byte	0x2ad
 2549 0601 02       		.uleb128 0x2
 2550 0602 91       		.byte	0x91
 2551 0603 74       		.sleb128 -12
 2552 0604 19       		.uleb128 0x19
 2553 0605 87060000 		.4byte	.LASF59
 2554 0609 01       		.byte	0x1
 2555 060a BD01     		.2byte	0x1bd
 2556 060c F3000000 		.4byte	0xf3
 2557 0610 02       		.uleb128 0x2
 2558 0611 91       		.byte	0x91
 2559 0612 70       		.sleb128 -16
 2560 0613 14       		.uleb128 0x14
 2561 0614 00030000 		.4byte	0x300
 2562 0618 12000000 		.4byte	.LBB40
 2563 061c 12000000 		.4byte	.LBE40-.LBB40
 2564 0620 01       		.byte	0x1
 2565 0621 BF01     		.2byte	0x1bf
 2566 0623 15       		.uleb128 0x15
 2567 0624 12000000 		.4byte	.LBB41
 2568 0628 12000000 		.4byte	.LBE41-.LBB41
 2569 062c 16       		.uleb128 0x16
 2570 062d 0C030000 		.4byte	0x30c
 2571 0631 02       		.uleb128 0x2
 2572 0632 91       		.byte	0x91
 2573 0633 6C       		.sleb128 -20
 2574 0634 00       		.byte	0
 2575 0635 00       		.byte	0
 2576 0636 00       		.byte	0
 2577 0637 1B       		.uleb128 0x1b
 2578 0638 7C040000 		.4byte	.LASF71
 2579 063c 01       		.byte	0x1
 2580 063d C501     		.2byte	0x1c5
 2581 063f A3000000 		.4byte	0xa3
 2582 0643 00000000 		.4byte	.LFB143
 2583 0647 36000000 		.4byte	.LFE143-.LFB143
 2584 064b 01       		.uleb128 0x1
 2585 064c 9C       		.byte	0x9c
 2586 064d 93060000 		.4byte	0x693
 2587 0651 18       		.uleb128 0x18
 2588 0652 3F040000 		.4byte	.LASF62
 2589 0656 01       		.byte	0x1
 2590 0657 C501     		.2byte	0x1c5
 2591 0659 F6010000 		.4byte	0x1f6
 2592 065d 02       		.uleb128 0x2
 2593 065e 91       		.byte	0x91
 2594 065f 6C       		.sleb128 -20
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 67


 2595 0660 19       		.uleb128 0x19
 2596 0661 43070000 		.4byte	.LASF52
 2597 0665 01       		.byte	0x1
 2598 0666 C701     		.2byte	0x1c7
 2599 0668 AD020000 		.4byte	0x2ad
 2600 066c 02       		.uleb128 0x2
 2601 066d 91       		.byte	0x91
 2602 066e 74       		.sleb128 -12
 2603 066f 14       		.uleb128 0x14
 2604 0670 00030000 		.4byte	0x300
 2605 0674 12000000 		.4byte	.LBB42
 2606 0678 12000000 		.4byte	.LBE42-.LBB42
 2607 067c 01       		.byte	0x1
 2608 067d C901     		.2byte	0x1c9
 2609 067f 15       		.uleb128 0x15
 2610 0680 12000000 		.4byte	.LBB43
 2611 0684 12000000 		.4byte	.LBE43-.LBB43
 2612 0688 16       		.uleb128 0x16
 2613 0689 0C030000 		.4byte	0x30c
 2614 068d 02       		.uleb128 0x2
 2615 068e 91       		.byte	0x91
 2616 068f 70       		.sleb128 -16
 2617 0690 00       		.byte	0
 2618 0691 00       		.byte	0
 2619 0692 00       		.byte	0
 2620 0693 1A       		.uleb128 0x1a
 2621 0694 6A010000 		.4byte	.LASF73
 2622 0698 01       		.byte	0x1
 2623 0699 CE01     		.2byte	0x1ce
 2624 069b 00000000 		.4byte	.LFB144
 2625 069f 80000000 		.4byte	.LFE144-.LFB144
 2626 06a3 01       		.uleb128 0x1
 2627 06a4 9C       		.byte	0x9c
 2628 06a5 09070000 		.4byte	0x709
 2629 06a9 18       		.uleb128 0x18
 2630 06aa B5000000 		.4byte	.LASF74
 2631 06ae 01       		.byte	0x1
 2632 06af CE01     		.2byte	0x1ce
 2633 06b1 D8030000 		.4byte	0x3d8
 2634 06b5 02       		.uleb128 0x2
 2635 06b6 91       		.byte	0x91
 2636 06b7 64       		.sleb128 -28
 2637 06b8 18       		.uleb128 0x18
 2638 06b9 FF050000 		.4byte	.LASF75
 2639 06bd 01       		.byte	0x1
 2640 06be CE01     		.2byte	0x1ce
 2641 06c0 D8030000 		.4byte	0x3d8
 2642 06c4 02       		.uleb128 0x2
 2643 06c5 91       		.byte	0x91
 2644 06c6 60       		.sleb128 -32
 2645 06c7 19       		.uleb128 0x19
 2646 06c8 35000000 		.4byte	.LASF76
 2647 06cc 01       		.byte	0x1
 2648 06cd D001     		.2byte	0x1d0
 2649 06cf DD000000 		.4byte	0xdd
 2650 06d3 02       		.uleb128 0x2
 2651 06d4 91       		.byte	0x91
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 68


 2652 06d5 70       		.sleb128 -16
 2653 06d6 19       		.uleb128 0x19
 2654 06d7 43070000 		.4byte	.LASF52
 2655 06db 01       		.byte	0x1
 2656 06dc D101     		.2byte	0x1d1
 2657 06de 09070000 		.4byte	0x709
 2658 06e2 02       		.uleb128 0x2
 2659 06e3 91       		.byte	0x91
 2660 06e4 74       		.sleb128 -12
 2661 06e5 14       		.uleb128 0x14
 2662 06e6 00030000 		.4byte	0x300
 2663 06ea 56000000 		.4byte	.LBB44
 2664 06ee 12000000 		.4byte	.LBE44-.LBB44
 2665 06f2 01       		.byte	0x1
 2666 06f3 E401     		.2byte	0x1e4
 2667 06f5 15       		.uleb128 0x15
 2668 06f6 56000000 		.4byte	.LBB45
 2669 06fa 12000000 		.4byte	.LBE45-.LBB45
 2670 06fe 16       		.uleb128 0x16
 2671 06ff 0C030000 		.4byte	0x30c
 2672 0703 02       		.uleb128 0x2
 2673 0704 91       		.byte	0x91
 2674 0705 6C       		.sleb128 -20
 2675 0706 00       		.byte	0
 2676 0707 00       		.byte	0
 2677 0708 00       		.byte	0
 2678 0709 07       		.uleb128 0x7
 2679 070a AD020000 		.4byte	0x2ad
 2680 070e 1A       		.uleb128 0x1a
 2681 070f 9A050000 		.4byte	.LASF77
 2682 0713 01       		.byte	0x1
 2683 0714 F601     		.2byte	0x1f6
 2684 0716 00000000 		.4byte	.LFB145
 2685 071a 24000000 		.4byte	.LFE145-.LFB145
 2686 071e 01       		.uleb128 0x1
 2687 071f 9C       		.byte	0x9c
 2688 0720 52070000 		.4byte	0x752
 2689 0724 18       		.uleb128 0x18
 2690 0725 FA040000 		.4byte	.LASF78
 2691 0729 01       		.byte	0x1
 2692 072a F601     		.2byte	0x1f6
 2693 072c 9A000000 		.4byte	0x9a
 2694 0730 02       		.uleb128 0x2
 2695 0731 91       		.byte	0x91
 2696 0732 6C       		.sleb128 -20
 2697 0733 19       		.uleb128 0x19
 2698 0734 B5000000 		.4byte	.LASF74
 2699 0738 01       		.byte	0x1
 2700 0739 F801     		.2byte	0x1f8
 2701 073b F3000000 		.4byte	0xf3
 2702 073f 02       		.uleb128 0x2
 2703 0740 91       		.byte	0x91
 2704 0741 74       		.sleb128 -12
 2705 0742 19       		.uleb128 0x19
 2706 0743 66050000 		.4byte	.LASF79
 2707 0747 01       		.byte	0x1
 2708 0748 F901     		.2byte	0x1f9
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 69


 2709 074a DD000000 		.4byte	0xdd
 2710 074e 02       		.uleb128 0x2
 2711 074f 91       		.byte	0x91
 2712 0750 70       		.sleb128 -16
 2713 0751 00       		.byte	0
 2714 0752 1A       		.uleb128 0x1a
 2715 0753 81010000 		.4byte	.LASF80
 2716 0757 01       		.byte	0x1
 2717 0758 1A02     		.2byte	0x21a
 2718 075a 00000000 		.4byte	.LFB146
 2719 075e 9C000000 		.4byte	.LFE146-.LFB146
 2720 0762 01       		.uleb128 0x1
 2721 0763 9C       		.byte	0x9c
 2722 0764 A5070000 		.4byte	0x7a5
 2723 0768 18       		.uleb128 0x18
 2724 0769 B5000000 		.4byte	.LASF74
 2725 076d 01       		.byte	0x1
 2726 076e 1A02     		.2byte	0x21a
 2727 0770 D8030000 		.4byte	0x3d8
 2728 0774 02       		.uleb128 0x2
 2729 0775 91       		.byte	0x91
 2730 0776 6C       		.sleb128 -20
 2731 0777 18       		.uleb128 0x18
 2732 0778 66050000 		.4byte	.LASF79
 2733 077c 01       		.byte	0x1
 2734 077d 1A02     		.2byte	0x21a
 2735 077f DD000000 		.4byte	0xdd
 2736 0783 02       		.uleb128 0x2
 2737 0784 91       		.byte	0x91
 2738 0785 68       		.sleb128 -24
 2739 0786 19       		.uleb128 0x19
 2740 0787 FF050000 		.4byte	.LASF75
 2741 078b 01       		.byte	0x1
 2742 078c 1C02     		.2byte	0x21c
 2743 078e F3000000 		.4byte	0xf3
 2744 0792 02       		.uleb128 0x2
 2745 0793 91       		.byte	0x91
 2746 0794 74       		.sleb128 -12
 2747 0795 19       		.uleb128 0x19
 2748 0796 14010000 		.4byte	.LASF81
 2749 079a 01       		.byte	0x1
 2750 079b 1D02     		.2byte	0x21d
 2751 079d DD000000 		.4byte	0xdd
 2752 07a1 02       		.uleb128 0x2
 2753 07a2 91       		.byte	0x91
 2754 07a3 70       		.sleb128 -16
 2755 07a4 00       		.byte	0
 2756 07a5 1C       		.uleb128 0x1c
 2757 07a6 07050000 		.4byte	.LASF83
 2758 07aa 01       		.byte	0x1
 2759 07ab 5602     		.2byte	0x256
 2760 07ad F3000000 		.4byte	0xf3
 2761 07b1 00000000 		.4byte	.LFB147
 2762 07b5 48000000 		.4byte	.LFE147-.LFB147
 2763 07b9 01       		.uleb128 0x1
 2764 07ba 9C       		.byte	0x9c
 2765 07bb DE070000 		.4byte	0x7de
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 70


 2766 07bf 18       		.uleb128 0x18
 2767 07c0 21060000 		.4byte	.LASF82
 2768 07c4 01       		.byte	0x1
 2769 07c5 5602     		.2byte	0x256
 2770 07c7 2D050000 		.4byte	0x52d
 2771 07cb 02       		.uleb128 0x2
 2772 07cc 91       		.byte	0x91
 2773 07cd 6C       		.sleb128 -20
 2774 07ce 19       		.uleb128 0x19
 2775 07cf B5000000 		.4byte	.LASF74
 2776 07d3 01       		.byte	0x1
 2777 07d4 5802     		.2byte	0x258
 2778 07d6 F3000000 		.4byte	0xf3
 2779 07da 02       		.uleb128 0x2
 2780 07db 91       		.byte	0x91
 2781 07dc 74       		.sleb128 -12
 2782 07dd 00       		.byte	0
 2783 07de 1D       		.uleb128 0x1d
 2784 07df F6030000 		.4byte	.LASF84
 2785 07e3 01       		.byte	0x1
 2786 07e4 7002     		.2byte	0x270
 2787 07e6 F3000000 		.4byte	0xf3
 2788 07ea 00000000 		.4byte	.LFB148
 2789 07ee 40000000 		.4byte	.LFE148-.LFB148
 2790 07f2 01       		.uleb128 0x1
 2791 07f3 9C       		.byte	0x9c
 2792 07f4 29080000 		.4byte	0x829
 2793 07f8 18       		.uleb128 0x18
 2794 07f9 6C070000 		.4byte	.LASF85
 2795 07fd 01       		.byte	0x1
 2796 07fe 7002     		.2byte	0x270
 2797 0800 2D050000 		.4byte	0x52d
 2798 0804 02       		.uleb128 0x2
 2799 0805 91       		.byte	0x91
 2800 0806 6C       		.sleb128 -20
 2801 0807 19       		.uleb128 0x19
 2802 0808 FF050000 		.4byte	.LASF75
 2803 080c 01       		.byte	0x1
 2804 080d 7202     		.2byte	0x272
 2805 080f F3000000 		.4byte	0xf3
 2806 0813 02       		.uleb128 0x2
 2807 0814 91       		.byte	0x91
 2808 0815 74       		.sleb128 -12
 2809 0816 19       		.uleb128 0x19
 2810 0817 90050000 		.4byte	.LASF86
 2811 081b 01       		.byte	0x1
 2812 081c 7302     		.2byte	0x273
 2813 081e F3000000 		.4byte	0xf3
 2814 0822 05       		.uleb128 0x5
 2815 0823 03       		.byte	0x3
 2816 0824 38000000 		.4byte	xLastTime.12425
 2817 0828 00       		.byte	0
 2818 0829 1D       		.uleb128 0x1d
 2819 082a A7050000 		.4byte	.LASF87
 2820 082e 01       		.byte	0x1
 2821 082f 8702     		.2byte	0x287
 2822 0831 DD000000 		.4byte	0xdd
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 71


 2823 0835 00000000 		.4byte	.LFB149
 2824 0839 84000000 		.4byte	.LFE149-.LFB149
 2825 083d 01       		.uleb128 0x1
 2826 083e 9C       		.byte	0x9c
 2827 083f 8F080000 		.4byte	0x88f
 2828 0843 18       		.uleb128 0x18
 2829 0844 43070000 		.4byte	.LASF52
 2830 0848 01       		.byte	0x1
 2831 0849 8702     		.2byte	0x287
 2832 084b 09070000 		.4byte	0x709
 2833 084f 02       		.uleb128 0x2
 2834 0850 91       		.byte	0x91
 2835 0851 6C       		.sleb128 -20
 2836 0852 18       		.uleb128 0x18
 2837 0853 DC000000 		.4byte	.LASF88
 2838 0857 01       		.byte	0x1
 2839 0858 8702     		.2byte	0x287
 2840 085a D8030000 		.4byte	0x3d8
 2841 085e 02       		.uleb128 0x2
 2842 085f 91       		.byte	0x91
 2843 0860 68       		.sleb128 -24
 2844 0861 18       		.uleb128 0x18
 2845 0862 FF050000 		.4byte	.LASF75
 2846 0866 01       		.byte	0x1
 2847 0867 8702     		.2byte	0x287
 2848 0869 D8030000 		.4byte	0x3d8
 2849 086d 02       		.uleb128 0x2
 2850 086e 91       		.byte	0x91
 2851 086f 64       		.sleb128 -28
 2852 0870 18       		.uleb128 0x18
 2853 0871 4B070000 		.4byte	.LASF89
 2854 0875 01       		.byte	0x1
 2855 0876 8702     		.2byte	0x287
 2856 0878 D8030000 		.4byte	0x3d8
 2857 087c 02       		.uleb128 0x2
 2858 087d 91       		.byte	0x91
 2859 087e 60       		.sleb128 -32
 2860 087f 19       		.uleb128 0x19
 2861 0880 BF060000 		.4byte	.LASF90
 2862 0884 01       		.byte	0x1
 2863 0885 8902     		.2byte	0x289
 2864 0887 DD000000 		.4byte	0xdd
 2865 088b 02       		.uleb128 0x2
 2866 088c 91       		.byte	0x91
 2867 088d 74       		.sleb128 -12
 2868 088e 00       		.byte	0
 2869 088f 1A       		.uleb128 0x1a
 2870 0890 13020000 		.4byte	.LASF91
 2871 0894 01       		.byte	0x1
 2872 0895 B002     		.2byte	0x2b0
 2873 0897 00000000 		.4byte	.LFB150
 2874 089b 24010000 		.4byte	.LFE150-.LFB150
 2875 089f 01       		.uleb128 0x1
 2876 08a0 9C       		.byte	0x9c
 2877 08a1 3B090000 		.4byte	0x93b
 2878 08a5 19       		.uleb128 0x19
 2879 08a6 04020000 		.4byte	.LASF67
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 72


 2880 08aa 01       		.byte	0x1
 2881 08ab B202     		.2byte	0x2b2
 2882 08ad F5020000 		.4byte	0x2f5
 2883 08b1 02       		.uleb128 0x2
 2884 08b2 91       		.byte	0x91
 2885 08b3 58       		.sleb128 -40
 2886 08b4 19       		.uleb128 0x19
 2887 08b5 43070000 		.4byte	.LASF52
 2888 08b9 01       		.byte	0x1
 2889 08ba B302     		.2byte	0x2b3
 2890 08bc AD020000 		.4byte	0x2ad
 2891 08c0 02       		.uleb128 0x2
 2892 08c1 91       		.byte	0x91
 2893 08c2 74       		.sleb128 -12
 2894 08c3 19       		.uleb128 0x19
 2895 08c4 14010000 		.4byte	.LASF81
 2896 08c8 01       		.byte	0x1
 2897 08c9 B402     		.2byte	0x2b4
 2898 08cb DD000000 		.4byte	0xdd
 2899 08cf 02       		.uleb128 0x2
 2900 08d0 91       		.byte	0x91
 2901 08d1 54       		.sleb128 -44
 2902 08d2 19       		.uleb128 0x19
 2903 08d3 35000000 		.4byte	.LASF76
 2904 08d7 01       		.byte	0x1
 2905 08d8 B402     		.2byte	0x2b4
 2906 08da DD000000 		.4byte	0xdd
 2907 08de 02       		.uleb128 0x2
 2908 08df 91       		.byte	0x91
 2909 08e0 6C       		.sleb128 -20
 2910 08e1 19       		.uleb128 0x19
 2911 08e2 FF050000 		.4byte	.LASF75
 2912 08e6 01       		.byte	0x1
 2913 08e7 B502     		.2byte	0x2b5
 2914 08e9 F3000000 		.4byte	0xf3
 2915 08ed 02       		.uleb128 0x2
 2916 08ee 91       		.byte	0x91
 2917 08ef 70       		.sleb128 -16
 2918 08f0 1E       		.uleb128 0x1e
 2919 08f1 00030000 		.4byte	0x300
 2920 08f5 AA000000 		.4byte	.LBB46
 2921 08f9 12000000 		.4byte	.LBE46-.LBB46
 2922 08fd 01       		.byte	0x1
 2923 08fe FD02     		.2byte	0x2fd
 2924 0900 17090000 		.4byte	0x917
 2925 0904 15       		.uleb128 0x15
 2926 0905 AA000000 		.4byte	.LBB47
 2927 0909 12000000 		.4byte	.LBE47-.LBB47
 2928 090d 16       		.uleb128 0x16
 2929 090e 0C030000 		.4byte	0x30c
 2930 0912 02       		.uleb128 0x2
 2931 0913 91       		.byte	0x91
 2932 0914 64       		.sleb128 -28
 2933 0915 00       		.byte	0
 2934 0916 00       		.byte	0
 2935 0917 14       		.uleb128 0x14
 2936 0918 00030000 		.4byte	0x300
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 73


 2937 091c CC000000 		.4byte	.LBB48
 2938 0920 12000000 		.4byte	.LBE48-.LBB48
 2939 0924 01       		.byte	0x1
 2940 0925 1403     		.2byte	0x314
 2941 0927 15       		.uleb128 0x15
 2942 0928 CC000000 		.4byte	.LBB49
 2943 092c 12000000 		.4byte	.LBE49-.LBB49
 2944 0930 16       		.uleb128 0x16
 2945 0931 0C030000 		.4byte	0x30c
 2946 0935 02       		.uleb128 0x2
 2947 0936 91       		.byte	0x91
 2948 0937 68       		.sleb128 -24
 2949 0938 00       		.byte	0
 2950 0939 00       		.byte	0
 2951 093a 00       		.byte	0
 2952 093b 1A       		.uleb128 0x1a
 2953 093c 58070000 		.4byte	.LASF92
 2954 0940 01       		.byte	0x1
 2955 0941 4303     		.2byte	0x343
 2956 0943 00000000 		.4byte	.LFB151
 2957 0947 C0000000 		.4byte	.LFE151-.LFB151
 2958 094b 01       		.uleb128 0x1
 2959 094c 9C       		.byte	0x9c
 2960 094d C0090000 		.4byte	0x9c0
 2961 0951 19       		.uleb128 0x19
 2962 0952 B5000000 		.4byte	.LASF74
 2963 0956 01       		.byte	0x1
 2964 0957 4503     		.2byte	0x345
 2965 0959 F3000000 		.4byte	0xf3
 2966 095d 02       		.uleb128 0x2
 2967 095e 91       		.byte	0x91
 2968 095f 74       		.sleb128 -12
 2969 0960 19       		.uleb128 0x19
 2970 0961 08010000 		.4byte	.LASF93
 2971 0965 01       		.byte	0x1
 2972 0966 4503     		.2byte	0x345
 2973 0968 F3000000 		.4byte	0xf3
 2974 096c 02       		.uleb128 0x2
 2975 096d 91       		.byte	0x91
 2976 096e 6C       		.sleb128 -20
 2977 096f 19       		.uleb128 0x19
 2978 0970 C9010000 		.4byte	.LASF94
 2979 0974 01       		.byte	0x1
 2980 0975 4603     		.2byte	0x346
 2981 0977 C0090000 		.4byte	0x9c0
 2982 097b 02       		.uleb128 0x2
 2983 097c 91       		.byte	0x91
 2984 097d 64       		.sleb128 -28
 2985 097e 19       		.uleb128 0x19
 2986 097f 43070000 		.4byte	.LASF52
 2987 0983 01       		.byte	0x1
 2988 0984 4703     		.2byte	0x347
 2989 0986 AD020000 		.4byte	0x2ad
 2990 098a 02       		.uleb128 0x2
 2991 098b 91       		.byte	0x91
 2992 098c 70       		.sleb128 -16
 2993 098d 19       		.uleb128 0x19
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 74


 2994 098e 35000000 		.4byte	.LASF76
 2995 0992 01       		.byte	0x1
 2996 0993 4803     		.2byte	0x348
 2997 0995 DD000000 		.4byte	0xdd
 2998 0999 02       		.uleb128 0x2
 2999 099a 91       		.byte	0x91
 3000 099b 68       		.sleb128 -24
 3001 099c 14       		.uleb128 0x14
 3002 099d 00030000 		.4byte	0x300
 3003 09a1 7E000000 		.4byte	.LBB50
 3004 09a5 12000000 		.4byte	.LBE50-.LBB50
 3005 09a9 01       		.byte	0x1
 3006 09aa 6E03     		.2byte	0x36e
 3007 09ac 15       		.uleb128 0x15
 3008 09ad 7E000000 		.4byte	.LBB51
 3009 09b1 12000000 		.4byte	.LBE51-.LBB51
 3010 09b5 16       		.uleb128 0x16
 3011 09b6 0C030000 		.4byte	0x30c
 3012 09ba 02       		.uleb128 0x2
 3013 09bb 91       		.byte	0x91
 3014 09bc 60       		.sleb128 -32
 3015 09bd 00       		.byte	0
 3016 09be 00       		.byte	0
 3017 09bf 00       		.byte	0
 3018 09c0 06       		.uleb128 0x6
 3019 09c1 04       		.byte	0x4
 3020 09c2 D0010000 		.4byte	0x1d0
 3021 09c6 1F       		.uleb128 0x1f
 3022 09c7 CB030000 		.4byte	.LASF112
 3023 09cb 01       		.byte	0x1
 3024 09cc 7E03     		.2byte	0x37e
 3025 09ce 00000000 		.4byte	.LFB152
 3026 09d2 6C000000 		.4byte	.LFE152-.LFB152
 3027 09d6 01       		.uleb128 0x1
 3028 09d7 9C       		.byte	0x9c
 3029 09d8 17       		.uleb128 0x17
 3030 09d9 5C040000 		.4byte	.LASF95
 3031 09dd 01       		.byte	0x1
 3032 09de B103     		.2byte	0x3b1
 3033 09e0 DD000000 		.4byte	0xdd
 3034 09e4 00000000 		.4byte	.LFB153
 3035 09e8 48000000 		.4byte	.LFE153-.LFB153
 3036 09ec 01       		.uleb128 0x1
 3037 09ed 9C       		.byte	0x9c
 3038 09ee 430A0000 		.4byte	0xa43
 3039 09f2 18       		.uleb128 0x18
 3040 09f3 3F040000 		.4byte	.LASF62
 3041 09f7 01       		.byte	0x1
 3042 09f8 B103     		.2byte	0x3b1
 3043 09fa F6010000 		.4byte	0x1f6
 3044 09fe 02       		.uleb128 0x2
 3045 09ff 91       		.byte	0x91
 3046 0a00 64       		.sleb128 -28
 3047 0a01 19       		.uleb128 0x19
 3048 0a02 11000000 		.4byte	.LASF96
 3049 0a06 01       		.byte	0x1
 3050 0a07 B303     		.2byte	0x3b3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 75


 3051 0a09 DD000000 		.4byte	0xdd
 3052 0a0d 02       		.uleb128 0x2
 3053 0a0e 91       		.byte	0x91
 3054 0a0f 70       		.sleb128 -16
 3055 0a10 19       		.uleb128 0x19
 3056 0a11 43070000 		.4byte	.LASF52
 3057 0a15 01       		.byte	0x1
 3058 0a16 B403     		.2byte	0x3b4
 3059 0a18 AD020000 		.4byte	0x2ad
 3060 0a1c 02       		.uleb128 0x2
 3061 0a1d 91       		.byte	0x91
 3062 0a1e 74       		.sleb128 -12
 3063 0a1f 14       		.uleb128 0x14
 3064 0a20 00030000 		.4byte	0x300
 3065 0a24 12000000 		.4byte	.LBB52
 3066 0a28 12000000 		.4byte	.LBE52-.LBB52
 3067 0a2c 01       		.byte	0x1
 3068 0a2d B603     		.2byte	0x3b6
 3069 0a2f 15       		.uleb128 0x15
 3070 0a30 12000000 		.4byte	.LBB53
 3071 0a34 12000000 		.4byte	.LBE53-.LBB53
 3072 0a38 16       		.uleb128 0x16
 3073 0a39 0C030000 		.4byte	0x30c
 3074 0a3d 02       		.uleb128 0x2
 3075 0a3e 91       		.byte	0x91
 3076 0a3f 6C       		.sleb128 -20
 3077 0a40 00       		.byte	0
 3078 0a41 00       		.byte	0
 3079 0a42 00       		.byte	0
 3080 0a43 17       		.uleb128 0x17
 3081 0a44 58010000 		.4byte	.LASF97
 3082 0a48 01       		.byte	0x1
 3083 0a49 C603     		.2byte	0x3c6
 3084 0a4b 9A000000 		.4byte	0x9a
 3085 0a4f 00000000 		.4byte	.LFB154
 3086 0a53 3E000000 		.4byte	.LFE154-.LFB154
 3087 0a57 01       		.uleb128 0x1
 3088 0a58 9C       		.byte	0x9c
 3089 0a59 AE0A0000 		.4byte	0xaae
 3090 0a5d 18       		.uleb128 0x18
 3091 0a5e 3F040000 		.4byte	.LASF62
 3092 0a62 01       		.byte	0x1
 3093 0a63 C603     		.2byte	0x3c6
 3094 0a65 AE0A0000 		.4byte	0xaae
 3095 0a69 02       		.uleb128 0x2
 3096 0a6a 91       		.byte	0x91
 3097 0a6b 64       		.sleb128 -28
 3098 0a6c 19       		.uleb128 0x19
 3099 0a6d 43070000 		.4byte	.LASF52
 3100 0a71 01       		.byte	0x1
 3101 0a72 C803     		.2byte	0x3c8
 3102 0a74 09070000 		.4byte	0x709
 3103 0a78 02       		.uleb128 0x2
 3104 0a79 91       		.byte	0x91
 3105 0a7a 74       		.sleb128 -12
 3106 0a7b 19       		.uleb128 0x19
 3107 0a7c 07040000 		.4byte	.LASF98
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 76


 3108 0a80 01       		.byte	0x1
 3109 0a81 C903     		.2byte	0x3c9
 3110 0a83 9A000000 		.4byte	0x9a
 3111 0a87 02       		.uleb128 0x2
 3112 0a88 91       		.byte	0x91
 3113 0a89 70       		.sleb128 -16
 3114 0a8a 14       		.uleb128 0x14
 3115 0a8b 00030000 		.4byte	0x300
 3116 0a8f 12000000 		.4byte	.LBB54
 3117 0a93 12000000 		.4byte	.LBE54-.LBB54
 3118 0a97 01       		.byte	0x1
 3119 0a98 CB03     		.2byte	0x3cb
 3120 0a9a 15       		.uleb128 0x15
 3121 0a9b 12000000 		.4byte	.LBB55
 3122 0a9f 12000000 		.4byte	.LBE55-.LBB55
 3123 0aa3 16       		.uleb128 0x16
 3124 0aa4 0C030000 		.4byte	0x30c
 3125 0aa8 02       		.uleb128 0x2
 3126 0aa9 91       		.byte	0x91
 3127 0aaa 6C       		.sleb128 -20
 3128 0aab 00       		.byte	0
 3129 0aac 00       		.byte	0
 3130 0aad 00       		.byte	0
 3131 0aae 07       		.uleb128 0x7
 3132 0aaf F6010000 		.4byte	0x1f6
 3133 0ab3 20       		.uleb128 0x20
 3134 0ab4 37010000 		.4byte	.LASF113
 3135 0ab8 01       		.byte	0x1
 3136 0ab9 D703     		.2byte	0x3d7
 3137 0abb 00000000 		.4byte	.LFB155
 3138 0abf 3E000000 		.4byte	.LFE155-.LFB155
 3139 0ac3 01       		.uleb128 0x1
 3140 0ac4 9C       		.byte	0x9c
 3141 0ac5 1A0B0000 		.4byte	0xb1a
 3142 0ac9 18       		.uleb128 0x18
 3143 0aca 3F040000 		.4byte	.LASF62
 3144 0ace 01       		.byte	0x1
 3145 0acf D703     		.2byte	0x3d7
 3146 0ad1 F6010000 		.4byte	0x1f6
 3147 0ad5 02       		.uleb128 0x2
 3148 0ad6 91       		.byte	0x91
 3149 0ad7 6C       		.sleb128 -20
 3150 0ad8 18       		.uleb128 0x18
 3151 0ad9 54040000 		.4byte	.LASF99
 3152 0add 01       		.byte	0x1
 3153 0ade D703     		.2byte	0x3d7
 3154 0ae0 9A000000 		.4byte	0x9a
 3155 0ae4 02       		.uleb128 0x2
 3156 0ae5 91       		.byte	0x91
 3157 0ae6 68       		.sleb128 -24
 3158 0ae7 19       		.uleb128 0x19
 3159 0ae8 43070000 		.4byte	.LASF52
 3160 0aec 01       		.byte	0x1
 3161 0aed D903     		.2byte	0x3d9
 3162 0aef 09070000 		.4byte	0x709
 3163 0af3 02       		.uleb128 0x2
 3164 0af4 91       		.byte	0x91
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 77


 3165 0af5 74       		.sleb128 -12
 3166 0af6 14       		.uleb128 0x14
 3167 0af7 00030000 		.4byte	0x300
 3168 0afb 14000000 		.4byte	.LBB56
 3169 0aff 12000000 		.4byte	.LBE56-.LBB56
 3170 0b03 01       		.byte	0x1
 3171 0b04 DB03     		.2byte	0x3db
 3172 0b06 15       		.uleb128 0x15
 3173 0b07 14000000 		.4byte	.LBB57
 3174 0b0b 12000000 		.4byte	.LBE57-.LBB57
 3175 0b0f 16       		.uleb128 0x16
 3176 0b10 0C030000 		.4byte	0x30c
 3177 0b14 02       		.uleb128 0x2
 3178 0b15 91       		.byte	0x91
 3179 0b16 70       		.sleb128 -16
 3180 0b17 00       		.byte	0
 3181 0b18 00       		.byte	0
 3182 0b19 00       		.byte	0
 3183 0b1a 13       		.uleb128 0x13
 3184 0b1b DB050000 		.4byte	.LASF100
 3185 0b1f 01       		.byte	0x1
 3186 0b20 83       		.byte	0x83
 3187 0b21 D0010000 		.4byte	0x1d0
 3188 0b25 05       		.uleb128 0x5
 3189 0b26 03       		.byte	0x3
 3190 0b27 00000000 		.4byte	xActiveTimerList1
 3191 0b2b 13       		.uleb128 0x13
 3192 0b2c ED050000 		.4byte	.LASF101
 3193 0b30 01       		.byte	0x1
 3194 0b31 84       		.byte	0x84
 3195 0b32 D0010000 		.4byte	0x1d0
 3196 0b36 05       		.uleb128 0x5
 3197 0b37 03       		.byte	0x3
 3198 0b38 14000000 		.4byte	xActiveTimerList2
 3199 0b3c 13       		.uleb128 0x13
 3200 0b3d F1010000 		.4byte	.LASF102
 3201 0b41 01       		.byte	0x1
 3202 0b42 85       		.byte	0x85
 3203 0b43 C0090000 		.4byte	0x9c0
 3204 0b47 05       		.uleb128 0x5
 3205 0b48 03       		.byte	0x3
 3206 0b49 28000000 		.4byte	pxCurrentTimerList
 3207 0b4d 13       		.uleb128 0x13
 3208 0b4e 52050000 		.4byte	.LASF103
 3209 0b52 01       		.byte	0x1
 3210 0b53 86       		.byte	0x86
 3211 0b54 C0090000 		.4byte	0x9c0
 3212 0b58 05       		.uleb128 0x5
 3213 0b59 03       		.byte	0x3
 3214 0b5a 2C000000 		.4byte	pxOverflowTimerList
 3215 0b5e 13       		.uleb128 0x13
 3216 0b5f CF050000 		.4byte	.LASF104
 3217 0b63 01       		.byte	0x1
 3218 0b64 89       		.byte	0x89
 3219 0b65 EB010000 		.4byte	0x1eb
 3220 0b69 05       		.uleb128 0x5
 3221 0b6a 03       		.byte	0x3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 78


 3222 0b6b 30000000 		.4byte	xTimerQueue
 3223 0b6f 13       		.uleb128 0x13
 3224 0b70 C0040000 		.4byte	.LASF105
 3225 0b74 01       		.byte	0x1
 3226 0b75 8A       		.byte	0x8a
 3227 0b76 DB010000 		.4byte	0x1db
 3228 0b7a 05       		.uleb128 0x5
 3229 0b7b 03       		.byte	0x3
 3230 0b7c 34000000 		.4byte	xTimerTaskHandle
 3231 0b80 21       		.uleb128 0x21
 3232 0b81 36070000 		.4byte	.LASF114
 3233 0b85 09       		.byte	0x9
 3234 0b86 F907     		.2byte	0x7f9
 3235 0b88 8C0B0000 		.4byte	0xb8c
 3236 0b8c 0A       		.uleb128 0xa
 3237 0b8d B9000000 		.4byte	0xb9
 3238 0b91 00       		.byte	0
 3239              		.section	.debug_abbrev,"",%progbits
 3240              	.Ldebug_abbrev0:
 3241 0000 01       		.uleb128 0x1
 3242 0001 11       		.uleb128 0x11
 3243 0002 01       		.byte	0x1
 3244 0003 25       		.uleb128 0x25
 3245 0004 0E       		.uleb128 0xe
 3246 0005 13       		.uleb128 0x13
 3247 0006 0B       		.uleb128 0xb
 3248 0007 03       		.uleb128 0x3
 3249 0008 0E       		.uleb128 0xe
 3250 0009 1B       		.uleb128 0x1b
 3251 000a 0E       		.uleb128 0xe
 3252 000b 55       		.uleb128 0x55
 3253 000c 17       		.uleb128 0x17
 3254 000d 11       		.uleb128 0x11
 3255 000e 01       		.uleb128 0x1
 3256 000f 10       		.uleb128 0x10
 3257 0010 17       		.uleb128 0x17
 3258 0011 00       		.byte	0
 3259 0012 00       		.byte	0
 3260 0013 02       		.uleb128 0x2
 3261 0014 24       		.uleb128 0x24
 3262 0015 00       		.byte	0
 3263 0016 0B       		.uleb128 0xb
 3264 0017 0B       		.uleb128 0xb
 3265 0018 3E       		.uleb128 0x3e
 3266 0019 0B       		.uleb128 0xb
 3267 001a 03       		.uleb128 0x3
 3268 001b 0E       		.uleb128 0xe
 3269 001c 00       		.byte	0
 3270 001d 00       		.byte	0
 3271 001e 03       		.uleb128 0x3
 3272 001f 24       		.uleb128 0x24
 3273 0020 00       		.byte	0
 3274 0021 0B       		.uleb128 0xb
 3275 0022 0B       		.uleb128 0xb
 3276 0023 3E       		.uleb128 0x3e
 3277 0024 0B       		.uleb128 0xb
 3278 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 79


 3279 0026 08       		.uleb128 0x8
 3280 0027 00       		.byte	0
 3281 0028 00       		.byte	0
 3282 0029 04       		.uleb128 0x4
 3283 002a 16       		.uleb128 0x16
 3284 002b 00       		.byte	0
 3285 002c 03       		.uleb128 0x3
 3286 002d 0E       		.uleb128 0xe
 3287 002e 3A       		.uleb128 0x3a
 3288 002f 0B       		.uleb128 0xb
 3289 0030 3B       		.uleb128 0x3b
 3290 0031 0B       		.uleb128 0xb
 3291 0032 49       		.uleb128 0x49
 3292 0033 13       		.uleb128 0x13
 3293 0034 00       		.byte	0
 3294 0035 00       		.byte	0
 3295 0036 05       		.uleb128 0x5
 3296 0037 0F       		.uleb128 0xf
 3297 0038 00       		.byte	0
 3298 0039 0B       		.uleb128 0xb
 3299 003a 0B       		.uleb128 0xb
 3300 003b 00       		.byte	0
 3301 003c 00       		.byte	0
 3302 003d 06       		.uleb128 0x6
 3303 003e 0F       		.uleb128 0xf
 3304 003f 00       		.byte	0
 3305 0040 0B       		.uleb128 0xb
 3306 0041 0B       		.uleb128 0xb
 3307 0042 49       		.uleb128 0x49
 3308 0043 13       		.uleb128 0x13
 3309 0044 00       		.byte	0
 3310 0045 00       		.byte	0
 3311 0046 07       		.uleb128 0x7
 3312 0047 26       		.uleb128 0x26
 3313 0048 00       		.byte	0
 3314 0049 49       		.uleb128 0x49
 3315 004a 13       		.uleb128 0x13
 3316 004b 00       		.byte	0
 3317 004c 00       		.byte	0
 3318 004d 08       		.uleb128 0x8
 3319 004e 13       		.uleb128 0x13
 3320 004f 01       		.byte	0x1
 3321 0050 03       		.uleb128 0x3
 3322 0051 0E       		.uleb128 0xe
 3323 0052 0B       		.uleb128 0xb
 3324 0053 0B       		.uleb128 0xb
 3325 0054 3A       		.uleb128 0x3a
 3326 0055 0B       		.uleb128 0xb
 3327 0056 3B       		.uleb128 0x3b
 3328 0057 0B       		.uleb128 0xb
 3329 0058 01       		.uleb128 0x1
 3330 0059 13       		.uleb128 0x13
 3331 005a 00       		.byte	0
 3332 005b 00       		.byte	0
 3333 005c 09       		.uleb128 0x9
 3334 005d 0D       		.uleb128 0xd
 3335 005e 00       		.byte	0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 80


 3336 005f 03       		.uleb128 0x3
 3337 0060 0E       		.uleb128 0xe
 3338 0061 3A       		.uleb128 0x3a
 3339 0062 0B       		.uleb128 0xb
 3340 0063 3B       		.uleb128 0x3b
 3341 0064 0B       		.uleb128 0xb
 3342 0065 49       		.uleb128 0x49
 3343 0066 13       		.uleb128 0x13
 3344 0067 38       		.uleb128 0x38
 3345 0068 0B       		.uleb128 0xb
 3346 0069 00       		.byte	0
 3347 006a 00       		.byte	0
 3348 006b 0A       		.uleb128 0xa
 3349 006c 35       		.uleb128 0x35
 3350 006d 00       		.byte	0
 3351 006e 49       		.uleb128 0x49
 3352 006f 13       		.uleb128 0x13
 3353 0070 00       		.byte	0
 3354 0071 00       		.byte	0
 3355 0072 0B       		.uleb128 0xb
 3356 0073 15       		.uleb128 0x15
 3357 0074 01       		.byte	0x1
 3358 0075 27       		.uleb128 0x27
 3359 0076 19       		.uleb128 0x19
 3360 0077 01       		.uleb128 0x1
 3361 0078 13       		.uleb128 0x13
 3362 0079 00       		.byte	0
 3363 007a 00       		.byte	0
 3364 007b 0C       		.uleb128 0xc
 3365 007c 05       		.uleb128 0x5
 3366 007d 00       		.byte	0
 3367 007e 49       		.uleb128 0x49
 3368 007f 13       		.uleb128 0x13
 3369 0080 00       		.byte	0
 3370 0081 00       		.byte	0
 3371 0082 0D       		.uleb128 0xd
 3372 0083 17       		.uleb128 0x17
 3373 0084 01       		.byte	0x1
 3374 0085 0B       		.uleb128 0xb
 3375 0086 0B       		.uleb128 0xb
 3376 0087 3A       		.uleb128 0x3a
 3377 0088 0B       		.uleb128 0xb
 3378 0089 3B       		.uleb128 0x3b
 3379 008a 0B       		.uleb128 0xb
 3380 008b 01       		.uleb128 0x1
 3381 008c 13       		.uleb128 0x13
 3382 008d 00       		.byte	0
 3383 008e 00       		.byte	0
 3384 008f 0E       		.uleb128 0xe
 3385 0090 0D       		.uleb128 0xd
 3386 0091 00       		.byte	0
 3387 0092 03       		.uleb128 0x3
 3388 0093 0E       		.uleb128 0xe
 3389 0094 3A       		.uleb128 0x3a
 3390 0095 0B       		.uleb128 0xb
 3391 0096 3B       		.uleb128 0x3b
 3392 0097 0B       		.uleb128 0xb
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 81


 3393 0098 49       		.uleb128 0x49
 3394 0099 13       		.uleb128 0x13
 3395 009a 00       		.byte	0
 3396 009b 00       		.byte	0
 3397 009c 0F       		.uleb128 0xf
 3398 009d 0D       		.uleb128 0xd
 3399 009e 00       		.byte	0
 3400 009f 03       		.uleb128 0x3
 3401 00a0 08       		.uleb128 0x8
 3402 00a1 3A       		.uleb128 0x3a
 3403 00a2 0B       		.uleb128 0xb
 3404 00a3 3B       		.uleb128 0x3b
 3405 00a4 0B       		.uleb128 0xb
 3406 00a5 49       		.uleb128 0x49
 3407 00a6 13       		.uleb128 0x13
 3408 00a7 38       		.uleb128 0x38
 3409 00a8 0B       		.uleb128 0xb
 3410 00a9 00       		.byte	0
 3411 00aa 00       		.byte	0
 3412 00ab 10       		.uleb128 0x10
 3413 00ac 2E       		.uleb128 0x2e
 3414 00ad 01       		.byte	0x1
 3415 00ae 03       		.uleb128 0x3
 3416 00af 0E       		.uleb128 0xe
 3417 00b0 3A       		.uleb128 0x3a
 3418 00b1 0B       		.uleb128 0xb
 3419 00b2 3B       		.uleb128 0x3b
 3420 00b3 0B       		.uleb128 0xb
 3421 00b4 27       		.uleb128 0x27
 3422 00b5 19       		.uleb128 0x19
 3423 00b6 20       		.uleb128 0x20
 3424 00b7 0B       		.uleb128 0xb
 3425 00b8 01       		.uleb128 0x1
 3426 00b9 13       		.uleb128 0x13
 3427 00ba 00       		.byte	0
 3428 00bb 00       		.byte	0
 3429 00bc 11       		.uleb128 0x11
 3430 00bd 34       		.uleb128 0x34
 3431 00be 00       		.byte	0
 3432 00bf 03       		.uleb128 0x3
 3433 00c0 0E       		.uleb128 0xe
 3434 00c1 3A       		.uleb128 0x3a
 3435 00c2 0B       		.uleb128 0xb
 3436 00c3 3B       		.uleb128 0x3b
 3437 00c4 0B       		.uleb128 0xb
 3438 00c5 49       		.uleb128 0x49
 3439 00c6 13       		.uleb128 0x13
 3440 00c7 00       		.byte	0
 3441 00c8 00       		.byte	0
 3442 00c9 12       		.uleb128 0x12
 3443 00ca 2E       		.uleb128 0x2e
 3444 00cb 01       		.byte	0x1
 3445 00cc 3F       		.uleb128 0x3f
 3446 00cd 19       		.uleb128 0x19
 3447 00ce 03       		.uleb128 0x3
 3448 00cf 0E       		.uleb128 0xe
 3449 00d0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 82


 3450 00d1 0B       		.uleb128 0xb
 3451 00d2 3B       		.uleb128 0x3b
 3452 00d3 0B       		.uleb128 0xb
 3453 00d4 27       		.uleb128 0x27
 3454 00d5 19       		.uleb128 0x19
 3455 00d6 49       		.uleb128 0x49
 3456 00d7 13       		.uleb128 0x13
 3457 00d8 11       		.uleb128 0x11
 3458 00d9 01       		.uleb128 0x1
 3459 00da 12       		.uleb128 0x12
 3460 00db 06       		.uleb128 0x6
 3461 00dc 40       		.uleb128 0x40
 3462 00dd 18       		.uleb128 0x18
 3463 00de 9642     		.uleb128 0x2116
 3464 00e0 19       		.uleb128 0x19
 3465 00e1 01       		.uleb128 0x1
 3466 00e2 13       		.uleb128 0x13
 3467 00e3 00       		.byte	0
 3468 00e4 00       		.byte	0
 3469 00e5 13       		.uleb128 0x13
 3470 00e6 34       		.uleb128 0x34
 3471 00e7 00       		.byte	0
 3472 00e8 03       		.uleb128 0x3
 3473 00e9 0E       		.uleb128 0xe
 3474 00ea 3A       		.uleb128 0x3a
 3475 00eb 0B       		.uleb128 0xb
 3476 00ec 3B       		.uleb128 0x3b
 3477 00ed 0B       		.uleb128 0xb
 3478 00ee 49       		.uleb128 0x49
 3479 00ef 13       		.uleb128 0x13
 3480 00f0 02       		.uleb128 0x2
 3481 00f1 18       		.uleb128 0x18
 3482 00f2 00       		.byte	0
 3483 00f3 00       		.byte	0
 3484 00f4 14       		.uleb128 0x14
 3485 00f5 1D       		.uleb128 0x1d
 3486 00f6 01       		.byte	0x1
 3487 00f7 31       		.uleb128 0x31
 3488 00f8 13       		.uleb128 0x13
 3489 00f9 11       		.uleb128 0x11
 3490 00fa 01       		.uleb128 0x1
 3491 00fb 12       		.uleb128 0x12
 3492 00fc 06       		.uleb128 0x6
 3493 00fd 58       		.uleb128 0x58
 3494 00fe 0B       		.uleb128 0xb
 3495 00ff 59       		.uleb128 0x59
 3496 0100 05       		.uleb128 0x5
 3497 0101 00       		.byte	0
 3498 0102 00       		.byte	0
 3499 0103 15       		.uleb128 0x15
 3500 0104 0B       		.uleb128 0xb
 3501 0105 01       		.byte	0x1
 3502 0106 11       		.uleb128 0x11
 3503 0107 01       		.uleb128 0x1
 3504 0108 12       		.uleb128 0x12
 3505 0109 06       		.uleb128 0x6
 3506 010a 00       		.byte	0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 83


 3507 010b 00       		.byte	0
 3508 010c 16       		.uleb128 0x16
 3509 010d 34       		.uleb128 0x34
 3510 010e 00       		.byte	0
 3511 010f 31       		.uleb128 0x31
 3512 0110 13       		.uleb128 0x13
 3513 0111 02       		.uleb128 0x2
 3514 0112 18       		.uleb128 0x18
 3515 0113 00       		.byte	0
 3516 0114 00       		.byte	0
 3517 0115 17       		.uleb128 0x17
 3518 0116 2E       		.uleb128 0x2e
 3519 0117 01       		.byte	0x1
 3520 0118 3F       		.uleb128 0x3f
 3521 0119 19       		.uleb128 0x19
 3522 011a 03       		.uleb128 0x3
 3523 011b 0E       		.uleb128 0xe
 3524 011c 3A       		.uleb128 0x3a
 3525 011d 0B       		.uleb128 0xb
 3526 011e 3B       		.uleb128 0x3b
 3527 011f 05       		.uleb128 0x5
 3528 0120 27       		.uleb128 0x27
 3529 0121 19       		.uleb128 0x19
 3530 0122 49       		.uleb128 0x49
 3531 0123 13       		.uleb128 0x13
 3532 0124 11       		.uleb128 0x11
 3533 0125 01       		.uleb128 0x1
 3534 0126 12       		.uleb128 0x12
 3535 0127 06       		.uleb128 0x6
 3536 0128 40       		.uleb128 0x40
 3537 0129 18       		.uleb128 0x18
 3538 012a 9642     		.uleb128 0x2116
 3539 012c 19       		.uleb128 0x19
 3540 012d 01       		.uleb128 0x1
 3541 012e 13       		.uleb128 0x13
 3542 012f 00       		.byte	0
 3543 0130 00       		.byte	0
 3544 0131 18       		.uleb128 0x18
 3545 0132 05       		.uleb128 0x5
 3546 0133 00       		.byte	0
 3547 0134 03       		.uleb128 0x3
 3548 0135 0E       		.uleb128 0xe
 3549 0136 3A       		.uleb128 0x3a
 3550 0137 0B       		.uleb128 0xb
 3551 0138 3B       		.uleb128 0x3b
 3552 0139 05       		.uleb128 0x5
 3553 013a 49       		.uleb128 0x49
 3554 013b 13       		.uleb128 0x13
 3555 013c 02       		.uleb128 0x2
 3556 013d 18       		.uleb128 0x18
 3557 013e 00       		.byte	0
 3558 013f 00       		.byte	0
 3559 0140 19       		.uleb128 0x19
 3560 0141 34       		.uleb128 0x34
 3561 0142 00       		.byte	0
 3562 0143 03       		.uleb128 0x3
 3563 0144 0E       		.uleb128 0xe
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 84


 3564 0145 3A       		.uleb128 0x3a
 3565 0146 0B       		.uleb128 0xb
 3566 0147 3B       		.uleb128 0x3b
 3567 0148 05       		.uleb128 0x5
 3568 0149 49       		.uleb128 0x49
 3569 014a 13       		.uleb128 0x13
 3570 014b 02       		.uleb128 0x2
 3571 014c 18       		.uleb128 0x18
 3572 014d 00       		.byte	0
 3573 014e 00       		.byte	0
 3574 014f 1A       		.uleb128 0x1a
 3575 0150 2E       		.uleb128 0x2e
 3576 0151 01       		.byte	0x1
 3577 0152 03       		.uleb128 0x3
 3578 0153 0E       		.uleb128 0xe
 3579 0154 3A       		.uleb128 0x3a
 3580 0155 0B       		.uleb128 0xb
 3581 0156 3B       		.uleb128 0x3b
 3582 0157 05       		.uleb128 0x5
 3583 0158 27       		.uleb128 0x27
 3584 0159 19       		.uleb128 0x19
 3585 015a 11       		.uleb128 0x11
 3586 015b 01       		.uleb128 0x1
 3587 015c 12       		.uleb128 0x12
 3588 015d 06       		.uleb128 0x6
 3589 015e 40       		.uleb128 0x40
 3590 015f 18       		.uleb128 0x18
 3591 0160 9642     		.uleb128 0x2116
 3592 0162 19       		.uleb128 0x19
 3593 0163 01       		.uleb128 0x1
 3594 0164 13       		.uleb128 0x13
 3595 0165 00       		.byte	0
 3596 0166 00       		.byte	0
 3597 0167 1B       		.uleb128 0x1b
 3598 0168 2E       		.uleb128 0x2e
 3599 0169 01       		.byte	0x1
 3600 016a 3F       		.uleb128 0x3f
 3601 016b 19       		.uleb128 0x19
 3602 016c 03       		.uleb128 0x3
 3603 016d 0E       		.uleb128 0xe
 3604 016e 3A       		.uleb128 0x3a
 3605 016f 0B       		.uleb128 0xb
 3606 0170 3B       		.uleb128 0x3b
 3607 0171 05       		.uleb128 0x5
 3608 0172 27       		.uleb128 0x27
 3609 0173 19       		.uleb128 0x19
 3610 0174 49       		.uleb128 0x49
 3611 0175 13       		.uleb128 0x13
 3612 0176 11       		.uleb128 0x11
 3613 0177 01       		.uleb128 0x1
 3614 0178 12       		.uleb128 0x12
 3615 0179 06       		.uleb128 0x6
 3616 017a 40       		.uleb128 0x40
 3617 017b 18       		.uleb128 0x18
 3618 017c 9742     		.uleb128 0x2117
 3619 017e 19       		.uleb128 0x19
 3620 017f 01       		.uleb128 0x1
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 85


 3621 0180 13       		.uleb128 0x13
 3622 0181 00       		.byte	0
 3623 0182 00       		.byte	0
 3624 0183 1C       		.uleb128 0x1c
 3625 0184 2E       		.uleb128 0x2e
 3626 0185 01       		.byte	0x1
 3627 0186 03       		.uleb128 0x3
 3628 0187 0E       		.uleb128 0xe
 3629 0188 3A       		.uleb128 0x3a
 3630 0189 0B       		.uleb128 0xb
 3631 018a 3B       		.uleb128 0x3b
 3632 018b 05       		.uleb128 0x5
 3633 018c 27       		.uleb128 0x27
 3634 018d 19       		.uleb128 0x19
 3635 018e 49       		.uleb128 0x49
 3636 018f 13       		.uleb128 0x13
 3637 0190 11       		.uleb128 0x11
 3638 0191 01       		.uleb128 0x1
 3639 0192 12       		.uleb128 0x12
 3640 0193 06       		.uleb128 0x6
 3641 0194 40       		.uleb128 0x40
 3642 0195 18       		.uleb128 0x18
 3643 0196 9742     		.uleb128 0x2117
 3644 0198 19       		.uleb128 0x19
 3645 0199 01       		.uleb128 0x1
 3646 019a 13       		.uleb128 0x13
 3647 019b 00       		.byte	0
 3648 019c 00       		.byte	0
 3649 019d 1D       		.uleb128 0x1d
 3650 019e 2E       		.uleb128 0x2e
 3651 019f 01       		.byte	0x1
 3652 01a0 03       		.uleb128 0x3
 3653 01a1 0E       		.uleb128 0xe
 3654 01a2 3A       		.uleb128 0x3a
 3655 01a3 0B       		.uleb128 0xb
 3656 01a4 3B       		.uleb128 0x3b
 3657 01a5 05       		.uleb128 0x5
 3658 01a6 27       		.uleb128 0x27
 3659 01a7 19       		.uleb128 0x19
 3660 01a8 49       		.uleb128 0x49
 3661 01a9 13       		.uleb128 0x13
 3662 01aa 11       		.uleb128 0x11
 3663 01ab 01       		.uleb128 0x1
 3664 01ac 12       		.uleb128 0x12
 3665 01ad 06       		.uleb128 0x6
 3666 01ae 40       		.uleb128 0x40
 3667 01af 18       		.uleb128 0x18
 3668 01b0 9642     		.uleb128 0x2116
 3669 01b2 19       		.uleb128 0x19
 3670 01b3 01       		.uleb128 0x1
 3671 01b4 13       		.uleb128 0x13
 3672 01b5 00       		.byte	0
 3673 01b6 00       		.byte	0
 3674 01b7 1E       		.uleb128 0x1e
 3675 01b8 1D       		.uleb128 0x1d
 3676 01b9 01       		.byte	0x1
 3677 01ba 31       		.uleb128 0x31
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 86


 3678 01bb 13       		.uleb128 0x13
 3679 01bc 11       		.uleb128 0x11
 3680 01bd 01       		.uleb128 0x1
 3681 01be 12       		.uleb128 0x12
 3682 01bf 06       		.uleb128 0x6
 3683 01c0 58       		.uleb128 0x58
 3684 01c1 0B       		.uleb128 0xb
 3685 01c2 59       		.uleb128 0x59
 3686 01c3 05       		.uleb128 0x5
 3687 01c4 01       		.uleb128 0x1
 3688 01c5 13       		.uleb128 0x13
 3689 01c6 00       		.byte	0
 3690 01c7 00       		.byte	0
 3691 01c8 1F       		.uleb128 0x1f
 3692 01c9 2E       		.uleb128 0x2e
 3693 01ca 00       		.byte	0
 3694 01cb 03       		.uleb128 0x3
 3695 01cc 0E       		.uleb128 0xe
 3696 01cd 3A       		.uleb128 0x3a
 3697 01ce 0B       		.uleb128 0xb
 3698 01cf 3B       		.uleb128 0x3b
 3699 01d0 05       		.uleb128 0x5
 3700 01d1 27       		.uleb128 0x27
 3701 01d2 19       		.uleb128 0x19
 3702 01d3 11       		.uleb128 0x11
 3703 01d4 01       		.uleb128 0x1
 3704 01d5 12       		.uleb128 0x12
 3705 01d6 06       		.uleb128 0x6
 3706 01d7 40       		.uleb128 0x40
 3707 01d8 18       		.uleb128 0x18
 3708 01d9 9642     		.uleb128 0x2116
 3709 01db 19       		.uleb128 0x19
 3710 01dc 00       		.byte	0
 3711 01dd 00       		.byte	0
 3712 01de 20       		.uleb128 0x20
 3713 01df 2E       		.uleb128 0x2e
 3714 01e0 01       		.byte	0x1
 3715 01e1 3F       		.uleb128 0x3f
 3716 01e2 19       		.uleb128 0x19
 3717 01e3 03       		.uleb128 0x3
 3718 01e4 0E       		.uleb128 0xe
 3719 01e5 3A       		.uleb128 0x3a
 3720 01e6 0B       		.uleb128 0xb
 3721 01e7 3B       		.uleb128 0x3b
 3722 01e8 05       		.uleb128 0x5
 3723 01e9 27       		.uleb128 0x27
 3724 01ea 19       		.uleb128 0x19
 3725 01eb 11       		.uleb128 0x11
 3726 01ec 01       		.uleb128 0x1
 3727 01ed 12       		.uleb128 0x12
 3728 01ee 06       		.uleb128 0x6
 3729 01ef 40       		.uleb128 0x40
 3730 01f0 18       		.uleb128 0x18
 3731 01f1 9642     		.uleb128 0x2116
 3732 01f3 19       		.uleb128 0x19
 3733 01f4 01       		.uleb128 0x1
 3734 01f5 13       		.uleb128 0x13
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 87


 3735 01f6 00       		.byte	0
 3736 01f7 00       		.byte	0
 3737 01f8 21       		.uleb128 0x21
 3738 01f9 34       		.uleb128 0x34
 3739 01fa 00       		.byte	0
 3740 01fb 03       		.uleb128 0x3
 3741 01fc 0E       		.uleb128 0xe
 3742 01fd 3A       		.uleb128 0x3a
 3743 01fe 0B       		.uleb128 0xb
 3744 01ff 3B       		.uleb128 0x3b
 3745 0200 05       		.uleb128 0x5
 3746 0201 49       		.uleb128 0x49
 3747 0202 13       		.uleb128 0x13
 3748 0203 3F       		.uleb128 0x3f
 3749 0204 19       		.uleb128 0x19
 3750 0205 3C       		.uleb128 0x3c
 3751 0206 19       		.uleb128 0x19
 3752 0207 00       		.byte	0
 3753 0208 00       		.byte	0
 3754 0209 00       		.byte	0
 3755              		.section	.debug_aranges,"",%progbits
 3756 0000 B4000000 		.4byte	0xb4
 3757 0004 0200     		.2byte	0x2
 3758 0006 00000000 		.4byte	.Ldebug_info0
 3759 000a 04       		.byte	0x4
 3760 000b 00       		.byte	0
 3761 000c 0000     		.2byte	0
 3762 000e 0000     		.2byte	0
 3763 0010 00000000 		.4byte	.LFB136
 3764 0014 60000000 		.4byte	.LFE136-.LFB136
 3765 0018 00000000 		.4byte	.LFB137
 3766 001c 3A000000 		.4byte	.LFE137-.LFB137
 3767 0020 00000000 		.4byte	.LFB138
 3768 0024 62000000 		.4byte	.LFE138-.LFB138
 3769 0028 00000000 		.4byte	.LFB139
 3770 002c 98000000 		.4byte	.LFE139-.LFB139
 3771 0030 00000000 		.4byte	.LFB140
 3772 0034 38000000 		.4byte	.LFE140-.LFB140
 3773 0038 00000000 		.4byte	.LFB141
 3774 003c 36000000 		.4byte	.LFE141-.LFB141
 3775 0040 00000000 		.4byte	.LFB142
 3776 0044 3A000000 		.4byte	.LFE142-.LFB142
 3777 0048 00000000 		.4byte	.LFB143
 3778 004c 36000000 		.4byte	.LFE143-.LFB143
 3779 0050 00000000 		.4byte	.LFB144
 3780 0054 80000000 		.4byte	.LFE144-.LFB144
 3781 0058 00000000 		.4byte	.LFB145
 3782 005c 24000000 		.4byte	.LFE145-.LFB145
 3783 0060 00000000 		.4byte	.LFB146
 3784 0064 9C000000 		.4byte	.LFE146-.LFB146
 3785 0068 00000000 		.4byte	.LFB147
 3786 006c 48000000 		.4byte	.LFE147-.LFB147
 3787 0070 00000000 		.4byte	.LFB148
 3788 0074 40000000 		.4byte	.LFE148-.LFB148
 3789 0078 00000000 		.4byte	.LFB149
 3790 007c 84000000 		.4byte	.LFE149-.LFB149
 3791 0080 00000000 		.4byte	.LFB150
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 88


 3792 0084 24010000 		.4byte	.LFE150-.LFB150
 3793 0088 00000000 		.4byte	.LFB151
 3794 008c C0000000 		.4byte	.LFE151-.LFB151
 3795 0090 00000000 		.4byte	.LFB152
 3796 0094 6C000000 		.4byte	.LFE152-.LFB152
 3797 0098 00000000 		.4byte	.LFB153
 3798 009c 48000000 		.4byte	.LFE153-.LFB153
 3799 00a0 00000000 		.4byte	.LFB154
 3800 00a4 3E000000 		.4byte	.LFE154-.LFB154
 3801 00a8 00000000 		.4byte	.LFB155
 3802 00ac 3E000000 		.4byte	.LFE155-.LFB155
 3803 00b0 00000000 		.4byte	0
 3804 00b4 00000000 		.4byte	0
 3805              		.section	.debug_ranges,"",%progbits
 3806              	.Ldebug_ranges0:
 3807 0000 00000000 		.4byte	.LFB136
 3808 0004 60000000 		.4byte	.LFE136
 3809 0008 00000000 		.4byte	.LFB137
 3810 000c 3A000000 		.4byte	.LFE137
 3811 0010 00000000 		.4byte	.LFB138
 3812 0014 62000000 		.4byte	.LFE138
 3813 0018 00000000 		.4byte	.LFB139
 3814 001c 98000000 		.4byte	.LFE139
 3815 0020 00000000 		.4byte	.LFB140
 3816 0024 38000000 		.4byte	.LFE140
 3817 0028 00000000 		.4byte	.LFB141
 3818 002c 36000000 		.4byte	.LFE141
 3819 0030 00000000 		.4byte	.LFB142
 3820 0034 3A000000 		.4byte	.LFE142
 3821 0038 00000000 		.4byte	.LFB143
 3822 003c 36000000 		.4byte	.LFE143
 3823 0040 00000000 		.4byte	.LFB144
 3824 0044 80000000 		.4byte	.LFE144
 3825 0048 00000000 		.4byte	.LFB145
 3826 004c 24000000 		.4byte	.LFE145
 3827 0050 00000000 		.4byte	.LFB146
 3828 0054 9C000000 		.4byte	.LFE146
 3829 0058 00000000 		.4byte	.LFB147
 3830 005c 48000000 		.4byte	.LFE147
 3831 0060 00000000 		.4byte	.LFB148
 3832 0064 40000000 		.4byte	.LFE148
 3833 0068 00000000 		.4byte	.LFB149
 3834 006c 84000000 		.4byte	.LFE149
 3835 0070 00000000 		.4byte	.LFB150
 3836 0074 24010000 		.4byte	.LFE150
 3837 0078 00000000 		.4byte	.LFB151
 3838 007c C0000000 		.4byte	.LFE151
 3839 0080 00000000 		.4byte	.LFB152
 3840 0084 6C000000 		.4byte	.LFE152
 3841 0088 00000000 		.4byte	.LFB153
 3842 008c 48000000 		.4byte	.LFE153
 3843 0090 00000000 		.4byte	.LFB154
 3844 0094 3E000000 		.4byte	.LFE154
 3845 0098 00000000 		.4byte	.LFB155
 3846 009c 3E000000 		.4byte	.LFE155
 3847 00a0 00000000 		.4byte	0
 3848 00a4 00000000 		.4byte	0
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 89


 3849              		.section	.debug_line,"",%progbits
 3850              	.Ldebug_line0:
 3851 0000 A5050000 		.section	.debug_str,"MS",%progbits,1
 3851      02004C02 
 3851      00000201 
 3851      FB0E0D00 
 3851      01010101 
 3852              	.LASF53:
 3853 0000 54696D65 		.ascii	"TimerParameter_t\000"
 3853      72506172 
 3853      616D6574 
 3853      65725F74 
 3853      00
 3854              	.LASF96:
 3855 0011 7854696D 		.ascii	"xTimerIsInActiveList\000"
 3855      65724973 
 3855      496E4163 
 3855      74697665 
 3855      4C697374 
 3856              	.LASF31:
 3857 0026 4D696E69 		.ascii	"MiniListItem_t\000"
 3857      4C697374 
 3857      4974656D 
 3857      5F7400
 3858              	.LASF76:
 3859 0035 78526573 		.ascii	"xResult\000"
 3859      756C7400 
 3860              	.LASF107:
 3861 003d 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 3861      72617465 
 3861      645F536F 
 3861      75726365 
 3861      5C50536F 
 3862 006b 315C536F 		.ascii	"1\\Source\\timers.c\000"
 3862      75726365 
 3862      5C74696D 
 3862      6572732E 
 3862      6300
 3863              	.LASF27:
 3864 007d 7076436F 		.ascii	"pvContainer\000"
 3864      6E746169 
 3864      6E657200 
 3865              	.LASF63:
 3866 0089 78436F6D 		.ascii	"xCommandID\000"
 3866      6D616E64 
 3866      494400
 3867              	.LASF39:
 3868 0094 54696D65 		.ascii	"TimerHandle_t\000"
 3868      7248616E 
 3868      646C655F 
 3868      7400
 3869              	.LASF5:
 3870 00a2 73686F72 		.ascii	"short int\000"
 3870      7420696E 
 3870      7400
 3871              	.LASF35:
 3872 00ac 784C6973 		.ascii	"xListEnd\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 90


 3872      74456E64 
 3872      00
 3873              	.LASF74:
 3874 00b5 784E6578 		.ascii	"xNextExpireTime\000"
 3874      74457870 
 3874      69726554 
 3874      696D6500 
 3875              	.LASF42:
 3876 00c5 70635469 		.ascii	"pcTimerName\000"
 3876      6D65724E 
 3876      616D6500 
 3877              	.LASF25:
 3878 00d1 70785072 		.ascii	"pxPrevious\000"
 3878      6576696F 
 3878      757300
 3879              	.LASF88:
 3880 00dc 784E6578 		.ascii	"xNextExpiryTime\000"
 3880      74457870 
 3880      69727954 
 3880      696D6500 
 3881              	.LASF37:
 3882 00ec 5461736B 		.ascii	"TaskHandle_t\000"
 3882      48616E64 
 3882      6C655F74 
 3882      00
 3883              	.LASF43:
 3884 00f9 7854696D 		.ascii	"xTimerListItem\000"
 3884      65724C69 
 3884      73744974 
 3884      656D00
 3885              	.LASF93:
 3886 0108 7852656C 		.ascii	"xReloadTime\000"
 3886      6F616454 
 3886      696D6500 
 3887              	.LASF81:
 3888 0114 7854696D 		.ascii	"xTimerListsWereSwitched\000"
 3888      65724C69 
 3888      73747357 
 3888      65726553 
 3888      77697463 
 3889              	.LASF10:
 3890 012c 5F5F7569 		.ascii	"__uint32_t\000"
 3890      6E743332 
 3890      5F7400
 3891              	.LASF113:
 3892 0137 7654696D 		.ascii	"vTimerSetTimerID\000"
 3892      65725365 
 3892      7454696D 
 3892      65724944 
 3892      00
 3893              	.LASF30:
 3894 0148 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 3894      495F4C49 
 3894      53545F49 
 3894      54454D00 
 3895              	.LASF97:
 3896 0158 70765469 		.ascii	"pvTimerGetTimerID\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 91


 3896      6D657247 
 3896      65745469 
 3896      6D657249 
 3896      4400
 3897              	.LASF73:
 3898 016a 70727650 		.ascii	"prvProcessExpiredTimer\000"
 3898      726F6365 
 3898      73734578 
 3898      70697265 
 3898      6454696D 
 3899              	.LASF80:
 3900 0181 70727650 		.ascii	"prvProcessTimerOrBlockTask\000"
 3900      726F6365 
 3900      73735469 
 3900      6D65724F 
 3900      72426C6F 
 3901              	.LASF109:
 3902 019c 7854696D 		.ascii	"xTimerParameters\000"
 3902      65725061 
 3902      72616D65 
 3902      74657273 
 3902      00
 3903              	.LASF48:
 3904 01ad 7854494D 		.ascii	"xTIMER\000"
 3904      455200
 3905              	.LASF15:
 3906 01b4 75696E74 		.ascii	"uint8_t\000"
 3906      385F7400 
 3907              	.LASF58:
 3908 01bc 7854696D 		.ascii	"xTimerCreate\000"
 3908      65724372 
 3908      65617465 
 3908      00
 3909              	.LASF94:
 3910 01c9 70785465 		.ascii	"pxTemp\000"
 3910      6D7000
 3911              	.LASF72:
 3912 01d0 70727649 		.ascii	"prvInitialiseNewTimer\000"
 3912      6E697469 
 3912      616C6973 
 3912      654E6577 
 3912      54696D65 
 3913              	.LASF60:
 3914 01e6 70784E65 		.ascii	"pxNewTimer\000"
 3914      7754696D 
 3914      657200
 3915              	.LASF102:
 3916 01f1 70784375 		.ascii	"pxCurrentTimerList\000"
 3916      7272656E 
 3916      7454696D 
 3916      65724C69 
 3916      737400
 3917              	.LASF67:
 3918 0204 784D6573 		.ascii	"xMessage\000"
 3918      73616765 
 3918      00
 3919              	.LASF18:
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 92


 3920 020d 666C6F61 		.ascii	"float\000"
 3920      7400
 3921              	.LASF91:
 3922 0213 70727650 		.ascii	"prvProcessReceivedCommands\000"
 3922      726F6365 
 3922      73735265 
 3922      63656976 
 3922      6564436F 
 3923              	.LASF108:
 3924 022e 433A5C55 		.ascii	"C:\\Users\\stijn\\OneDrive\\Documenten\\PSoC Creato"
 3924      73657273 
 3924      5C737469 
 3924      6A6E5C4F 
 3924      6E654472 
 3925 025c 725C4144 		.ascii	"r\\ADC Klodden\\RTOS_I2C_Test.cydsn\000"
 3925      43204B6C 
 3925      6F646465 
 3925      6E5C5254 
 3925      4F535F49 
 3926              	.LASF36:
 3927 027e 4C697374 		.ascii	"List_t\000"
 3927      5F7400
 3928              	.LASF66:
 3929 0285 78546963 		.ascii	"xTicksToWait\000"
 3929      6B73546F 
 3929      57616974 
 3929      00
 3930              	.LASF1:
 3931 0292 6C6F6E67 		.ascii	"long long int\000"
 3931      206C6F6E 
 3931      6720696E 
 3931      7400
 3932              	.LASF22:
 3933 02a0 5469636B 		.ascii	"TickType_t\000"
 3933      54797065 
 3933      5F7400
 3934              	.LASF57:
 3935 02ab 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 3935      65724372 
 3935      65617465 
 3935      54696D65 
 3935      72546173 
 3936              	.LASF14:
 3937 02c1 63686172 		.ascii	"char\000"
 3937      00
 3938              	.LASF106:
 3939 02c6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3939      43313120 
 3939      352E342E 
 3939      31203230 
 3939      31363036 
 3940 02f9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 3940      20726576 
 3940      6973696F 
 3940      6E203233 
 3940      37373135 
 3941 032c 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 93


 3941      70202D6D 
 3941      6670753D 
 3941      66707634 
 3941      2D73702D 
 3942 035f 65637469 		.ascii	"ections -ffat-lto-objects\000"
 3942      6F6E7320 
 3942      2D666661 
 3942      742D6C74 
 3942      6F2D6F62 
 3943              	.LASF47:
 3944 0379 70784361 		.ascii	"pxCallbackFunction\000"
 3944      6C6C6261 
 3944      636B4675 
 3944      6E637469 
 3944      6F6E00
 3945              	.LASF32:
 3946 038c 784C4953 		.ascii	"xLIST\000"
 3946      5400
 3947              	.LASF44:
 3948 0392 7854696D 		.ascii	"xTimerPeriodInTicks\000"
 3948      65725065 
 3948      72696F64 
 3948      496E5469 
 3948      636B7300 
 3949              	.LASF16:
 3950 03a6 696E7433 		.ascii	"int32_t\000"
 3950      325F7400 
 3951              	.LASF49:
 3952 03ae 54696D65 		.ascii	"Timer_t\000"
 3952      725F7400 
 3953              	.LASF7:
 3954 03b6 5F5F7569 		.ascii	"__uint8_t\000"
 3954      6E74385F 
 3954      7400
 3955              	.LASF23:
 3956 03c0 78497465 		.ascii	"xItemValue\000"
 3956      6D56616C 
 3956      756500
 3957              	.LASF112:
 3958 03cb 70727643 		.ascii	"prvCheckForValidListAndQueue\000"
 3958      6865636B 
 3958      466F7256 
 3958      616C6964 
 3958      4C697374 
 3959              	.LASF38:
 3960 03e8 51756575 		.ascii	"QueueHandle_t\000"
 3960      6548616E 
 3960      646C655F 
 3960      7400
 3961              	.LASF84:
 3962 03f6 70727653 		.ascii	"prvSampleTimeNow\000"
 3962      616D706C 
 3962      6554696D 
 3962      654E6F77 
 3962      00
 3963              	.LASF98:
 3964 0407 70765265 		.ascii	"pvReturn\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 94


 3964      7475726E 
 3964      00
 3965              	.LASF29:
 3966 0410 784C4953 		.ascii	"xLIST_ITEM\000"
 3966      545F4954 
 3966      454D00
 3967              	.LASF2:
 3968 041b 6C6F6E67 		.ascii	"long double\000"
 3968      20646F75 
 3968      626C6500 
 3969              	.LASF40:
 3970 0427 54696D65 		.ascii	"TimerCallbackFunction_t\000"
 3970      7243616C 
 3970      6C626163 
 3970      6B46756E 
 3970      6374696F 
 3971              	.LASF62:
 3972 043f 7854696D 		.ascii	"xTimer\000"
 3972      657200
 3973              	.LASF4:
 3974 0446 756E7369 		.ascii	"unsigned char\000"
 3974      676E6564 
 3974      20636861 
 3974      7200
 3975              	.LASF99:
 3976 0454 70764E65 		.ascii	"pvNewID\000"
 3976      77494400 
 3977              	.LASF95:
 3978 045c 7854696D 		.ascii	"xTimerIsTimerActive\000"
 3978      65724973 
 3978      54696D65 
 3978      72416374 
 3978      69766500 
 3979              	.LASF3:
 3980 0470 7369676E 		.ascii	"signed char\000"
 3980      65642063 
 3980      68617200 
 3981              	.LASF71:
 3982 047c 70635469 		.ascii	"pcTimerGetName\000"
 3982      6D657247 
 3982      65744E61 
 3982      6D6500
 3983              	.LASF12:
 3984 048b 6C6F6E67 		.ascii	"long long unsigned int\000"
 3984      206C6F6E 
 3984      6720756E 
 3984      7369676E 
 3984      65642069 
 3985              	.LASF17:
 3986 04a2 75696E74 		.ascii	"uint32_t\000"
 3986      33325F74 
 3986      00
 3987              	.LASF61:
 3988 04ab 7854696D 		.ascii	"xTimerGenericCommand\000"
 3988      65724765 
 3988      6E657269 
 3988      63436F6D 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 95


 3988      6D616E64 
 3989              	.LASF105:
 3990 04c0 7854696D 		.ascii	"xTimerTaskHandle\000"
 3990      65725461 
 3990      736B4861 
 3990      6E646C65 
 3990      00
 3991              	.LASF28:
 3992 04d1 4C697374 		.ascii	"ListItem_t\000"
 3992      4974656D 
 3992      5F7400
 3993              	.LASF20:
 3994 04dc 42617365 		.ascii	"BaseType_t\000"
 3994      54797065 
 3994      5F7400
 3995              	.LASF50:
 3996 04e7 746D7254 		.ascii	"tmrTimerParameters\000"
 3996      696D6572 
 3996      50617261 
 3996      6D657465 
 3996      727300
 3997              	.LASF78:
 3998 04fa 70765061 		.ascii	"pvParameters\000"
 3998      72616D65 
 3998      74657273 
 3998      00
 3999              	.LASF83:
 4000 0507 70727647 		.ascii	"prvGetNextExpireTime\000"
 4000      65744E65 
 4000      78744578 
 4000      70697265 
 4000      54696D65 
 4001              	.LASF56:
 4002 051c 4461656D 		.ascii	"DaemonTaskMessage_t\000"
 4002      6F6E5461 
 4002      736B4D65 
 4002      73736167 
 4002      655F7400 
 4003              	.LASF6:
 4004 0530 73686F72 		.ascii	"short unsigned int\000"
 4004      7420756E 
 4004      7369676E 
 4004      65642069 
 4004      6E7400
 4005              	.LASF64:
 4006 0543 784F7074 		.ascii	"xOptionalValue\000"
 4006      696F6E61 
 4006      6C56616C 
 4006      756500
 4007              	.LASF103:
 4008 0552 70784F76 		.ascii	"pxOverflowTimerList\000"
 4008      6572666C 
 4008      6F775469 
 4008      6D65724C 
 4008      69737400 
 4009              	.LASF79:
 4010 0566 784C6973 		.ascii	"xListWasEmpty\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 96


 4010      74576173 
 4010      456D7074 
 4010      7900
 4011              	.LASF9:
 4012 0574 6C6F6E67 		.ascii	"long int\000"
 4012      20696E74 
 4012      00
 4013              	.LASF24:
 4014 057d 70784E65 		.ascii	"pxNext\000"
 4014      787400
 4015              	.LASF21:
 4016 0584 55426173 		.ascii	"UBaseType_t\000"
 4016      65547970 
 4016      655F7400 
 4017              	.LASF86:
 4018 0590 784C6173 		.ascii	"xLastTime\000"
 4018      7454696D 
 4018      6500
 4019              	.LASF77:
 4020 059a 70727654 		.ascii	"prvTimerTask\000"
 4020      696D6572 
 4020      5461736B 
 4020      00
 4021              	.LASF87:
 4022 05a7 70727649 		.ascii	"prvInsertTimerInActiveList\000"
 4022      6E736572 
 4022      7454696D 
 4022      6572496E 
 4022      41637469 
 4023              	.LASF0:
 4024 05c2 756E7369 		.ascii	"unsigned int\000"
 4024      676E6564 
 4024      20696E74 
 4024      00
 4025              	.LASF104:
 4026 05cf 7854696D 		.ascii	"xTimerQueue\000"
 4026      65725175 
 4026      65756500 
 4027              	.LASF100:
 4028 05db 78416374 		.ascii	"xActiveTimerList1\000"
 4028      69766554 
 4028      696D6572 
 4028      4C697374 
 4028      3100
 4029              	.LASF101:
 4030 05ed 78416374 		.ascii	"xActiveTimerList2\000"
 4030      69766554 
 4030      696D6572 
 4030      4C697374 
 4030      3200
 4031              	.LASF75:
 4032 05ff 7854696D 		.ascii	"xTimeNow\000"
 4032      654E6F77 
 4032      00
 4033              	.LASF11:
 4034 0608 6C6F6E67 		.ascii	"long unsigned int\000"
 4034      20756E73 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 97


 4034      69676E65 
 4034      6420696E 
 4034      7400
 4035              	.LASF19:
 4036 061a 646F7562 		.ascii	"double\000"
 4036      6C6500
 4037              	.LASF82:
 4038 0621 70784C69 		.ascii	"pxListWasEmpty\000"
 4038      73745761 
 4038      73456D70 
 4038      747900
 4039              	.LASF55:
 4040 0630 784D6573 		.ascii	"xMessageID\000"
 4040      73616765 
 4040      494400
 4041              	.LASF33:
 4042 063b 75784E75 		.ascii	"uxNumberOfItems\000"
 4042      6D626572 
 4042      4F664974 
 4042      656D7300 
 4043              	.LASF41:
 4044 064b 746D7254 		.ascii	"tmrTimerControl\000"
 4044      696D6572 
 4044      436F6E74 
 4044      726F6C00 
 4045              	.LASF8:
 4046 065b 5F5F696E 		.ascii	"__int32_t\000"
 4046      7433325F 
 4046      7400
 4047              	.LASF51:
 4048 0665 784D6573 		.ascii	"xMessageValue\000"
 4048      73616765 
 4048      56616C75 
 4048      6500
 4049              	.LASF70:
 4050 0673 7854696D 		.ascii	"xTimerGetExpiryTime\000"
 4050      65724765 
 4050      74457870 
 4050      69727954 
 4050      696D6500 
 4051              	.LASF59:
 4052 0687 78526574 		.ascii	"xReturn\000"
 4052      75726E00 
 4053              	.LASF13:
 4054 068f 73697A65 		.ascii	"sizetype\000"
 4054      74797065 
 4054      00
 4055              	.LASF45:
 4056 0698 75784175 		.ascii	"uxAutoReload\000"
 4056      746F5265 
 4056      6C6F6164 
 4056      00
 4057              	.LASF65:
 4058 06a5 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 4058      67686572 
 4058      5072696F 
 4058      72697479 
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 98


 4058      5461736B 
 4059              	.LASF90:
 4060 06bf 7850726F 		.ascii	"xProcessTimerNow\000"
 4060      63657373 
 4060      54696D65 
 4060      724E6F77 
 4060      00
 4061              	.LASF26:
 4062 06d0 70764F77 		.ascii	"pvOwner\000"
 4062      6E657200 
 4063              	.LASF54:
 4064 06d8 746D7254 		.ascii	"tmrTimerQueueMessage\000"
 4064      696D6572 
 4064      51756575 
 4064      654D6573 
 4064      73616765 
 4065              	.LASF69:
 4066 06ed 7854696D 		.ascii	"xTimerGetPeriod\000"
 4066      65724765 
 4066      74506572 
 4066      696F6400 
 4067              	.LASF110:
 4068 06fd 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 4068      74526169 
 4068      73654241 
 4068      53455052 
 4068      4900
 4069              	.LASF68:
 4070 070f 7854696D 		.ascii	"xTimerGetTimerDaemonTaskHandle\000"
 4070      65724765 
 4070      7454696D 
 4070      65724461 
 4070      656D6F6E 
 4071              	.LASF34:
 4072 072e 7078496E 		.ascii	"pxIndex\000"
 4072      64657800 
 4073              	.LASF114:
 4074 0736 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4074      52784275 
 4074      66666572 
 4074      00
 4075              	.LASF52:
 4076 0743 70785469 		.ascii	"pxTimer\000"
 4076      6D657200 
 4077              	.LASF89:
 4078 074b 78436F6D 		.ascii	"xCommandTime\000"
 4078      6D616E64 
 4078      54696D65 
 4078      00
 4079              	.LASF92:
 4080 0758 70727653 		.ascii	"prvSwitchTimerLists\000"
 4080      77697463 
 4080      6854696D 
 4080      65724C69 
 4080      73747300 
 4081              	.LASF85:
 4082 076c 70785469 		.ascii	"pxTimerListsWereSwitched\000"
ARM GAS  C:\Users\stijn\AppData\Local\Temp\cc48gVaR.s 			page 99


 4082      6D65724C 
 4082      69737473 
 4082      57657265 
 4082      53776974 
 4083              	.LASF46:
 4084 0785 70765469 		.ascii	"pvTimerID\000"
 4084      6D657249 
 4084      4400
 4085              	.LASF111:
 4086 078f 756C4E65 		.ascii	"ulNewBASEPRI\000"
 4086      77424153 
 4086      45505249 
 4086      00
 4087              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
